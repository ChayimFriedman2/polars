var searchIndex = new Map(JSON.parse('[\
["polars",{"t":"","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","StructChunked","__clone_box","_apply_fields","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add","add","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter","amortized_iter_with_name","amortized_iter_with_name","any","any_kleene","append","apply","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_amortized_generic","apply_amortized_same_type","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_into_string_amortized","apply_kernel","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_inner","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values_generic","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arg_unique","arithmetic","as_array","as_binary","as_binary","as_list","as_ref","as_ref_dtype","as_string","as_string","binary_zip_and_apply_amortized","bitand","bitand","bitand","bitor","bitor","bitor","bitxor","bitxor","bitxor","borrow","borrow","borrow_mut","borrow_mut","builder","cast","cast","cast_and_apply_in_place","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","deref","deref_mut","deref_mut","div","div","div","div","divide","drop","drop","drop","drop_nulls","dtype","equal","equal","equal","equal","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","explode_and_offsets","explode_and_offsets","extend","field_by_name","fields_as_series","fill_null_with_values","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","first_non_null","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_amortized","for_each_amortized","from","from","from","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iterator_par","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_series","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_like","full_null_with_dtype","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_row_encoded","get_row_encoded_array","get_unchecked","get_values_size","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples_perfect","gt","gt","gt","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","has_nulls","head","init","init","init_rand","inner_dtype","inner_dtype","interior_mut_metadata","into","into","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_no_null_iter","into_series","into_series","into_time","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","max","max","max_reduce","max_reduce","max_reduce","max_reduce","mean","mean","median","median","median","median_reduce","median_reduce","median_reduce","merge_metadata","metadata","metadata","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","min","min_max","min_reduce","min_reduce","min_reduce","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_chunks","n_unique","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","object","offsets","offsets","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","rem","rem","rem","rem","remainder","rename","reverse","reverse","reverse","reverse","reverse","reverse","reverse","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","scatter","scatter","scatter_single","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","scatter_with","set","set","set","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shrink_to_fit","slice","slice","sort","sort","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","sort_with","sort_with","split_at","split_at","std","std_reduce","std_reduce","std_reduce","struct_fields","sub","sub","sub","sub","subtract","sum","sum","sum_reduce","sum_reduce","sum_reduce","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_logical","to_ndarray","to_ndarray","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_amortized_generic","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_fields","try_apply_generic","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","unique","unique","unique","unique","unique","unnest","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","width","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_outer_validity","with_outer_validity_chunked","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_outer_validity","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_option","append_option","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_value","append_value","append_value","append_value","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","fixed_size_list","from","from","from","from","from","from","from","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","init","init","init","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","into","into","into","into","list","new","new","new","new","new","new","new","new","new","new","new","new_with_values_type","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","init","init","init","into","into","into","into_iter","into_iter","into_iter","new","new","next","next","next","next_back","next_back","next_back","par","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","FAST_EXPLODE_LIST","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","collect_cheap_metadata","complement","complement","contains","contains","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","difference","disabled","distinct_count","distinct_count","distinct_count","distinct_count_opt","drop","drop","drop","drop","drop","drop","drop","empty","empty","enabled","eq","eq","experimental_enabled","extend","extend","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_name","from_name","get_distinct_count","get_fast_explode_list","get_fast_explode_list","get_flags","get_flags","get_flags","get_max_value","get_min_value","get_mut","get_sorted_flag","init","init","init","init","init","init","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","is_empty","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","iter","iter_names","iter_names","log","logfile","max_value","max_value","max_value","max_value_opt","merge","min_value","min_value","min_value","min_value_opt","new","not","not","read","remove","remove","set","set","set_distinct_count","set_fast_explode_list","set_fast_explode_list","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","set_sorted_flag","sorted","sorted_opt","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","take","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_read","try_write","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_cheap_metadata","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Reinterpret","SlicedArray","Some","SortMultipleOptions","SortOptions","Zero","__clone_box","__clone_box","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","descending","descending","drop","drop","drop","eq","eq","eq","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","fmt","fmt","from","from","from","from","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","hash","hash","init","init","init","into","into","into","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","maintain_order","max","mean","median","min","min_max","multithreaded","multithreaded","n_unique","new","new","new_from_index","not_equal","not_equal_missing","nulls_last","nulls_last","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique","var","vzip","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_nulls_last_multi","with_order_descending","with_order_descending","with_order_descending_multi","with_order_reversed","with_order_reversed","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","validate_time_zone","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","SmartString","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructOwned","StructType","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","append","append","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_borrowed","as_date_iter","as_datetime_iter","as_ref","as_ref","as_ref_dtype","as_slice","as_time_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","build_local","call_categorical_merge_operation","cast","cast","cast_leaf","cast_time_unit","cast_time_unit","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","days","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","drain_iter_and_finish","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field","find","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_owned","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","full_null","get","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_categories","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_optional","get_rev_map","get_shape","get_str","get_unchecked","get_unchecked","gt","gt","gt","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","hour","hours","implode","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_scalar","into_series","into_series","into_series","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_empty","is_enum","is_enum","is_float","is_float","is_global","is_integer","is_integer","is_known","is_list","is_local","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter_str","last","leaf_dtype","len","len","lt","lt","lt","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max_reduce","merge_dtypes","merge_map","microseconds","milliseconds","min_reduce","minute","minutes","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","name","name","name","nanosecond","nanoseconds","new","new","new","new","new","new","new","new","new","new","new","new","new","new_logical","newest","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null_count","oldest","parse_from_str_slice","parse_from_str_slice","partial_cmp","partial_cmp","physical","physical","precision","register_value","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","round","round","same_src","scale","second","seconds","set_name","set_time_unit","set_time_unit","set_time_unit_and_time_zone","set_time_zone","size_hint","sort","sort_with","strftime","strftime","strftime","strict_cast","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","time_unit","time_unit","time_zone","to_arrow","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_enum","to_global","to_local","to_logical_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_scale","to_string","to_string","to_string","to_string","to_string","to_string","tot_eq","truncate","truncate","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","uses_lexical_ordering","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_validity_typed","zero","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","eager","lazy","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","constants","context","context_trace","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","feature_gated","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_warning_function","init","init","init","into","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_lengths","clear","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks","iter_chunks_physical","lazy","len","max_horizontal","mean_horizontal","min_horizontal","n_chunks","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice","slice_par","sort","sort_in_place","split_at","split_at","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","to_owned","to_owned","to_string","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","unnest","unpivot","unpivot2","upsample","upsample_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","UnpivotArgs","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","index","init","into","on","streamable","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Date","Datetime","Duration","Float32","Float32","Float64","Float64","Int16","Int16","Int32","Int32","Int64","Int64","Int8","Int8","Null","Null","Row","String","String","Struct","Time","UInt16","UInt16","UInt32","UInt32","UInt64","UInt64","UInt8","UInt8","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","Abs","Agg","AggExpr","AggGroups","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Any","Any","Any","Any","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","Backward","BackwardFill","Base64Encode","BaseUtcOffset","BatchedCsvReader","BatchedParquetReader","Binary","Binary","Binary","Binary","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","BinaryExpr","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","Boolean","Boolean","Boolean","Boolean","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","Both","Bounds","BoundsIter","Brotli","BrotliLevel","C","CLUSTER_WITH_COLUMNS","Cache","Cast","CastTimeUnit","CatIter","Categorical","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalType","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","ColumnNotFound","Columns","Columns","Combine","CommentPrefix","CompatLevel","ComputeError","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Context","ConvertTimeZone","Count","Count","CountMatches","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","DataPoint","DataType","DataType","Date","Date","Date","Date","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","Datetime","Datetime","DatetimeArgs","DatetimeChunked","DatetimeFunction","DatetimeMethods","DatetimeType","Day","Decimal","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dense","DfTake","Dictionary","Diff","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","Duration","Duration","Duration","Duration","Duration","DurationArgs","DurationChunked","DurationMethods","DurationType","DynArgs","DynamicGroupOptions","EAGER","Earliest","EndsWith","Enum","Enum","Eq","EqValidity","Err","Exclude","Excluded","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","Extract","ExtractAll","ExtractGroups","FAST_PROJECTION","FILE_CACHING","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","Field","FieldByIndex","FieldByName","FieldRef","FieldsMapper","FieldsNameMapper","FileMetaData","FileMetaDataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","Filter","Find","First","First","First","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float","Float16","Float32","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","Forward","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","Full","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","GtEq","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","HashMap","Head","HexEncode","Higher","Hour","IDX_DTYPE","INTEGER_RE","IO","IR","IS_ARROW","Idx","Idx","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","Implode","InProcessQuery","IndexColumn","IndexOfSchema","IndexOrder","IndexToUsize","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8","Int8Chunked","Int8Type","Interpolate","InterpolateBy","InterpolationMethod","Interval","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoScalar","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReader","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLastDistinct","IsLeapYear","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","IsObject","IsStruct","IsoYear","Item","Join","Join","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonEncode","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","Last","Last","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","Left","Left","Left","Left","Left","Left","LeftJoinIds","Len","LenBytes","LenChars","Lexical","LhsNumOps","Linear","Linear","List","List","List","List","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","Literal","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","LowerBound","Lowercase","Lt","LtEq","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","Max","Max","Max","MaxBound","MaxHorizontal","Mean","Mean","Mean","MeanHorizontal","Median","Median","Microsecond","Microsecond","Microseconds","Midpoint","Millennium","Millisecond","Millisecond","Milliseconds","Min","Min","Min","Min","MinBound","MinHorizontal","Minus","Minute","Mode","Modulus","Monday","Month","Multi","MultipleFields","Multiply","NEW_STREAMING","NULL","NUnique","NUnique","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","Nanosecond","Nanoseconds","Native","Nearest","Nearest","Nearest","Necessary","Negate","NestedType","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","None","None","None","None","None","Not","NotEq","NotEqValidity","Nth","Null","Null","Null","Null","Null","Null","Null","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","Ok","One","OneToMany","OneToOne","Operator","OptState","Or","Ordinal","OrdinalDay","Out","OutOfBounds","Output","Over","OwnedBatchedCsvReader","OwnedObject","OwnedPhysical","POLARS_TEMP_DIR_BASE_PATH","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ParallelStrategy","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","Plus","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","PrefixFields","PrimitiveChunkedBuilder","Quantile","Quantile","QuantileAggSeries","QuantileInterpolOptions","Quarter","QuoteStyle","ROW_ESTIMATE","Raise","Raise","Random","Random","Range","Range","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","RepeatBy","Replace","Replace","ReplaceStrict","ReplaceTimeZone","Reshape","RevMapping","Reverse","Reverse","Right","Right","Right","Right","Right","Right","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Round","Round","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","SIMPLIFY_EXPR","SLICE_PUSHDOWN","SQLInterface","SQLSyntax","STREAMING","Saturday","Scalar","Scalar","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaFieldNotFound","SchemaMismatch","SchemaNamesAndDtypes","SchemaRef","SearchSortedSide","Second","Second","Select","Selector","SerReader","SerWriter","SerializeOptions","Series","Series","SeriesBinaryUdf","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SeriesUdf","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","Slice","Slice","Slice","Slice","SlicedArray","SlicedGroups","SmartString","Snappy","Some","Some","Sort","Sort","SortBy","SortMultipleOptions","SortOptions","SpecialEq","Split","SplitExact","SplitN","SplitNChars","Sqrt","StartBy","StartsWith","StaticArray","StatisticsOptions","Std","Std","Str","StrCat","String","String","String","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringFunction","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","Struct","Struct","Struct","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructFunction","StructNameSpace","StructOwned","StructType","SubPlan","SuffixFields","Sum","Sum","SumHorizontal","Sunday","TYPE_COERCION","Tail","TakeChunked","TemporalExpr","TemporalFunction","TemporalMethods","Ternary","Then","Thursday","Time","Time","Time","Time","Time32","Time64","TimeChunked","TimeMethods","TimeStamp","TimeType","TimeUnit","TimeZone","Timestamp","Titlecase","ToDecimal","ToDummies","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Truncate","Tuesday","UInt16","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","URL_ENCODE_CHAR_SET","UdfSchema","Uncompressed","Union","Union","UnionArgs","Unique","UniqueKeepStrategy","Unknown","Unknown","UnknownKind","UnpivotArgs","UpperBound","Uppercase","UserDefinedFunction","Utf8","Utf8","Utf8View","ValueCounts","ValueIterT","ValueT","Var","Var","VarAggSeries","VecHash","Wednesday","Week","WeekDay","When","Wildcard","Window","Window","WindowBound","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_collect_post_opt","_create_left_df_from_slice","_full_join_from_series","_join_suffix_name","_split_at_unchecked","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_eager","_with_predicate","abs","abs","add","add","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","all","all","all_horizontal","allocator","allow_parallel","allow_parallel","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","anonymous_scan","any","any_horizontal","append","append_null","append_null","append_opt_series","append_option","append_series","append_value","apply","apply","apply","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_min","arg_sort","arg_sort","arg_sort","arg_sort_by","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_where","args","args","arity","arr","arr_from_iter","arr_from_iter","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","arr_from_iter_with_dtype","arr_from_iter_with_dtype","array","arrow_schema","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_value","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_fd","as_list","as_ptr","as_raw_fd","as_ref","as_ref","as_ref_dtype","as_series","as_single_ptr","as_slice","as_string","as_struct","as_time","assume_init","assume_init","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","batched","batched","batched","batched","batched_borrowed","binary","binary","binary_expr","bitand","bitand","bitand_assign","bitor","bitor","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","boxed","buffer","builder","cache","cache","cache","cache","call","call","call_categorical_merge_operation","call_udf","call_udf","call_unchecked","cancel","cast","cast","cast","cast","cast","cast","cast_all","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cat","cat","cause","cbrt","ceil","ceil","center","century","check_bound","check_schema","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","clip","clip_max","clip_max","clip_min","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_inner","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","closed_window","closed_window","closed_window","cloud","cloud_options","cloud_options","cloud_options","cloud_options","cloud_options","cmp","cmp","coalesce","coalesce","coalesce","coalesce","coalesce_series","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","cols","column_order","column_orders","columns","columns_to_dummies","comment_prefix","compare","compare","complement","compression","compression","compression","compute_schema","concat","concat","concat_expr","concat_impl","concat_impl","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","contains","contains","contains","contains","contains","contains_chunked","contains_chunked","contains_literal","convert_inner_type","convert_to_unsigned_index","count","count","count","count_matches","count_matches_many","count_rows","create_enum_data_type","create_left_df_chunked","created_by","cross_join","cross_join","cross_join_dfs","cum_count","cum_count","cum_fold_exprs","cum_max","cum_max","cum_min","cum_min","cum_prod","cum_prod","cum_reduce_exprs","cum_sum","cum_sum","cumulative_eval","data_page_size","data_type","data_type","data_type","datatypes","date_format","date_ranges","datetime","datetime","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","day","day","day","days","days","days","days_only","ddof","ddof","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_arrays","default_join_ids","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","descending","descending","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","df","df","diagonal","diff","diff","diff","difference","display","distinct_count","distinct_count","div","div","divide","dot","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_no_validate","drop_nulls","drop_nulls","drop_nulls","dst_offset","dt","dt","dtype","dtype","dtype","dtype","dtype_col","dtype_cols","dtype_overwrite","duration","empty","empty","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_data_type","ensure_is_constant_duration","ensure_matching_schema","ensure_sorted_arg","eol_char","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","every","exact","exclude","exclude_dtype","execute","expand_paths","expand_paths_hive","expanded_from_single_directory","explain","explode","explode","explode","explode_and_offsets","expr","extend","extend_constant","extract","extract","extract_all","extract_all_many","extract_groups","fast_explode","fetch","fetch","fetch_blocking","field","field","field_by_index","field_by_name","field_by_names","fields","fields","fill_nan","fill_nan","fill_null","fill_null","fill_null","fill_null_with_strategy","fill_null_with_values","filter","filter","filter","filter","filter","find","find_chunked","find_literal","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","finish_with_scan_ops","finishes_this_batch","first","first","first","first","fixed_size_list","flatten","float_precision","float_scientific","float_sorted_arg_max","float_type","floor","floor","floor_div","floor_div_series","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","fmt_str","fn_params","fn_params","fold_exprs","force_parallel","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_fallible_iter","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","from_iter_trusted_length","from_iter_utf8_trusted_len","from_iter_values","from_name","from_par_iter","from_par_iter","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_type","from_vec","from_vec","from_zeroable_vec","full","full","full","full","full_join","full_join","full_null","full_null","full_null","fun","function_expr","function_with_options","gather","gather","gather_every","ge","get","get","get","get","get","get","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_at_index","get_at_index_mut","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","get_field","get_field","get_fields","get_fields_lens","get_full","get_glob_start_idx","get_metadata","get_metadata","get_mut","get_mut_unchecked","get_names","get_names","get_names","get_names_and_dtypes","get_names_and_dtypes","get_names_and_dtypes","get_object","get_object_chunked_unchecked","get_output","get_overlapping_bounds_iter","get_parse_options","get_reader_bytes","get_schema","get_sequential_row_statistics","get_unchecked","get_unchecked","get_unchecked","glob","glob","glob","group_by","group_by_dynamic","group_by_dynamic","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","gt","gt","gt_eq","gt_eq","has_header","has_nulls","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash_join_inner","hash_join_outer","head","head","head","hex_decode","hex_encode","hive_options","hive_options","hor_str_concat","hour","hour","hour","hour","hours","hours","how","how","idx","ignore_errors","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","include_bom","include_boundaries","include_file_paths","include_file_paths","include_header","include_header","increment_strong_count","increment_strong_count_in","index","index_cols","index_column","index_column","index_of","index_of","index_of","indexes_to_usizes","infer_file_schema","infer_schema_len","infer_schema_len","infer_schema_length","infer_schema_length","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_array","inner_join","inner_join","inner_mut","input_fields","insert","insert_at_index","int_range","int_ranges","interpol","interpolate","interpolate","interpolate","interpolate_by","interpolate_by","interpolate_by","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_data","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_list_name_space","into_list_name_space","into_raw","into_raw_with_allocator","into_reader_with_file_handle","into_scalar","into_series","into_series","into_series","into_thrift","into_vec","into_vec","into_vec","is_all","is_arithmetic","is_asof","is_between","is_between","is_cloud_url","is_compressed","is_constant_duration","is_empty","is_empty","is_empty","is_empty","is_empty","is_finished","is_finite","is_first_distinct","is_first_distinct","is_first_distinct","is_full","is_full_days","is_in","is_in","is_infinite","is_last_distinct","is_last_distinct","is_last_distinct","is_leap_year","is_leap_year","is_leap_year","is_nan","is_not_nan","is_not_null","is_not_null","is_not_null","is_null","is_null","is_null","is_null","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_valid_join","is_write_vectored","is_zero","iso_year","iso_year","iso_year","iter","iter","iter","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","iter_names","join","join","join","join","join_asof_by","join_builder","join_literal","join_many","join_nulls","join_nulls","json_encode","keep","key_value_metadata","key_value_metadata","label","last","last","last","last","last","lazy","lazy","le","left_by","left_join","left_join","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","len","len","len","len","len","len","limit","limit","limit_reached","line_terminator","list","lit","lit","lit","lit","lit","logical_and","logical_or","logical_plan","logical_plan","low_memory","low_memory","low_memory","low_memory","low_memory","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","lt","lt","lt_eq","lt_eq","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","materialize_empty_df","materialize_projection","max","max","max","max","max","max","max_reduce","max_reduce","max_value","max_value","maybe_decompress_bytes","mean","mean","mean","mean","mean","mean","median","median","median","median","median","median","median","median_reduce","median_reduce","memory_map","memory_map","memory_mapped","merge","merge_dtypes","merge_from_ref","metadata","metadata","method","microsecond","microseconds","microseconds","millennium","milliseconds","milliseconds","min","min","min","min","min","min","min_max","min_periods","min_periods","min_periods","min_reduce","min_reduce","min_value","min_value","minute","minute","minute","minute","minutes","minutes","missing_is_null","mode","mode","month","month","month","month","months","months_only","mul","mul","mul","multiply","multithreaded","multithreaded","n_chunks","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_threads","n_threads","n_unique","n_unique","n_unique","n_unique","n_unique","name","name","name","name","name","name","nan_max","nan_min","nan_propagating_aggregate","nanosecond","nanosecond","nanosecond","nanoseconds","nanoseconds","nanoseconds","ne","needs_checks","neg","neg","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_cyclic","new_empty","new_from_index","new_from_index","new_from_str","new_in","new_inserting_at_index","new_int_range","new_multi","new_null","new_paths","new_paths","new_single","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","next","next_batches","next_batches","next_batches","nodes","nodes_owned","not","not","not","not_equal","not_equal_missing","nth","null","null","null","null","null_count","null_count","null_count","null_count","null_count","null_values","nulls_last","nulls_last","num_rows","num_rows","offset","offset","offset","offsets","on","on","optimize","options","or","ordinal","ordinal","ordinal_day","ordinal_year","otherwise","otherwise","output_schema","over","over_with_options","overwrite_schema","parallel","parallel","parallel","parse","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","parse_options","parsed_int","partial_cmp","partial_cmp","path","paths","paths","paths","period","period","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_reduce","product","profile","projection","propagate_nulls","provide","ptr_eq","quantile","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quarter","quarter","quarter","queue","quote_char","quote_char","quote_style","raise_if_empty","rank","rank","read","read_buf","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","rem","remainder","remove","remove","rename","rename","rename","rename_fields","repeat","repeat_by","repeat_by","replace","replace","replace","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_or_default","replace_strict","replace_strict","replace_time_zone","reserve","reshape","resolve_homedir","return_type","reverse","reverse","reverse","reverse","reverse","reverse","right_by","right_on","rolling","rolling","rolling","rolling_map","rolling_map","rolling_map","rolling_map_float","rolling_max","rolling_max","rolling_max_by","rolling_max_by","rolling_mean","rolling_mean","rolling_mean_by","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min","rolling_min_by","rolling_min_by","rolling_quantile","rolling_quantile","rolling_quantile_by","rolling_quantile_by","rolling_std","rolling_std","rolling_std_by","rolling_std_by","rolling_sum","rolling_sum","rolling_sum_by","rolling_sum_by","rolling_var","rolling_var","rolling_var_by","rolling_var_by","round","round","round","round_ms","round_ns","round_sig_figs","round_sig_figs","round_us","row_group_size","row_groups","row_index","row_index","row_index","row_index","row_index","row_index","row_index","rows_left","rows_right","same_type","same_type","sample_frac","sample_n","sample_size","scan","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","scatter","scatter_single","scatter_with","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema_descr","schema_inference","schema_overwrite","schema_with_arenas","search_sorted","second","second","second","second","seconds","seconds","seek","select","select_seq","separator","separator","serialize_options","series","set","set","set_cached_arena","set_dtype","set_dtype_at_index","set_low_memory","set_parallel","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_sorted_flag","set_validity","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_remove","shift_remove_index","should_coalesce","shrink_dtype","shrink_to_fit","shrink_to_fit","shuffle","sink_csv","sink_ipc","sink_json","sink_parquet","skip_rows","skip_rows","skip_rows","skip_rows_after_header","slice","slice","slice","slice","slice","slice","slice","slice","slice_typed","slice_typed","slice_typed_unchecked","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","sort","sort","sort","sort","sort","sort","sort_by","sort_by_exprs","sort_with","sort_with","source","split","split_at","split_at_boxed","split_at_boxed_unchecked","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","std","std","std","std","std","std_reduce","std_reduce","store","str","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","streamable","strftime","strict","strict_cast","strings","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","strong_count","struct_","sub","sub","sub","sub_assign","subtract","suffix","suffix","suffix","suffix","suffix_fields","sum","sum","sum","sum","sum","sum","sum_reduce","sum_reduce","super_type","symmetric_difference","sync_update","tail","tail","tail","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked","take_validity","ternary_expr","then","then","time_format","time_ranges","time_unit","time_unit","time_zone","timestamp","to_alp","to_alp","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","to_dummies","to_field","to_integer","to_list","to_lowercase","to_lowercase","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_supertype","to_supertypes","to_titlecase","to_uppercase","to_uppercase","to_writer","to_writer","toggle","tolerance","tolerance_str","top_k","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","truncate_ms","truncate_ns","truncate_ns","truncate_ragged_lines","truncate_us","truncate_us","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_arr_from_iter_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_thrift","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_negative_to_usize","try_new","try_new","try_new","try_new","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse_dates","try_pin","try_pin_in","try_project","try_serialize","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","udf","union","unique","unique","unique","unique","unique","unique","unique_stable","unique_stable","unique_stable","unique_stable","unnest","unpivot","unwrap","unwrap_or_clone","update","update_with_inference_result","upper_bound","upsample","upsample_stable","use_statistics","use_statistics","use_statistics","utf8","validate","validation","validity","validity","value","value","value_counts","value_counts","value_name","value_unchecked","values","values_iter","values_iter","var","var","var","var","var","var","var_reduce","var_reduce","variable_name","vec_hash","vec_hash_combine","version","view","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","week","week","week","weekday","weekday","weekday","weekday","weeks","weeks","weeks_only","weights","when","when","when","window_size","window_size","window_size","with","with_ambiguous","with_batch_size","with_batch_size","with_batch_size","with_cache","with_capacity","with_capacity","with_capacity","with_chunk_size","with_chunk_size","with_cloud_options","with_cloud_options","with_cluster_with_columns","with_coalesce","with_column","with_column","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns_seq","with_comment_prefix","with_comment_prefix","with_compat_level","with_compat_level","with_compression","with_compression","with_compression","with_compression","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","with_decimal_comma","with_dtype","with_dtype_overwrite","with_dtype_overwrite","with_encoding","with_encoding","with_eol_char","with_eol_char","with_extension","with_fields","with_float_precision","with_float_scientific","with_fractional_seconds","with_glob","with_has_header","with_has_header","with_hive_partition_columns","with_hive_partition_columns","with_hms","with_hms","with_hour","with_hours","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_include_file_path","with_include_file_path","with_include_file_paths","with_include_file_paths","with_infer_schema_length","with_infer_schema_length","with_infer_schema_length","with_json_format","with_json_format","with_line_terminator","with_low_memory","with_low_memory","with_metadata","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","with_missing_is_null","with_month","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_threads","with_n_threads","with_nanoseconds","with_new_streaming","with_null_value","with_null_values","with_null_values","with_optimizations","with_parse_options","with_path","with_path","with_paths","with_paths","with_paths","with_predicate","with_predicate","with_predicate_pushdown","with_projection","with_projection","with_projection","with_projection","with_projection","with_projection","with_projection_pushdown","with_quote_char","with_quote_char","with_quote_char","with_quote_style","with_raise_if_empty","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_group_size","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_same_dtype","with_sample_size","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema_modify","with_schema_overwrite","with_schema_overwrite","with_schema_overwrite","with_schema_overwrite","with_second","with_seconds","with_separator","with_separator","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows","with_skip_rows_after_header","with_skip_rows_after_header","with_slice_pushdown","with_statistics","with_streaming","with_suffix","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","with_truncate_ragged_lines","with_try_parse_dates","with_try_parse_dates","with_type_coercion","with_validity","with_validity","with_validity_typed","with_validity_typed","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_df_to_file","write_df_to_file","write_partitioned_dataset","write_varint","write_vectored","xor","year","year","year","year","zip","zip_with","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","aggs","apply","args","by_column","cache_hits","contexts","df","dsl","expr","exprs","file_info","file_options","filter","function","hive_parts","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","node","offset","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","right_on","scan_type","schema","slice","sort_options","version","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","options","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","decimals","digits","has_max","has_min","limit","limit","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","include_nulls","groups","rolling","data_type","high","low","error","error","msg","msg","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","starts_with","try_from","try_into","type_id","vzip","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","dtype","from","from","from","from","init","init","init","init","init_buffers","into","into","into","into","into_series","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","buf","time_unit","time_zone","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","day","days","fn_params","hour","hour","hours","is_leap_year","is_leap_year","iso_year","iso_year","microseconds","milliseconds","min_periods","minute","minute","minutes","month","month","nanosecond","nanosecond","nanoseconds","ordinal","ordinal","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","quarter","quarter","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","second","seconds","string","week","week","weekday","weekday","window_size","year","year","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","parse_bytes","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_from_with_unit","try_from_with_unit","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Hf","Http","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","from","from","from_str","from_untyped_config","hash","init","init","into","into","max_retries","options","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_max_retries","Aws","Azure","CloudOptions","CloudType","File","Gcp","Hf","Http","max_retries","is_compressed","magic","GZIP","ZLIB0","ZLIB1","ZLIB2","ZSTD","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","SmartString","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructOwned","StructType","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","cast_with_options","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_data_type","dtype","dtype","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","get_unchecked","into_scalar","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","new","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","with_capacity","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Head","HexEncode","Hour","Interpolate","InterpolateBy","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsoYear","JsonEncode","LenBytes","LenChars","ListExpr","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MultipleFields","Nanosecond","Negate","Not","NullCount","OrdinalDay","Pow","PowFunction","PrefixFields","Quarter","Random","Range","Rank","RenameFields","RepeatBy","Replace","Replace","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","Round","RoundSF","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Truncate","Unique","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","cat","pow","rolling","rolling_by","closed","ignore_nulls","ignore_nulls","decimals","digits","has_max","has_min","limit","limit","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","InterpolationMethod","Linear","Nearest","interpolate","interpolate_by","mode","ca_nan_agg","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Any","Left","Right","SearchSortedSide","binary_search_ca","lower_bound_chunks","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","slice_typed","slice_typed_unchecked","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","Ascending","BitRepr","ChunkCompare","Descending","IntoSeries","IsSorted","Item","Large","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","amortized_iter","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","as_ref","as_series","as_series","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","cast_with_options","categorical","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","compute_len","date","datetime","decimal","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","drop","drop","drop","drop","drop_nulls","dtype","duration","eq","eq","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","fmt","fmt","fmt_list","from","from","from","from","from","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","get_object","get_object_chunked_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","init","into","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_sorted_flag","iter","iter_chunks","len","len","limit","list","lit","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","max","max_reduce","mean","mean_reduce","median","median_reduce","min","min_reduce","mul","mul","mul","mul","n_chunks","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","rechunk","rem","rem","rem","rename","rename","reshape_array","reshape_list","reverse","reverse","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","slice","sort","sort_with","split_at","split_at","std","std_reduce","str","str_value","strict_cast","struct_","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","time","to_arrow","to_dummies","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_mul_owned","try_set_metadata","try_sub_owned","type_id","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique_stable","unpack","var","var_reduce","vzip","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","_struct_arithmetic","add","add_to","add_to","checked","div","divide","divide","mul","multiply","multiply","rem","remainder","remainder","sub","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"polars"],[17,"polars::chunked_array"],[853,"polars::chunked_array::arithmetic"],[881,"polars::chunked_array::builder"],[1142,"polars::chunked_array::builder::list"],[1159,"polars::chunked_array::cast"],[1189,"polars::chunked_array::collect"],[1203,"polars::chunked_array::float"],[1205,"polars::chunked_array::from_iterator_par"],[1209,"polars::chunked_array::iterator"],[1264,"polars::chunked_array::iterator::par"],[1266,"polars::chunked_array::metadata"],[1554,"polars::chunked_array::object"],[1631,"polars::chunked_array::object::builder"],[1654,"polars::chunked_array::object::registry"],[1682,"polars::chunked_array::ops"],[1889,"polars::chunked_array::ops::arity"],[1925,"polars::chunked_array::ops::float_sorted_arg_max"],[1927,"polars::chunked_array::ops::gather"],[1930,"polars::chunked_array::ops::search_sorted"],[1961,"polars::chunked_array::ops::sort"],[1968,"polars::chunked_array::ops::sort::arg_bottom_k"],[1969,"polars::chunked_array::ops::sort::arg_sort_multiple"],[1977,"polars::chunked_array::ops::sort::options"],[1990,"polars::chunked_array::temporal"],[1998,"polars::chunked_array::temporal::conversion"],[2001,"polars::datatypes"],[3408,"polars::datatypes::categorical"],[3425,"polars::datatypes::categorical::revmap"],[3431,"polars::datatypes::categorical::string_cache"],[3450,"polars::docs"],[3452,"polars::error"],[3540,"polars::error::PolarsError"],[3544,"polars::error::constants"],[3547,"polars::frame"],[3810,"polars::frame::explode"],[3840,"polars::frame::group_by"],[4080,"polars::frame::group_by::GroupByMethod"],[4081,"polars::frame::group_by::GroupsProxy"],[4083,"polars::frame::group_by::aggregations"],[4096,"polars::frame::group_by::expr"],[4099,"polars::frame::row"],[4209,"polars::functions"],[4211,"polars::prelude"],[9481,"polars::prelude::AggExpr"],[9488,"polars::prelude::BooleanFunction"],[9491,"polars::prelude::DslPlan"],[9545,"polars::prelude::Expr"],[9580,"polars::prelude::FunctionExpr"],[9602,"polars::prelude::GroupByMethod"],[9603,"polars::prelude::GroupsProxy"],[9605,"polars::prelude::LiteralValue"],[9608,"polars::prelude::PolarsError"],[9612,"polars::prelude::StringFunction"],[9626,"polars::prelude::TemporalFunction"],[9628,"polars::prelude::aggregations"],[9641,"polars::prelude::arity"],[9677,"polars::prelude::array"],[9696,"polars::prelude::binary"],[9712,"polars::prelude::buffer"],[9786,"polars::prelude::buffer::Buffer"],[9789,"polars::prelude::cat"],[9790,"polars::prelude::chunkedarray"],[9857,"polars::prelude::chunkedarray::string"],[9897,"polars::prelude::chunkedarray::string::infer"],[9928,"polars::prelude::cloud"],[9978,"polars::prelude::cloud::options"],[9987,"polars::prelude::compression"],[9989,"polars::prelude::compression::magic"],[9994,"polars::prelude::datatypes"],[10266,"polars::prelude::datatypes::categorical"],[10283,"polars::prelude::datatypes::categorical::revmap"],[10289,"polars::prelude::datatypes::categorical::string_cache"],[10293,"polars::prelude::datetime"],[10296,"polars::prelude::default_arrays"],[10302,"polars::prelude::dt"],[10354,"polars::prelude::expr"],[10357,"polars::prelude::fixed_size_list"],[10377,"polars::prelude::float_sorted_arg_max"],[10379,"polars::prelude::function_expr"],[10552,"polars::prelude::function_expr::BooleanFunction"],[10555,"polars::prelude::function_expr::FunctionExpr"],[10577,"polars::prelude::function_expr::StringFunction"],[10591,"polars::prelude::function_expr::TemporalFunction"],[10593,"polars::prelude::function_expr::cat"],[10595,"polars::prelude::function_expr::pow"],[10599,"polars::prelude::function_expr::rolling"],[10629,"polars::prelude::function_expr::rolling_by"],[10659,"polars::prelude::gather"],[10662,"polars::prelude::interpolate"],[10666,"polars::prelude::interpolate_by"],[10667,"polars::prelude::mode"],[10668,"polars::prelude::nan_propagating_aggregate"],[10673,"polars::prelude::null"],[10704,"polars::prelude::schema_inference"],[10731,"polars::prelude::search_sorted"],[10737,"polars::prelude::series"],[10759,"polars::prelude::slice"],[10762,"polars::prelude::sort"],[10769,"polars::prelude::sort::arg_bottom_k"],[10770,"polars::prelude::sort::arg_sort_multiple"],[10778,"polars::prelude::sort::options"],[10791,"polars::prelude::strings"],[10845,"polars::prelude::udf"],[10851,"polars::prelude::utf8"],[10855,"polars::series"],[11289,"polars::series::amortized_iter"],[11313,"polars::series::arithmetic"],[11334,"polars::series::arithmetic::checked"],[11340,"polars::series::ops"],[11368,"dyn_clone::sealed"],[11369,"polars_core::datatypes"],[11370,"polars_core::chunked_array"],[11371,"polars_error"],[11372,"core::result"],[11373,"polars_core::series"],[11374,"core::ops::function"],[11375,"num_traits"],[11376,"num_traits::cast"],[11377,"polars_core::series::arithmetic::borrowed"],[11378,"polars_core::frame::group_by::proxy"],[11379,"polars_core::chunked_array::object"],[11380,"core::option"],[11381,"polars_arrow::array"],[11382,"alloc::boxed"],[11383,"core::iter::traits::iterator"],[11384,"polars_core::chunked_array::list::iterator"],[11385,"core::marker"],[11386,"alloc::borrow"],[11387,"polars_core::series::amortized_iter"],[11388,"alloc::string"],[11389,"polars_core::datatypes::dtype"],[11390,"polars_core::chunked_array::ops::sort::options"],[11391,"polars_core::chunked_array::cast"],[11392,"polars_core::series::arithmetic::borrowed::checked"],[11393,"core::slice::iter"],[11394,"core::iter::adapters::map"],[11395,"alloc::vec"],[11396,"polars_core::chunked_array::metadata"],[11397,"core::iter::traits::double_ended"],[11398,"polars_arrow::offset"],[11399,"core::fmt"],[11400,"core::iter::traits::collect"],[11401,"polars_utils::iter::fallible"],[11402,"polars_arrow::bitmap::immutable"],[11403,"core::borrow"],[11404,"polars_core::chunked_array::from_iterator"],[11405,"core::convert"],[11406,"rayon::iter"],[11407,"polars_arrow::pushable"],[11408,"polars_arrow::trusted_len"],[11409,"polars_core::datatypes::any_value"],[11410,"polars_arrow::array::binary"],[11411,"std::sync::rwlock"],[11412,"polars_core::chunked_array::logical"],[11413,"polars_core::datatypes::time_unit"],[11414,"core::iter::traits::exact_size"],[11415,"polars_core::series::series_trait"],[11416,"polars_core::chunked_array::iterator"],[11417,"polars_core::scalar"],[11418,"polars_core::chunked_array::metadata::guard"],[11419,"polars_core::chunked_array::metadata::interior_mutable"],[11420,"alloc::sync"],[11421,"polars_core::chunked_array::metadata::md_trait"],[11422,"core::ops::range"],[11423,"polars_core::datatypes::field"],[11424,"polars_arrow::legacy::kernels::rolling::no_nulls"],[11425,"polars_core::chunked_array::ops::rolling_window"],[11426,"polars_ops::chunked_array::scatter"],[11427,"polars_utils::index"],[11428,"ahash::random_state"],[11429,"polars_utils::hashing"],[11430,"ndarray"],[11431,"ndarray::dimension::dim"],[11432,"ndarray::data_repr"],[11433,"either"],[11434,"core::any"],[11435,"polars_core::frame"],[11436,"polars_core::chunked_array::arithmetic::numeric"],[11437,"polars_core::chunked_array::builder::list::anonymous"],[11438,"polars_core::chunked_array::builder::list::boolean"],[11439,"polars_core::chunked_array::builder::list::primitive"],[11440,"polars_core::chunked_array::builder::list"],[11441,"polars_core::chunked_array::builder"],[11442,"polars_core::chunked_array::builder::list::binary"],[11443,"polars_core::chunked_array::builder::list::null"],[11444,"polars_core::chunked_array::builder::string"],[11445,"polars_arrow::array::binview"],[11446,"polars_core::chunked_array::builder::boolean"],[11447,"polars_core::chunked_array::builder::null"],[11448,"polars_core::chunked_array::builder::primitive"],[11449,"core::clone"],[11450,"polars_core::series::implementations::null"],[11451,"core::hash"],[11452,"polars_core::chunked_array::collect"],[11453,"polars_core::chunked_array::float"],[11454,"polars_core::chunked_array::from_iterator_par"],[11455,"polars_arrow::array::boolean"],[11456,"polars_arrow::array::fixed_size_list"],[11457,"polars_core::chunked_array::metadata::env"],[11458,"polars_core::chunked_array::metadata::collect"],[11459,"bitflags::iter"],[11460,"std::fs"],[11461,"std::sync::mutex"],[11462,"polars_arrow::datatypes"],[11463,"polars_arrow::bitmap::utils::iterator"],[11464,"polars_arrow::bitmap::utils::zip_validity"],[11465,"polars_core::chunked_array::object::builder"],[11466,"polars_core::chunked_array::object::registry"],[11467,"polars_core::chunked_array::ops"],[11468,"polars_arrow::legacy::array::slice"],[11469,"polars_core::chunked_array::ops::arity"],[11470,"polars_arrow::array::static_array"],[11471,"core::error"],[11472,"polars_arrow::array::primitive"],[11473,"polars_core::chunked_array::ops::search_sorted"],[11474,"polars_core::utils"],[11475,"polars_row::row"],[11476,"chrono::naive::datetime"],[11477,"chrono_tz::timezones"],[11478,"chrono::naive::time"],[11479,"polars_core::chunked_array::logical::categorical"],[11480,"polars_core::chunked_array::logical::categorical::builder"],[11481,"polars_arrow::array::static_array_collect"],[11482,"bytemuck::zeroable"],[11483,"polars_core::chunked_array::logical::categorical::revmap"],[11484,"polars_core::chunked_array::logical::categorical::merge"],[11485,"polars_arrow::datatypes::physical_type"],[11486,"polars_arrow::types"],[11487,"chrono::time_delta"],[11488,"chrono::naive::date"],[11489,"smartstring::config"],[11490,"smartstring"],[11491,"polars_core::datatypes::into_scalar"],[11492,"core::cmp"],[11493,"polars_core::chunked_array::logical::categorical::string_cache"],[11494,"polars_error::warning"],[11495,"polars_parquet::parquet::error"],[11496,"regex::error"],[11497,"simdutf8::basic"],[11498,"planus::errors"],[11499,"std::io::error"],[11500,"alloc::collections"],[11501,"polars_core::schema"],[11502,"polars_core::series::from"],[11503,"hashbrown::set"],[11504,"polars_arrow::datatypes::schema"],[11505,"polars_core::frame::row"],[11506,"polars_core::frame::group_by"],[11507,"polars_time::group_by::dynamic"],[11508,"polars_lazy::frame"],[11509,"polars_core::chunked_array::ndarray"],[11510,"polars_arrow::record_batch"],[11511,"polars_arrow::array::struct_"],[11512,"polars_core::frame::explode"],[11513,"polars_time::windows::duration"],[11514,"polars_utils::idx_vec"],[11515,"rayon::iter::plumbing"],[11516,"polars_plan::plans::aexpr"],[11517,"polars_core::frame::group_by::into_groups"],[11518,"core::iter::adapters::copied"],[11519,"core::iter::adapters::zip"],[11520,"polars_utils::float"],[11521,"polars_arrow::types::native"],[11522,"polars_core::frame::group_by::aggregations::agg_list"],[11523,"polars_core::frame::group_by::aggregations"],[11524,"polars_core::frame::group_by::expr"],[11525,"polars_core::frame::row::av_buffer"],[11526,"polars_utils::arena"],[11527,"polars_plan::plans::ir"],[11528,"polars_ops::frame::join::hash_join"],[11529,"polars_ops::frame::join::args"],[11530,"polars_ops::chunked_array::gather::chunked"],[11531,"polars_ops::frame"],[11532,"polars_io::csv::read::reader"],[11533,"polars_io::predicates"],[11534,"polars_io::mmap"],[11535,"polars_plan::dsl::expr"],[11536,"polars_plan::frame::opt_state"],[11537,"core::alloc"],[11538,"polars_plan::plans::anonymous_scan"],[11539,"polars_lazy::scan::anonymous_scan"],[11540,"polars_plan::dsl::expr_dyn_fn"],[11541,"polars_plan::plans::visitor"],[11542,"polars_plan::dsl::function_expr"],[11543,"polars_ops::series::ops::arg_min_max"],[11544,"polars_plan::dsl::array"],[11545,"polars_plan::dsl::list"],[11546,"polars_plan::dsl::function_expr::schema"],[11547,"polars_io::ipc::ipc_stream"],[11548,"std::io"],[11549,"polars_ops::chunked_array::binary"],[11550,"polars_time::chunkedarray::string"],[11551,"std::os::fd::owned"],[11552,"polars_ops::chunked_array::list"],[11553,"std::os::fd::raw"],[11554,"polars_ops::series::ops"],[11555,"polars_ops::chunked_array::strings"],[11556,"core::mem::maybe_uninit"],[11557,"polars_ops::chunked_array::strings::namespace"],[11558,"polars_io::csv::read::read_impl::batched"],[11559,"polars_io::csv::write::writer"],[11560,"polars_io::ipc::write"],[11561,"polars_io::parquet::read::reader"],[11562,"polars_io::parquet::read::read_impl"],[11563,"polars_io::parquet::write::writer"],[11564,"polars_io::parquet::write::batched_writer"],[11565,"polars_plan::dsl::binary"],[11566,"polars_plan::dsl::udf"],[11567,"polars_lazy::frame::exitable"],[11568,"hashbrown::map"],[11569,"polars_plan::dsl::cat"],[11570,"polars_ops::series::ops::round"],[11571,"polars_time::series"],[11572,"polars_lazy::scan::csv"],[11573,"polars_lazy::scan::ipc"],[11574,"polars_lazy::scan::ndjson"],[11575,"polars_lazy::scan::parquet"],[11576,"polars_time::chunkedarray::rolling_window"],[11577,"polars_time::windows::bounds"],[11578,"polars_time::windows::group_by"],[11579,"polars_time::windows::window"],[11580,"polars_io::csv::read::options"],[11581,"polars_io::csv::write::options"],[11582,"polars_io::ipc::ipc_file"],[11583,"polars_ops::frame::join::asof"],[11584,"polars_io::json"],[11585,"polars_ops::series::ops::interpolation::interpolate"],[11586,"polars_ops::series::ops::is_between"],[11587,"polars_io::parquet::read::options"],[11588,"polars_ops::series::ops::rank"],[11589,"polars_io::parquet::write::options"],[11590,"polars_plan::plans"],[11591,"polars_plan::dsl::arity"],[11592,"polars_plan::dsl::function_expr::boolean"],[11593,"polars_plan::dsl::function_expr::cat"],[11594,"polars_plan::dsl::function_expr::datetime"],[11595,"polars_plan::dsl::function_expr::pow"],[11596,"polars_plan::dsl::function_expr::strings"],[11597,"polars_plan::dsl::function_expr::struct_"],[11598,"polars_plan::dsl::functions::temporal"],[11599,"polars_plan::dsl::options"],[11600,"polars_parquet::arrow::write"],[11601,"polars_plan::plans::lit"],[11602,"polars_parquet::parquet::metadata::file_metadata"],[11603,"polars_plan::plans::options"],[11604,"polars_arrow::legacy::kernels::rolling"],[11605,"polars_arrow::legacy::kernels::time"],[11606,"polars_lazy::scan::file_list_reader"],[11607,"polars_io::cloud::options"],[11608,"polars_parquet::parquet::metadata::column_order"],[11609,"polars_ops::chunked_array::binary::namespace"],[11610,"polars_io::ndjson::core"],[11611,"std::path"],[11612,"polars_ops::frame::join::cross_join"],[11613,"polars_lazy::dsl::eval"],[11614,"polars_time::chunkedarray::date"],[11615,"polars_time::chunkedarray::datetime"],[11616,"polars_time::chunkedarray::duration"],[11617,"core::ffi::c_str"],[11618,"core::default"],[11619,"polars_parquet::parquet::metadata::row_metadata"],[11620,"polars_core::series::ops"],[11621,"polars_plan::dsl::dt"],[11622,"polars_ops::series::ops::various"],[11623,"polars_arrow::scalar"],[11624,"polars_lazy::dsl::list"],[11625,"crossterm::command"],[11626,"polars_plan::dsl::struct_"],[11627,"polars_io::shared"],[11628,"polars_plan::plans::apply"],[11629,"polars_plan::dsl::function_expr::range"],[11630,"polars_plan::dsl::function_expr::list"],[11631,"polars_plan::dsl::function_expr::binary"],[11632,"polars_plan::dsl::function_expr::array"],[11633,"polars_parquet::arrow::read::statistics"],[11634,"std::ffi::os_str"],[11635,"alloc::ffi::c_str"],[11636,"polars_arrow::array::growable::structure"],[11637,"polars_arrow::array::struct_::mutable"],[11638,"polars_arrow::legacy::array::default_arrays"],[11639,"polars_arrow::buffer::immutable"],[11640,"polars_arrow::array::list"],[11641,"polars_core::named_from"],[11642,"polars_ops::frame::join"],[11643,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[11644,"polars_time::chunkedarray::time"],[11645,"core::num::nonzero"],[11646,"parquet_format_safe::parquet_format"],[11647,"polars_arrow::array::struct_::iterator"],[11648,"polars_ops::frame::join::asof::groups"],[11649,"polars_ops::chunked_array::list::namespace"],[11650,"polars_plan::dsl::name"],[11651,"polars_io::options"],[11652,"polars_core::chunked_array::ops::aggregate"],[11653,"polars_core::chunked_array::ops::aggregate::quantile"],[11654,"polars_arrow::legacy::index"],[11655,"polars_ops::chunked_array::strings::split"],[11656,"core::pin"],[11657,"core::io::borrowed_buf"],[11658,"parquet_format_safe::thrift::varint::decode"],[11659,"polars_time::chunkedarray::rolling_window::dispatch"],[11660,"polars_time::round"],[11661,"polars_parquet::parquet::metadata::schema_descriptor"],[11662,"polars_core::chunked_array::ops::aggregate::var"],[11663,"polars_plan::dsl::string"],[11664,"polars_ops::series::ops::to_dummies"],[11665,"polars_time::truncate"],[11666,"polars_io::csv::read::schema_inference"],[11667,"polars_time::upsample"],[11668,"polars_core::hashing::vector_hasher"],[11669,"alloc::collections::btree::map"],[11670,"polars_ops::chunked_array::array::namespace"],[11671,"polars_ops::chunked_array::array"],[11672,"polars_io::csv::read::buffer"],[11673,"polars_time::chunkedarray::string::patterns"],[11674,"polars_time::chunkedarray::string::infer"],[11675,"polars_arrow::legacy::array::fixed_size_list"],[11676,"polars_plan::dsl::function_expr::rolling"],[11677,"polars_plan::dsl::function_expr::rolling_by"],[11678,"polars_arrow::legacy::array::null"],[11679,"polars_arrow::bitmap::mutable"],[11680,"polars_arrow::array::utf8"],[11681,"polars_core::series::iterator"],[11682,"alloc::rc"],[11683,"polars_core"],[11684,"polars_core::chunked_array::struct_"],[11685,"polars_core::chunked_array::iterator::par"],[11686,"polars_core::chunked_array::object::extension"],[11687,"polars_core::chunked_array::ops::float_sorted_arg_max"],[11688,"polars_core::chunked_array::ops::gather"],[11689,"polars_core::chunked_array::ops::sort"],[11690,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[11691,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[11692,"polars_core::chunked_array::temporal"],[11693,"polars_core::chunked_array::temporal::conversion"],[11694,"polars_core::chunked_array::temporal::time"],[11695,"polars_core::chunked_array::logical::date"],[11696,"polars_core::chunked_array::logical::datetime"],[11697,"polars_core::chunked_array::logical::decimal"],[11698,"polars_core::chunked_array::logical::duration"],[11699,"polars_core::datatypes::aliases"],[11700,"polars_utils::aliases"],[11701,"polars_core::chunked_array::logical::time"],[11702,"polars_error::constants"],[11703,"polars_core::functions"],[11704,"polars_core::frame::horizontal"],[11705,"polars_io::utils::other"],[11706,"polars_io::parquet::metadata"],[11707,"polars_arrow::legacy::prelude"],[11708,"polars_arrow::legacy::array"],[11709,"polars_io::path_utils"],[11710,"polars_ops::series::ops::rolling"],[11711,"polars_parquet::parquet::write"],[11712,"polars_io::utils"],[11713,"polars_ops::frame::join::general"],[11714,"polars_ops::series::ops::abs"],[11715,"polars_plan::dsl::functions::selectors"],[11716,"polars_plan::dsl::functions::horizontal"],[11717,"polars_plan::dsl::functions::arity"],[11718,"polars_plan::dsl"],[11719,"polars_plan::dsl::functions::range"],[11720,"polars_plan::dsl::functions::index"],[11721,"polars_ops::chunked_array"],[11722,"polars_plan::dsl::functions::coerce"],[11723,"polars_plan::dsl::functions::syntactic_sugar"],[11724,"polars_time::base_utc_offset"],[11725,"polars_io::csv::read"],[11726,"polars_time"],[11727,"polars_ops::series::ops::clip"],[11728,"polars_io"],[11729,"polars_ops::series::ops::horizontal"],[11730,"polars_lazy::dsl::functions"],[11731,"polars_plan::dsl::functions::concat"],[11732,"polars_ops::series::ops::index"],[11733,"polars_io::csv::read::parser"],[11734,"polars_ops::series::ops::cum_agg"],[11735,"polars_ops::series::ops::diff"],[11736,"polars_time::dst_offset"],[11737,"polars_ops::series::ops::floor_divide"],[11738,"polars_ops::chunked_array::strings::concat"],[11739,"polars_ops::chunked_array::datetime::replace_time_zone"],[11740,"polars_time::date_range"],[11741,"polars_ops::series::ops::interpolation"],[11742,"polars_ops::series::ops::interpolation::interpolate_by"],[11743,"polars_io::utils::compression"],[11744,"polars_ops::series::ops::is_first_distinct"],[11745,"polars_ops::series::ops::is_in"],[11746,"polars_ops::series::ops::is_last_distinct"],[11747,"polars_io::parquet::read::utils"],[11748,"polars_ops::series::ops::negate"],[11749,"polars_ops::series::ops::not"],[11750,"polars_ops::series::ops::int_range"],[11751,"polars_plan::dsl::functions::repeat"],[11752,"polars_ops::chunked_array::repeat_by"],[11753,"polars_ops::series::ops::replace"],[11754,"polars_ops::chunked_array::strings::strip"],[11755,"polars_io::partition"],[11756,"polars_time::chunkedarray"],[11757,"polars_io::cloud"],[11758,"polars_io::utils::compression::magic"],[11759,"polars_ops::chunked_array::mode"],[11760,"polars_ops::chunked_array::nan_propagating_aggregate"],[11761,"polars_arrow::legacy::array::utf8"]],"if":"``````{{}b}`````````{{}d}````````{{{f{c}}h}b{}}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ah}}}}}d}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}}{{{l{Aj}}{l{Aj}}}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{An}}{l{An}}}}{{{l{c}}e}{}Al{B`Bb}}{{{f{{l{An}}}}{f{{l{An}}}}}}{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}}{{{l{Bd}}{l{Bd}}}}{{{f{{l{Aj}}}}{f{{Bh{Bf}}}}}}{{{f{{l{Bd}}}}{f{Bj}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{{{f{{l{Ah}}}}{f{Bn}}}Ab}{{{f{{l{C`}}}}{f{Bn}}}Ab}{{{f{{l{An}}}}{f{Bn}}}Ab}{{{f{{l{Aj}}}}{f{Bn}}}Ab}{{{f{{l{Bd}}}}{f{Bn}}}Ab}{{{f{{l{{Cb{c}}}}}}{f{Bn}}}AbCd}{{{f{{l{j}}}}{f{Bn}}}Ab}{{{f{{l{c}}}}{f{Bn}}}AbAl}{{{f{{l{An}}}}}d}{{{f{{l{An}}}}}{{Cf{d}}}}{{{f{{l{Ah}}}}}{{D`{{`{{Cn{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}}}}}{{{f{{l{C`}}}}}{{D`{{`{{Cn{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}}}}}{{{f{{l{Ah}}}}{f{Bj}}}{{D`{{`{{Cn{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}}}}}{{{f{{l{C`}}}}{f{Bj}}}{{D`{{`{{Cn{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}}}}}54{{{f{Db{l{c}}}}{f{{l{c}}}}}b{{Dh{}{{Dd{Df}}}}}}{{{f{{l{{Cb{c}}}}}}e}{{l{{Cb{c}}}}}Cd{{Dj{{Cf{{f{c}}}}}{{Ad{{Cf{c}}}}}}Dl}}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{Dj{{Cf{{f{Bj}}}}}{{Ad{{Cf{{Dn{Bj}}}}}}}}Dl}}{{{f{{l{Aj}}}}c}{{l{Aj}}}{{Dj{{Cf{{f{{Bh{Bf}}}}}}}{{Ad{{Cf{{Dn{{Bh{Bf}}}}}}}}}}Dl}}{{{f{{l{c}}}}e}{{l{c}}}Al{{Dj{Cf}{{Ad{Cf}}}}Dl}}{{{f{{l{An}}}}c}{{l{An}}}{{Dj{{Cf{d}}}{{Ad{{Cf{d}}}}}}Dl}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Dj{{Cf{Ab}}}{{Ad{{Cf{Ab}}}}}}Dl}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Af{E`}{{Ad{Ab}}}}}}{{{f{{l{C`}}}}e}{{l{g}}}{}{{Af{{Cf{E`}}}{{Ad{{Cf{c}}}}}}Dl}Dh}{{{f{{l{Ah}}}}e}{{l{g}}}{}{{Af{{Cf{E`}}}{{Ad{{Cf{c}}}}}}Dl}Dh}{{{f{{l{C`}}}}c}{{l{C`}}}{{Af{E`}{{Ad{Ab}}}}}}{{{f{{l{Eb}}}}c}Ab{{Dj{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ed}}}}c}Ab{{Dj{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dh{}{{Af{Cf}{{Ad{{Cf{e}}}}}}}Dh}{{{l{c}}e}{{l{c}}}Al{{Dj{}{{Ad{}}}}Dl}}{{{f{{l{c}}}}e}{{l{Bd}}}Dh{{Af{{f{DbEf}}}}}}{{{f{{l{An}}}}{f{Dj}}}{{l{An}}}}{{{f{{l{Aj}}}}{f{Dj}}}{{l{Aj}}}}{{{f{{l{Bd}}}}{f{Dj}}}{{l{Bd}}}}{{{f{{l{c}}}}{f{Dj}}}{{l{c}}}Al}{{{f{{l{c}}}}{f{Dj}}}{{l{e}}}AlDh}{{{f{{l{An}}}}{f{Dj}}}{{l{c}}}Dh}{{{f{{l{Aj}}}}{f{Dj}}}{{l{c}}}Dh}{{{f{{l{Bd}}}}{f{Dj}}}{{l{c}}}Dh}{{{f{{l{Aj}}}}c}{{l{Aj}}}{{Af{{f{{Bh{Bf}}}}}{{Ad{{f{{Bh{Bf}}}}}}}}}}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{Af{{f{Bj}}}{{Ad{{f{Bj}}}}}}}}{{{f{Db{l{c}}}}e}bAl{{Dj{}{{Ad{}}}}Dl}}{{{f{{l{c}}}}Ehg}{{l{i}}}Dh{}{{Af{}{{Ad{e}}}}}Dh}{{{f{{l{Ah}}}}{f{Dj}}}{{A`{{l{Ah}}n}}}}{{{f{{l{C`}}}}{f{Dj}}}{{A`{{l{C`}}n}}}}{{{f{{l{Ah}}}}e{f{Db{Bh{c}}}}}b{}{{Dj{{Cf{Ab}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Aj}}}}e{f{Db{Bh{c}}}}}b{}{{Dj{{Cf{{f{{Bh{Bf}}}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{c}}}}g{f{Db{Bh{e}}}}}bAl{}{{Dj{Cf{f{e}}}{{Ad{e}}}}}}{{{f{{l{An}}}}e{f{Db{Bh{c}}}}}b{}{{Dj{{Cf{d}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{{Cb{c}}}}}}g{f{Db{Bh{e}}}}}bCd{}{{Dj{{Cf{{f{c}}}}{f{e}}}{{Ad{e}}}}}}{{{f{{l{Bd}}}}e{f{Db{Bh{c}}}}}b{}{{Dj{{Cf{{f{Bj}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Aj}}}}c}{{l{Aj}}}{{Dj{{f{{Bh{Bf}}}}}{{Ad{{Dn{{Bh{Bf}}}}}}}}Dl}}{{{f{{l{c}}}}e}{{l{c}}}Al{{Dj{}{{Ad{}}}}Dl}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Dj{Ab}{{Ad{Ab}}}}Dl}}{{{f{{l{An}}}}c}{{l{An}}}{{Dj{d}{{Ad{d}}}}Dl}}{{{f{{l{{Cb{c}}}}}}e}{{l{{Cb{c}}}}}Cd{{Dj{{f{c}}}{{Ad{c}}}}Dl}}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{Dj{{f{Bj}}}{{Ad{{Dn{Bj}}}}}}Dl}}{{{f{{l{c}}}}g}{{l{i}}}Dh{}{{Af{}{{Ad{e}}}}}Dh}{{{f{{l{Bd}}}}Ej}{{l{El}}}}{{{f{{l{An}}}}Ej}{{l{El}}}}{{{f{{l{j}}}}Ej}{{l{El}}}}{{{f{{l{Aj}}}}Ej}{{l{El}}}}{{{f{{l{En}}}}Ej}{{l{El}}}}{{{f{{l{c}}}}Ej}{{l{El}}}Al}{{{f{{l{c}}}}{f{{Bh{Ab}}}}{f{F`}}}{{A`{{l{El}}n}}}Al}{{{f{{l{An}}}}{f{{Bh{Ab}}}}{f{F`}}}{{A`{{l{El}}n}}}}{{{f{{l{En}}}}{f{{Bh{Ab}}}}{f{F`}}}{{A`{{l{El}}n}}}}{{{f{{l{Aj}}}}{f{{Bh{Ab}}}}{f{F`}}}{{A`{{l{El}}n}}}}{{{f{{l{Bd}}}}{f{{Bh{Ab}}}}{f{F`}}}{{A`{{l{El}}n}}}}{{{f{{l{An}}}}}{{A`{{l{El}}n}}}}{{{f{{l{{Cb{c}}}}}}}{{A`{{l{El}}n}}}Cd}{{{f{{l{Bd}}}}}{{A`{{l{El}}n}}}}{{{f{{l{Aj}}}}}{{A`{{l{El}}n}}}}{{{f{{l{c}}}}}{{A`{{l{El}}n}}}Al}`{{{f{{l{C`}}}}}{{f{{l{C`}}}}}}{{{f{{l{Aj}}}}}{{f{{l{Aj}}}}}}{{{f{{l{Bd}}}}}{{l{Aj}}}}{{{f{{l{Ah}}}}}{{f{{l{Ah}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Dh}{{{f{{l{c}}}}}{{f{Eh}}}Dh}{{{f{{l{Bd}}}}}{{f{{l{Bd}}}}}}0{{{f{{l{Ah}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{Ah}}}DhDh{{Af{{Cf{E`}}CfCf}{{Ad{{Cf{Ab}}}}}}}}{{{l{An}}{l{An}}}}{{{f{{l{An}}}}{f{{l{An}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Fb}210210{{{f{c}}}{{f{e}}}{}{}}0{{{f{Dbc}}}{{f{Dbe}}}{}{}}0``{{{f{{l{j}}}}{f{Eh}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}{{l{g}}}Al{{Dj{}{{Ad{}}}}Dl}Al}{{{f{{l{En}}}}{f{Eh}}}{{A`{Abn}}}}{{{f{{l{Aj}}}}{f{Eh}}}{{A`{Abn}}}}{{{f{{l{An}}}}{f{Eh}}}{{A`{Abn}}}}{{{f{{l{Ah}}}}{f{Eh}}}{{A`{Abn}}}}{{{f{{l{C`}}}}{f{Eh}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Eh}}}{{A`{Abn}}}Al}{{{f{{l{Bd}}}}{f{Eh}}}{{A`{Abn}}}}{{{f{{l{Aj}}}}{f{Eh}}Fd}{{A`{Abn}}}}{{{f{{l{En}}}}{f{Eh}}Fd}{{A`{Abn}}}}{{{f{{l{Bd}}}}{f{Eh}}Fd}{{A`{Abn}}}}{{{f{{l{An}}}}{f{Eh}}Fd}{{A`{Abn}}}}{{{f{{l{Ah}}}}{f{Eh}}Fd}{{A`{Abn}}}}{{{f{{l{C`}}}}{f{Eh}}Fd}{{A`{Abn}}}}{{{f{{l{j}}}}{f{Eh}}Fd}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Eh}}Fd}{{A`{Abn}}}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Ff}{{{f{{l{c}}}}e}{{A`{Abn}}}FfBb}{{{f{{l{c}}}}}{{`{{Cn{}{{Ch{Fh}}}}}}}Dh}{{{f{{l{c}}}}}{{Fn{{Fj{{Cl{Cj}}}}{Fl{{f{{Cl{Cj}}}}}{{Ad{Fh}}}}}}}Dh}{{{f{{l{c}}}}}{{f{{G`{{Cl{Cj}}}}}}}Dh}{{{f{Db{l{c}}}}}{{f{Db{G`{{Cl{Cj}}}}}}}Dh}{{{f{{l{c}}}}}{{l{c}}}Dh}0{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}`{{{f{Db{l{c}}}}}b{DhAl}}`{{{f{{l{c}}}}}{{A`{{f{Bh}}n}}}Al}{{{f{Db{l{c}}}}{f{{l{c}}}}Gb}bDh}{{{f{Db{l{c}}}}{f{{l{e}}}}Gb}bDhDh}{{{f{{l{c}}}}}{{`{Gd}}}Al}{{}{{l{c}}}Dh}{Fh{{f{c}}}{}}0{Fh{{f{Dbc}}}{}}0{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}e}{}Al{B`Bb}}{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{{{f{Db{l{c}}}}}bDh}{Fhb}0{{{f{{l{c}}}}}{{l{c}}}Dh}{{{f{{l{c}}}}}{{f{Eh}}}Dh}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{An}}}Al}{{{f{{l{Bd}}}}{f{Bj}}}{{l{An}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{An}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{An}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{An}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}{{{f{{l{Aj}}}}{f{{Bh{Bf}}}}}{{l{An}}}}{{{f{{l{c}}}}e}{{l{An}}}AlBb}{{{f{{l{C`}}}}{f{{l{C`}}}}}{{l{An}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{An}}}}3645702819{{{f{{l{C`}}}}}{{A`{{Gj{Ab{Gh{Gf}}}}n}}}}{{{f{{l{Ah}}}}}{{A`{{Gj{Ab{Gh{Gf}}}}n}}}}{{{f{Db{l{c}}}}{f{{l{c}}}}}bAl}{{{f{{l{j}}}}{f{Bj}}}{{A`{Abn}}}}{{{f{{l{j}}}}}{{G`{Ab}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Al}{{{f{{l{An}}}}d}{{A`{{l{An}}n}}}}{{{f{{l{Aj}}}}{f{{Bh{Bf}}}}}{{A`{{l{Aj}}n}}}}{{{f{{l{c}}}}{f{{l{An}}}}}{{A`{{l{c}}n}}}{{Dh{}{{Gl{Df}}{Gn{Df}}}}}}{{{f{{l{Bd}}}}{f{{l{An}}}}}{{A`{{l{Bd}}n}}}}{{{f{{l{Aj}}}}{f{{l{An}}}}}{{A`{{l{Aj}}n}}}}{{{f{{l{{Cb{c}}}}}}{f{{l{An}}}}}{{A`{{l{{Cb{c}}}}n}}}Cd}{{{f{{l{c}}}}}{{Cf{Fh}}}Dh}`{{{f{{l{Bd}}}}{f{DbH`}}}{{A`{bHb}}}}{{{f{{l{Aj}}}}{f{DbH`}}}{{A`{bHb}}}}{{{f{{l{Ah}}}}{f{DbH`}}}{{A`{bHb}}}}{{{f{{l{{Cb{c}}}}}}{f{DbH`}}}{{A`{bHb}}}Cd}{{{f{{l{C`}}}}{f{DbH`}}}{{A`{bHb}}}}{{{f{{l{An}}}}{f{DbH`}}}{{A`{bHb}}}}{{{f{{l{c}}}}{f{DbH`}}}{{A`{bHb}}}Al}{{{f{{l{c}}}}e}bDh{{Af{Cf}}}}{{{f{{l{C`}}}}c}b{{Af{{Cf{E`}}}}}}{{{f{{l{Ah}}}}c}b{{Af{{Cf{E`}}}}}}{cc{}}{c{{l{e}}}Cj{{Dh{}{{Hd{c}}}}}}1{{{f{Bj}}c}{{l{e}}}Hf{{Dh{}{{Hd{}}}}Dh}}{{{f{{l{c}}}}e}{{l{c}}}{{Dh{}{{Hd{}}}}Dh}Hf}{{{f{Bj}}{G`{{Cl{Cj}}}}}{{l{c}}}Dh}{{{f{Bj}}{G`{{Cl{Cj}}}}Eh}{{l{c}}}Dh}{g{{A`{ic}}}{}{}{{Hh{c}{{Ch{e}}}}}{}}{c{{l{e}}}{{Hf{}{{Ch{{Gj{G`{Cf{Hj}}}}}}}}}Al}{c{{l{Ah}}}{{Hf{}{{Ch{{Cf{Ab}}}}}}}}{e{{l{Ah}}}{{Hl{Ab}}}{{Hf{}{{Ch{c}}}}}}{e{{l{Aj}}}{{Hn{{Bh{Bf}}}}}{{Hf{}{{Ch{c}}}}}}{c{{l{e}}}{{Hf{}{{Ch{Cf}}}}}Al}{e{{l{Aj}}}{{I`{{Bh{Bf}}}}}{{Hf{}{{Ch{{Cf{c}}}}}}}}{e{{l{Bd}}}{{Hn{Bj}}}{{Hf{}{{Ch{c}}}}}}{e{{l{{Cb{c}}}}}Cd{{Hf{}{{Ch{{Cf{c}}}}}}}}{e{{l{Bd}}}{{I`{Bj}}}{{Hf{}{{Ch{{Cf{c}}}}}}}}{c{{l{An}}}{{Hf{}{{Ch{d}}}}}}{c{{l{An}}}{{Hf{}{{Ch{{Cf{d}}}}}}}}{c{{l{Ah}}}{{Hf{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}{{{f{Bj}}c}{{l{e}}}{{Cn{}{{Ch{Cf}}}}}Al}{{{f{Bj}}e}{{l{{Cb{c}}}}}Cd{{Cn{}{{Ch{{Cf{c}}}}}}}}{{{f{Bj}}e}{{l{Aj}}}{{I`{{Bh{Bf}}}}}{{Cn{}{{Ch{{Cf{c}}}}}}}}{{{f{Bj}}e}{{l{Bd}}}{{I`{Bj}}}{{Cn{}{{Ch{{Cf{c}}}}}}}}{{{f{Bj}}c}{{l{An}}}{{Cn{}{{Ch{{Cf{d}}}}}}}}:?<=;8{e{{l{En}}}{{Hn{{Bh{Bf}}}}}{{Hf{}{{Ch{c}}}}}}?{e{{l{En}}}{{I`{{Bh{Bf}}}}}{{Hf{}{{Ch{{Cf{c}}}}}}}};98{{{f{Bj}}c}{{l{An}}}{{Cn{}{{Ch{d}}}}}}{{{f{Bj}}c}{{l{e}}}{{Cn{}{{Ch{}}}}}Al}{{{f{Bj}}e}{{l{{Cb{c}}}}}Cd{{Cn{}{{Ch{c}}}}}}{{{f{Bj}}e}{{l{Bd}}}{{I`{Bj}}}{{Cn{}{{Ch{c}}}}}}{{{f{Bj}}e}{{l{Aj}}}{{I`{{Bh{Bf}}}}}{{Cn{}{{Ch{c}}}}}}`{c{{l{An}}}{{Ib{}{{Ch{{Cf{d}}}}}}}}{c{{l{Ah}}}{{Ib{}{{Ch{{Cf{Ab}}}}}}}}{c{{l{An}}}{{Ib{}{{Ch{d}}}}}}{e{{l{Bd}}}{{Hn{Bj}}IdIfIh}{{Ib{}{{Ch{c}}}}}}{e{{l{Aj}}}{{Hn{{Bh{Bf}}}}IdIfIh}{{Ib{}{{Ch{c}}}}}}{e{{l{Bd}}}{{I`{Bj}}IdIf}{{Ib{}{{Ch{{Cf{c}}}}}}}}{e{{l{Aj}}}{{I`{{Bh{Bf}}}}IdIf}{{Ib{}{{Ch{{Cf{c}}}}}}}}{c{{l{e}}}{{Ib{}{{Ch{Cf}}}}}Al}{{c{f{Bj}}Eh}{{l{Ah}}}{{Ib{}{{Ch{{Cf{Ab}}}}}}}}{{{f{Bj}}{f{{Bh{Ab}}}}}{{A`{{l{j}}n}}}}{{{f{Bj}}{f{{Bh{c}}}}}{{l{Bd}}}{{I`{Bj}}}}{{{f{Bj}}{f{{Bh{c}}}}}{{l{Aj}}}{{I`{{Bh{Bf}}}}}}{{{f{Bj}}{f{Bh}}}{{l{c}}}Al}{{{f{Bj}}{f{{Bh{c}}}}}{{l{{Cb{c}}}}}Cd}{{{f{Bj}}{f{{Bh{d}}}}}{{l{An}}}}{{{f{Bj}}{f{{Bh{{Cf{c}}}}}}}{{l{{Cb{c}}}}}Cd}{{{f{Bj}}{f{{Bh{{Cf{c}}}}}}}{{l{Bd}}}{{I`{Bj}}}}{{{f{Bj}}{f{{Bh{{Cf{c}}}}}}}{{l{Aj}}}{{I`{{Bh{Bf}}}}}}{{{f{Bj}}{f{{Bh{{Cf{d}}}}}}}{{l{An}}}}{{{f{Bj}}{f{{Bh{Cf}}}}}{{l{c}}}Al}{c{{l{An}}}{{Ij{}{{Ch{{Cf{d}}}}}}}}{c{{l{e}}}{{Ij{}{{Ch{Cf}}}}}Al}{{{f{Bj}}G`}{{l{c}}}Al}{{{f{Bj}}G`{Cf{Hj}}}{{l{c}}}Al}{{{f{Bj}}dFh}{{l{An}}}}{{{f{Bj}}{f{Bj}}Fh}{{l{Bd}}}}{{{f{Bj}}{f{Ab}}Fh}{{l{C`}}}}{{{f{Bj}}{f{Ab}}Fh}{{l{Ah}}}}{{{f{Bj}}cFh}{{l{{Cb{c}}}}}Cd}{{{f{Bj}}Fh}{{l{c}}}Al}{{{f{Bj}}{f{{Bh{Bf}}}}Fh}{{l{En}}}}{{{f{Bj}}{f{{Bh{Bf}}}}Fh}{{l{Aj}}}}{{{f{Bj}}Fh}{{l{An}}}}{{{f{Bj}}Fh}{{l{{Cb{c}}}}}Cd}{{{f{Bj}}Fh}{{l{j}}}}{{{f{Bj}}Fh}{{l{C`}}}}{{{f{Bj}}Fh}{{l{Ah}}}}{{{f{Bj}}Fh}{{l{En}}}}{{{f{Bj}}Fh}{{l{Aj}}}}{{{f{Bj}}Fh}{{l{Bd}}}}:{{{f{{l{c}}}}Fh}{{l{c}}}Dh}{{{f{Bj}}Fh{f{Eh}}}{{l{Ah}}}}{{{f{Bj}}Fh{f{Eh}}Fh}{{l{C`}}}}{{{f{{l{c}}}}Fh}CfDh}{{{f{{l{Ah}}}}Fh}{{A`{Iln}}}}{{{f{{l{j}}}}Fh}{{A`{Iln}}}}{{{f{{l{{Cb{c}}}}}}Fh}{{A`{Iln}}}Cd}{{{f{{l{C`}}}}Fh}{{A`{Iln}}}}{{{f{{l{c}}}}Fh}{{A`{Iln}}}Al}{{{f{{l{An}}}}Fh}{{A`{Iln}}}}{{{f{{l{Bd}}}}Fh}{{A`{Iln}}}}{{{f{{l{Aj}}}}Fh}{{A`{Iln}}}}{{{f{{l{En}}}}Fh}{{A`{Iln}}}}{{{f{{l{Bd}}}}Fh}Il}{{{f{{l{j}}}}Fh}Il}{{{f{{l{c}}}}Fh}IlAl}{{{f{{l{An}}}}Fh}Il}{{{f{{l{Aj}}}}Fh}Il}{{{f{{l{En}}}}Fh}Il}{{{f{{l{Ah}}}}Fh}Il}{{{f{{l{C`}}}}Fh}Il}{{{f{{l{{Cb{c}}}}}}Fh}IlCd}{{{f{{l{C`}}}}Fh}{{Cf{Ab}}}}{{{f{{l{Ah}}}}Fh}{{Cf{Ab}}}}{{{f{{l{c}}}}}{{Cf{In}}}Dh}{{{f{{l{c}}}}}dDh}{{{f{{l{c}}}}}J`Dh}{{{f{{l{C`}}}}}Ab}{{{f{{l{Ah}}}}}Ab}{{{f{{l{c}}}}}CfDh}0{{{f{{l{{Cb{c}}}}}}Fh}{{Cf{{f{Jb}}}}}Cd}0{{{f{{l{j}}}}Ej}{{A`{{l{En}}n}}}}{{{f{{l{j}}}}Ej}{{A`{{Jd{Gf}}n}}}}{{{f{{l{c}}}}Fh}CfDh}{{{f{{l{Bd}}}}}Fh}{{{f{{l{Ah}}}}}Fh}{{{f{{l{C`}}}}}Fh}{{{f{{l{En}}}}}Fh}{{{f{{l{{Cb{c}}}}}}dd}{{A`{Bnn}}}Cd}{{{f{{l{Bd}}}}dd}{{A`{Bnn}}}}{{{f{{l{c}}}}dd}{{A`{Bnn}}}Al}{{{f{{l{An}}}}dd}{{A`{Bnn}}}}{{{f{{l{C`}}}}dd}{{A`{Bnn}}}}{{{f{{l{Ah}}}}dd}{{A`{Bnn}}}}{{{f{{l{En}}}}dd}{{A`{Bnn}}}}{{{f{{l{Aj}}}}dd}{{A`{Bnn}}}}{{{f{{l{c}}}}FhdFh}BnFb}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{An}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}{{{f{{l{c}}}}e}{{l{An}}}AlBb}{{{f{{l{C`}}}}{f{{l{C`}}}}}{{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{An}}}Al}{{{f{{l{Aj}}}}{f{{Bh{Bf}}}}}{{l{An}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{An}}}}{{{f{{l{Bd}}}}{f{Bj}}}{{l{An}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{An}}}}415682073{{{f{{l{c}}}}}dDh}{{{f{{l{c}}}}{Cf{Fh}}}{{l{c}}}Dh}{{}Fh}0{{FhJf{Cf{Jh}}}{{l{c}}}Al}{{{f{{l{Ah}}}}}{{f{Eh}}}}{{{f{{l{C`}}}}}{{f{Eh}}}}{{{f{{l{c}}}}}{{Jl{{Jj{c}}}}}Dh}{ce{}{}}0{{{l{Jn}}}{{Kb{K`Jn}}}}{{{l{Kd}}Kf{Cf{Ef}}}{{Kb{KhKd}}}}{{{l{Kj}}{Cf{Fh}}Fh}{{A`{{Kb{KlKj}}n}}}}{{{l{Kj}}{Cf{Fh}}Fh}{{Kb{KlKj}}}}{{{l{Kd}}Kf}{{Kb{KnKd}}}}{{{f{{l{Ah}}}}}}{{{f{{l{{Cb{c}}}}}}}{}Cd}{{{f{{l{c}}}}}{}Al}{{{f{{l{En}}}}}}{{{f{{l{Aj}}}}}}{{{f{{l{C`}}}}}}{{{f{{l{Bd}}}}}}{{{f{{l{An}}}}}}{{{f{{l{c}}}}}{{`{IdIfL`GdIj}}}Al}{{{l{c}}}AbDh}{{{l{Kj}}}Ab}{{{l{Kd}}}{{Kb{LbKd}}}}{{{f{{l{c}}}}}dDh}{{{f{{l{c}}}}}{{l{An}}}Ld}000{{{f{{l{c}}}}}{{l{An}}}Dh}02{{{f{{l{c}}}}}LfDh}{{{f{{l{c}}}}}{{`{Lh}}}Dh}{{{f{{l{c}}}}}{{`{{Cn{}{{Ch{{l{c}}}}}}}}}Dh}{{{f{{l{Ah}}}}}{{`{{Cn{}{{Ch{Gf}}}}}}}}{{{f{{l{c}}}}}{{Fn{{Fj{{Cl{Cj}}}}{Fl{{f{{Cl{Cj}}}}}{{Ad{{Cf{{f{Hj}}}}}}}}}}}Dh}`{{{f{{l{c}}}}}CfDh}{{{f{{l{c}}}}}{{Cf{Fh}}}Dh}{{{f{{l{c}}}}}{{Lj{c}}}Dh}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}01{{{f{{l{c}}}}}FhDh}0{{{f{{l{c}}}}e}{{l{c}}}Al{B`Ll}}00{{{f{{l{c}}}}Fh}{{l{c}}}Dh}{{{f{{l{Aj}}}}{f{{Bh{Bf}}}}}{{l{An}}}}{{{f{{l{C`}}}}{f{{l{C`}}}}}{{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{An}}}Al}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{An}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{An}}}}{{{f{{l{Bd}}}}{f{Bj}}}{{l{An}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{An}}}}{{{f{{l{c}}}}e}{{l{An}}}AlBb}026781354{{{f{{l{c}}}}}CfAl}{{{f{{l{An}}}}}{{Cf{d}}}}{{{f{{l{c}}}}}LnAl}{{{f{{l{An}}}}}Ln}{{{f{{l{Bd}}}}}Ln}{{{f{{l{Aj}}}}}Ln}{{{f{{l{c}}}}}{{Cf{M`}}}Al}{{{f{{l{An}}}}}{{Cf{M`}}}}{{{f{{l{Ed}}}}}{{Cf{M`}}}}{{{f{{l{Eb}}}}}{{Cf{Jf}}}}{{{f{{l{c}}}}}{{Cf{M`}}}Fb}{{{f{{l{Ed}}}}}Ln}{{{f{{l{Eb}}}}}Ln}{{{f{{l{c}}}}}LnFb}{{{f{Db{l{c}}}}{Jj{c}}}bDh}`{{{f{{l{c}}}}}{{Mb{c}}}Dh}{{{f{{l{c}}}}}{{f{{Mf{{Md{c}}}}}}}Dh}{{{f{{l{c}}}}}{{Cf{{Mj{Mh}}}}}Dh}{{{f{Db{l{c}}}}}{{f{Db{Mf{{Md{c}}}}}}}Dh}{{{f{{l{c}}}}}{{Mf{{Md{c}}}}}Dh}{{{f{{l{c}}}}}CfAl}{{{f{{l{An}}}}}{{Cf{d}}}}{{{f{{l{c}}}}}{{Cf{Gj}}}Al}{{{f{{l{c}}}}}LnAl}{{{f{{l{An}}}}}Ln}{{{f{{l{Bd}}}}}Ln}{{{f{{l{Aj}}}}}Ln}{{{f{Bj}}{f{Bh}}}{{l{c}}}Al}{{{f{Bj}}{f{{Bh{Bf}}}}FhFh}{{l{An}}}}{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{l{c}}e}{}Al{B`Bb}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{{{f{{l{c}}}}}FhDh}{{{f{{l{Aj}}}}}{{A`{Fhn}}}}{{{f{{l{c}}}}}{{A`{Fhn}}}Al}{{{f{{l{Bd}}}}}{{A`{Fhn}}}}{{{f{{l{c}}}}}{{f{Bj}}}Dh}{{{f{Bj}}c}{{l{El}}}{{I`{{Bh{{Cf{In}}}}}}}}{{{f{Bj}}c}{{l{Bd}}}{{I`{{Bh{{Cf{Ef}}}}}}}}{{{f{Bj}}c}{{l{Aj}}}{{I`{{Bh{{Dn{{Bh{Bf}}}}}}}}}}{{{f{Bj}}c}{{l{Aj}}}{{I`{{Bh{{Cf{{f{{Bh{Bf}}}}}}}}}}}}{{{f{Bj}}c}{{l{Aj}}}{{I`{{Bh{{f{{Bh{Bf}}}}}}}}}}{{{f{Bj}}c}{{l{Bd}}}{{I`{{Bh{{Cf{{Dn{Bj}}}}}}}}}}{{{f{Bj}}c}{{l{Bd}}}{{I`{{Bh{{Dn{Bj}}}}}}}}{{{f{Bj}}c}{{l{Bd}}}{{I`{{Bh{{Cf{{f{Bj}}}}}}}}}}{{{f{Bj}}c}{{l{Bd}}}{{I`{{Bh{{f{Bj}}}}}}}}{{{f{Bj}}{Ml{In}}}{{l{El}}}}{{{f{Bj}}{Ml{Jh}}}{{l{Mn}}}}{{{f{Bj}}{Ml{N`}}}{{l{Jn}}}}{{{f{Bj}}{Ml{Gf}}}{{l{Kd}}}}{{{f{Bj}}c}{{l{Ed}}}{{I`{{Bh{{Cf{M`}}}}}}}}{{{f{Bj}}c}{{l{Eb}}}{{I`{{Bh{{Cf{Jf}}}}}}}}{{{f{Bj}}c}{{l{Kj}}}{{I`{{Bh{{Cf{Nb}}}}}}}}{{{f{Bj}}c}{{l{Eb}}}{{I`{{Bh{Jf}}}}}}{{{f{Bj}}c}{{l{Kd}}}{{I`{{Bh{{Cf{Gf}}}}}}}}{{{f{Bj}}{f{{Bh{c}}}}}{{l{{Cb{c}}}}}Cd}{{{f{Bj}}e}{{l{{Cb{c}}}}}Cd{{I`{{Bh{{Cf{c}}}}}}}}{{{f{Bj}}c}{{l{Jn}}}{{I`{{Bh{{Cf{N`}}}}}}}}{{{f{Bj}}c}{{l{Ed}}}{{I`{{Bh{M`}}}}}}{{{f{Bj}}c}{{l{Nd}}}{{I`{{Bh{{Cf{Nf}}}}}}}}{{{f{Bj}}c}{{l{Mn}}}{{I`{{Bh{{Cf{Jh}}}}}}}}{{{f{Bj}}c}{{l{Bd}}}{{I`{{Bh{Ef}}}}}}{{{f{Bj}}c}{{l{Aj}}}{{I`{{Bh{{G`{Bf}}}}}}}}{{{f{Bj}}c}{{l{An}}}{{I`{{Bh{d}}}}}}{{{f{Bj}}c}{{l{Nh}}}{{I`{{Bh{Bf}}}}}}{{{f{Bj}}c}{{l{Aj}}}{{I`{{Bh{{Cf{{Dn{{Bh{Bf}}}}}}}}}}}}{{{f{Bj}}c}{{l{Nj}}}{{I`{{Bh{Nl}}}}}}{{{f{Bj}}c}{{l{El}}}{{I`{{Bh{In}}}}}}{{{f{Bj}}c}{{l{Nj}}}{{I`{{Bh{{Cf{Nl}}}}}}}}{{{f{Bj}}c}{{l{Mn}}}{{I`{{Bh{Jh}}}}}}{{{f{Bj}}c}{{l{Nd}}}{{I`{{Bh{Nf}}}}}}{{{f{Bj}}c}{{l{Nh}}}{{I`{{Bh{{Cf{Bf}}}}}}}}{{{f{Bj}}c}{{l{An}}}{{I`{{Bh{{Cf{d}}}}}}}}{{{f{Bj}}c}{{l{Aj}}}{{I`{{Bh{{Cf{{G`{Bf}}}}}}}}}}{{{f{Bj}}c}{{l{Nn}}}{{I`{{Bh{O`}}}}}}{{{f{Bj}}c}{{l{Jn}}}{{I`{{Bh{N`}}}}}}{{{f{Bj}}c}{{l{Kd}}}{{I`{{Bh{Gf}}}}}}{{{f{Bj}}c}{{l{Kj}}}{{I`{{Bh{Nb}}}}}}{{{f{Bj}}c}{{l{Nn}}}{{I`{{Bh{{Cf{O`}}}}}}}}{{{f{Bj}}}{{l{{Cb{c}}}}}Cd}{{{f{{l{c}}}}FhFh}{{l{c}}}Al}{{{f{{l{Ah}}}}FhFh}{{l{Ah}}}}{{{f{{l{An}}}}FhFh}{{l{An}}}}{{{f{{l{Bd}}}}FhFh}{{l{Bd}}}}{{{f{{l{Aj}}}}FhFh}{{l{Aj}}}}{{{f{{l{{Cb{c}}}}}}FhFh}{{l{{Cb{c}}}}}Cd}{{{f{{l{C`}}}}FhFh}{{l{C`}}}}{{{f{{l{j}}}}FhFh}{{l{j}}}}{{{f{{l{En}}}}FhFh}{{l{En}}}}{{{f{Bj}}{G`{c}}}{{l{{Cb{c}}}}}Cd}{{{f{Bj}}{G`{c}}Hj}{{l{{Cb{c}}}}}Cd}{{{f{Bj}}G`}{{l{c}}}Al}{{{Mf{Ob}}{G`{{Cl{Cj}}}}InIn}{{l{c}}}Dh}{{{f{{l{c}}}}}{{l{c}}}Ld}{{{f{{l{An}}}}}}{{{l{An}}}}{{{f{{l{C`}}}}{f{{l{C`}}}}}{{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{An}}}Al}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{An}}}}{{{f{{l{Bd}}}}{f{Bj}}}{{l{An}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{An}}}}{{{f{{l{c}}}}e}{{l{An}}}AlBb}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{An}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{An}}}}{{{f{{l{Aj}}}}{f{{Bh{Bf}}}}}{{l{An}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}261803475{{{f{{l{C`}}}}{f{{l{C`}}}}}}{{{f{{l{c}}}}}FhDh}`{{{f{{l{C`}}}}}{{A`{{Gh{Gf}}n}}}}{{{f{{l{Ah}}}}}{{A`{{Gh{Gf}}n}}}}`{{{f{{l{Bd}}}}}{{`{{Od{}{{Ch{{Cf{{f{Bj}}}}}}}}}}}}{{{f{{l{Ah}}}}}{{`{{Od{}{{Ch{{Cf{Ab}}}}}}}}}}{{{f{{l{Bd}}}}}{{`{Of}}}}{{{f{Db{l{Ah}}}}}{{`{Of}}}}{{{f{{l{c}}}}}LnAl}{{{f{Db{l{c}}}}}bDh}{{{f{{l{Eb}}}}M`Oh}{{A`{{Cf{Jf}}n}}}}{{{f{{l{c}}}}M`Oh}{{A`{{Cf{M`}}n}}}Fb}{{{f{{l{Ed}}}}M`Oh}{{A`{{Cf{M`}}n}}}}{{{f{{l{Ed}}}}M`Oh}{{A`{Lnn}}}}{{{f{{l{Eb}}}}M`Oh}{{A`{Lnn}}}}{{{f{{l{c}}}}M`Oh}{{A`{Lnn}}}Fb}{{{f{Bj}}FhM`}{{A`{{l{An}}n}}}}{{{f{Bj}}FhM`M`}{{A`{{l{c}}n}}}Al}{{{f{Bj}}Fh}{{l{c}}}Al}{{{f{Bj}}FhM`M`}{{l{c}}}Al}{{{f{{l{c}}}}}{{l{c}}}Dh}{{{f{{l{c}}}}}{{f{Ob}}}Dh}{{{f{{l{Ed}}}}}Ab}{{{f{{l{Kd}}}}}Ab}{{{f{{l{Jn}}}}}Ab}{{{f{{l{Nn}}}}}Ab}{{{f{{l{Nj}}}}}Ab}{{{f{{l{Eb}}}}}Ab}{{{f{{l{Ah}}}}}Ab}{{{f{{l{Mn}}}}}Ab}{{{f{{l{Nd}}}}}Ab}{{{f{{l{El}}}}}Ab}{{{f{{l{Nh}}}}}Ab}617:2045839{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{l{c}}e}{}Al{B`Bb}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{{{f{Db{l{c}}}}{f{Bj}}}bDh}{{{f{{l{C`}}}}}{{l{C`}}}}{{{f{{l{{Cb{c}}}}}}}{{l{{Cb{c}}}}}Cd}{{{f{{l{c}}}}}{{l{c}}}Al}{{{f{{l{An}}}}}{{l{An}}}}{{{f{{l{En}}}}}{{l{En}}}}{{{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{Aj}}}}}{{l{Aj}}}}{{{f{{l{Bd}}}}}{{l{Bd}}}}{{{f{{l{c}}}}{f{Dj}}Oj}{{A`{Abn}}}Al}{{{f{{l{c}}}}Fhe}{{A`{{l{c}}n}}}Ld{{Af{{f{Db{l{c}}}}}{{Ad{Cf}}}}}}{{{f{{l{c}}}}M`dd{Cf{Jh}}}{{A`{{l{c}}n}}}Dh}{{{f{{l{c}}}}Fhdd{Cf{Jh}}}{{A`{{l{c}}n}}}Dh}{{{f{Db{l{c}}}}{f{{Bh{In}}}}e}{{A`{Abn}}}Ol{{Hf{}{{Ch{Cf}}}}}}{{{f{{l{Bd}}}}{f{{Bh{In}}}}c}{{A`{Abn}}}{{Hf{}{{Ch{{Cf{{f{Bj}}}}}}}}}}{{{f{{l{An}}}}{f{{Bh{In}}}}c}{{A`{Abn}}}{{Hf{}{{Ch{{Cf{d}}}}}}}}{{{f{{l{An}}}}c{Cf{d}}}{{A`{{l{An}}n}}}{{Hf{}{{Ch{In}}}}}}{{{f{{l{Bd}}}}c{Cf{{f{Bj}}}}}{{A`{{l{Bd}}n}}}{{Hf{}{{Ch{In}}}}}}{{{f{{l{Aj}}}}c{Cf{{f{{Bh{Bf}}}}}}}{{A`{{l{Aj}}n}}}{{Hf{}{{Ch{In}}}}}}{{{f{{l{c}}}}eCf}{{A`{{l{c}}n}}}Al{{Hf{}{{Ch{In}}}}}}{{{f{{l{Bd}}}}ce}{{A`{{l{Bd}}n}}}{{Hf{}{{Ch{In}}}}}{{Dj{{Cf{{f{Bj}}}}}{{Ad{{Cf{Ef}}}}}}}}{{{f{{l{An}}}}ce}{{A`{{l{An}}n}}}{{Hf{}{{Ch{In}}}}}{{Dj{{Cf{d}}}{{Ad{{Cf{d}}}}}}}}{{{f{{l{Aj}}}}ce}{{A`{{l{Aj}}n}}}{{Hf{}{{Ch{In}}}}}{{Dj{{Cf{{f{{Bh{Bf}}}}}}}{{Ad{{Cf{{G`{Bf}}}}}}}}}}{{{f{{l{c}}}}eg}{{A`{{l{c}}n}}}Al{{Hf{}{{Ch{In}}}}}{{Dj{Cf}{{Ad{Cf}}}}}}{{{f{{l{Bd}}}}{f{{l{An}}}}{Cf{{f{Bj}}}}}{{A`{{l{Bd}}n}}}}{{{f{{l{An}}}}{f{{l{An}}}}{Cf{d}}}{{A`{{l{An}}n}}}}{{{f{{l{c}}}}{f{{l{An}}}}Cf}{{A`{{l{c}}n}}}Al}{{{f{{l{Aj}}}}{f{{l{An}}}}{Cf{{f{{Bh{Bf}}}}}}}{{A`{{l{Aj}}n}}}}{{{f{Db{l{Ah}}}}}b}{{{f{Db{l{c}}}}d}bDh}{{{f{Db{l{Ah}}}}Eh}b}{{{f{Db{l{c}}}}In}bDh}{{{f{Db{l{c}}}}Lf}bDh}{{{f{{l{An}}}}Gf}{{l{An}}}}{{{f{{l{Aj}}}}Gf}{{l{Aj}}}}{{{f{{l{En}}}}Gf}{{l{En}}}}{{{f{{l{Ah}}}}Gf}{{l{Ah}}}}{{{f{{l{C`}}}}Gf}{{l{C`}}}}{{{f{{l{{Cb{c}}}}}}Gf}{{l{{Cb{c}}}}}Cd}{{{f{{l{c}}}}Gf}{{l{c}}}Al}{{{f{{l{Bd}}}}Gf}{{l{Bd}}}}{{{f{{l{An}}}}Gf{Cf{d}}}{{l{An}}}}{{{f{{l{Aj}}}}Gf{Cf{{f{{Bh{Bf}}}}}}}{{l{Aj}}}}{{{f{{l{C`}}}}Gf{Cf{{f{Ab}}}}}{{l{C`}}}}{{{f{{l{Bd}}}}Gf{Cf{{f{Bj}}}}}{{l{Bd}}}}{{{f{{l{Ah}}}}Gf{Cf{{f{Ab}}}}}{{l{Ah}}}}{{{f{{l{{Cb{c}}}}}}Gf{Cf{{Cb{c}}}}}{{l{{Cb{c}}}}}Cd}{{{f{{l{c}}}}GfCf}{{l{c}}}Al}{{{f{{l{En}}}}Gf{Cf{{f{{Bh{Bf}}}}}}}{{l{En}}}}{{{f{Db{l{c}}}}}bDh}{{{f{{l{c}}}}GfFh}{{l{c}}}Dh}0{{{f{{l{Aj}}}}d}{{l{Aj}}}}{{{f{{l{An}}}}d}{{l{An}}}}{{{f{{l{j}}}}d}{{l{j}}}}{{{f{{l{En}}}}d}{{l{En}}}}{{{f{{l{c}}}}d}{{l{c}}}Al}{{{f{{l{Bd}}}}d}{{l{Bd}}}}{{{f{{l{Aj}}}}Ej}{{l{Aj}}}}{{{f{{l{c}}}}Ej}{{l{c}}}Al}{{{f{{l{j}}}}Ej}{{l{j}}}}{{{f{{l{Bd}}}}Ej}{{l{Bd}}}}{{{f{{l{En}}}}Ej}{{l{En}}}}{{{f{{l{An}}}}Ej}{{l{An}}}}{{{f{{l{c}}}}Gf}{{Gj{{l{c}}{l{c}}}}}Dh}0{{{f{{l{c}}}}Bf}{{Cf{M`}}}Al}{{{f{{l{c}}}}Bf}LnFb}{{{f{{l{Eb}}}}Bf}Ln}{{{f{{l{Ed}}}}Bf}Ln}{{{f{{l{j}}}}}{{f{{Bh{Ob}}}}}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}e}{}Al{B`Bb}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{{{f{{l{An}}}}}{{Cf{In}}}}{{{f{{l{c}}}}}CfAl}{{{f{{l{c}}}}}LnAl}{{{f{{l{An}}}}}Ln}{{{f{{l{Aj}}}}}Ln}{{{f{{l{c}}}}{Cf{Fh}}}{{l{c}}}Dh}{{{f{{l{c}}}}{f{{l{El}}}}}{{A`{{l{c}}n}}}Dh}{{{f{{l{c}}}}{f{e}}}{{A`{{l{c}}n}}}Dh{{I`{{Bh{In}}}}On}}{{{f{{l{c}}}}{f{{Bh{A@`}}}}Lf}{{l{c}}}Dh}{{{f{{l{c}}}}{f{{Bh{A@`}}}}}{{l{c}}}Dh}{{{f{{l{Bd}}}}{f{{l{El}}}}}{{l{Bd}}}}{{{f{{l{j}}}}{f{{l{El}}}}}{{l{j}}}}{{{f{{l{Aj}}}}{f{{l{El}}}}}{{l{Aj}}}}{{{f{{l{c}}}}{f{{l{El}}}}}{{l{c}}}{{Dh{}{{Gl{Df}}{A@b{Df}}}}Dh}}{{{f{{l{Bd}}}}{f{c}}}{{l{Bd}}}{{I`{{Bh{In}}}}On}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Dh{}{{Gl{Df}}{A@b{Df}}}}Dh}{{I`{{Bh{In}}}}On}}{{{f{{l{j}}}}{f{c}}}{{l{j}}}{{I`{{Bh{In}}}}On}}{{{f{{l{Aj}}}}{f{c}}}{{l{Aj}}}{{I`{{Bh{In}}}}On}}`{{{f{{l{c}}}}dA@d}{{G`{{G`{A@f}}}}}Dh}{{{f{{l{c}}}}}{{l{c}}}Ld}{{{f{{l{Bd}}}}Fh}{{A`{Abn}}}}{{{f{Db{l{Ah}}}}Eh}b}{{{f{Db{l{C`}}}}Eh}b}{{{f{{l{c}}}}}{{A`{{A@n{{A@h{f}}{A@l{{A@j{Fh}}}}}}n}}}Al}{{{f{{l{Ah}}}}}{{A`{{A@n{AA`{A@l{{A@j{Fh}}}}}}n}}}}{{{f{c}}}e{}{}}{{{f{{l{Aj}}}}}{{l{Bd}}}}{{{f{{l{c}}}}}{{G`{Cf}}}Al}{{{f{{l{c}}}}}{{AAb{G`{G`{Cf}}}}}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}10{{{f{{l{Ah}}}}c}{{A`{{l{Ah}}n}}}{{Af{E`}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{C`}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Cf{E`}}}{{Ad{{A`{{Cf{c}}n}}}}}}Dl}Dh}{{{f{{l{Ah}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Cf{E`}}}{{Ad{{A`{{Cf{c}}n}}}}}}Dl}Dh}{{{f{{l{C`}}}}c}{{A`{{l{C`}}n}}}{{Af{E`}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{C`}}}}c}{{A`{{l{Ah}}n}}}{{Af{E`}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{}{}{{Af{Cf}{{Ad{{A`{{Cf{e}}g}}}}}}Dl}Dh}{{{f{{l{c}}}}g}{{A`{{l{Bd}}e}}}Dh{}{{Af{{f{DbEf}}}{{Ad{{A`{be}}}}}}}}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dh}{c{{A`{e}}}{}{}}0{{{f{Bj}}g}{{A`{{l{i}}e}}}Cj{}{{Hf{}{{Ch{{A`{ce}}}}}}}{{Dh{}{{Hd{c}}}}Dh}}11{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{A`{{l{Ah}}n}}}Dh{{Af{{Cf{E`}}Cf}{{Ad{{A`{{Cf{Ab}}n}}}}}}}}{{{f{c}}}AAd{}}0{{{f{{l{{Cb{c}}}}}}}{{A`{{l{{Cb{c}}}}n}}}Cd}{{{f{{l{Bd}}}}}{{A`{{l{Bd}}n}}}}{{{f{{l{Aj}}}}}{{A`{{l{Aj}}n}}}}{{{f{{l{An}}}}}{{A`{{l{An}}n}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Al}{{{l{j}}}AAf}{{{f{{l{c}}}}{f{Ab}}}{{A`{{f{{l{c}}}}n}}}Dh}{{{f{Db{l{c}}}}}bDh}{{{f{{l{c}}}}Fh}{}Dh}{{{f{{l{c}}}}Bf}{{Cf{M`}}}Al}{{{f{{l{Eb}}}}Bf}Ln}{{{f{{l{Ed}}}}Bf}Ln}{{{f{{l{c}}}}Bf}LnFb}{{{f{{l{Kj}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{El}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Ed}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{En}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Nh}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Nd}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Eb}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{An}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Kd}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{{Cb{c}}}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}Cd}{{{f{{l{Aj}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Bd}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Mn}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Nn}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Nj}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Jn}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Bd}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{{{f{{l{El}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{{{f{{l{Jn}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{{{f{{l{Kd}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{{{f{{l{Nn}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{{{f{{l{Kj}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{{{f{{l{Nd}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{{{f{{l{Eb}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{{{f{{l{Nj}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{{{f{{l{Ed}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{{{f{{l{An}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{{{f{{l{Aj}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{{{f{{l{Nh}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{{{f{{l{Mn}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{{{f{{l{En}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{{{f{{l{{Cb{c}}}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}Cd}{ce{}{}}0{{{f{{l{C`}}}}}Fh}{{{f{Bj}}c}{{l{e}}}Cj{{Dh{}{{Hd{c}}}}Dh}}{{{f{{l{e}}}}c}{{l{e}}}Cj{{Dh{}{{Hd{c}}}}Dh}}{{{f{{l{c}}}}{G`{{Cl{Cj}}}}}{{l{c}}}Dh}{{{l{c}}{f{Bj}}}{{l{c}}}Dh}{{{f{{Bh{AAh}}}}e}c{}{{AAj{{f{{l{El}}}}}{{Ad{c}}}}}}{{{l{j}}{Cf{Hj}}}{{l{j}}}}{{{l{j}}{l{An}}}{{l{j}}}}{{{f{{l{c}}}}Lf}{{l{c}}}Dh}{{{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}32103223103232102323103232103223{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{l{Ah}}}Dh{{Af{{Cf{E`}}Cf}{{Ad{{Cf{Ab}}}}}}}}{{{f{{l{C`}}}}{f{{l{c}}}}e}{{l{C`}}}Dh{{Af{{Cf{E`}}Cf}{{Ad{{Cf{Ab}}}}}}}}{{{f{Db{l{j}}}}{f{{l{j}}}}}b}{{{f{{l{c}}}}{f{{l{An}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dh}````{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}c}e{}{}{}}{{c{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}g{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}c}g{}{}{}}{{c{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}g{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}65654654650654654````````````````{{{f{c}}h}b{}}000{{{f{DbABd}}{f{Cj}}}b}{{{f{DbABd}}}b}{{{f{DbABf}}}b}{{{f{DbABh}}c}b{{Cn{}{{Ch{{Cf{d}}}}}}Ij}}{{{f{Db{ABj{c}}}}e}bAl{{Cn{}{{Ch{Cf}}}}Ij}}{{{f{Db{ABj{c}}}}e}bAl{{Cn{}{{Ch{}}}}Ij}}{{{f{DbABl}}}b}{{{f{DbABn}}}b}65{{{f{DbAC`}}}b}{{{f{DbACb}}}b}{{{f{DbABh}}}b}{{{f{DbACd}}}b}{{{f{Db{ABj{c}}}}}bAl}{{{f{Db{ACf{c}}}}}b{AChOn}}{{{f{DbACj}}}b}{{{f{DbACl}}}b}{{{f{Db{ACn{c}}}}}bAl}{{{f{DbABd}}{Cf{{f{Cj}}}}}b}{{{f{DbABd}}{Cf{{f{Ab}}}}}{{A`{bn}}}}{{{f{DbABl}}{Cf{{f{Ab}}}}}{{A`{bn}}}}{{{f{Db{ABj{c}}}}{Cf{{f{Bh}}}}}bAl}{{{f{Db{ACf{c}}}}{Cf{e}}}b{AChOn}{{I`{c}}}}{{{f{DbABn}}{Cf{c}}}b{}}{{{f{DbABl}}{f{Ab}}}{{A`{bn}}}}{{{f{DbABd}}{f{Ab}}}{{A`{bn}}}}{{{f{DbABf}}{f{Ab}}}{{A`{bn}}}}{{{f{DbAC`}}{f{Ab}}}{{A`{bn}}}}{{{f{DbACb}}{f{Ab}}}{{A`{bn}}}}{{{f{DbABh}}{f{Ab}}}{{A`{bn}}}}{{{f{DbACd}}{f{Ab}}}{{A`{bn}}}}{{{f{Db{ABj{c}}}}{f{Ab}}}{{A`{bn}}}Al}{{{f{Db{ABj{c}}}}{f{Bh}}}bAl}{{{f{DbAC`}}c}b{{Cn{}{{Ch{{Cf{{f{Bj}}}}}}}}Ij}}{{{f{DbACb}}c}b{{Cn{}{{Ch{{Cf{{f{{Bh{Bf}}}}}}}}}}Ij}}{{{f{DbABn}}c}b{}}{{{f{Db{ACf{c}}}}e}b{AChOn}{{I`{c}}}}{{{f{DbACj}}d}b}{{{f{Db{ACn{c}}}}}bAl}{{{f{DbAC`}}c}b{{Cn{}{{Ch{{f{Bj}}}}}}}}{{{f{DbACb}}c}b{{Cn{}{{Ch{{f{{Bh{Bf}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}0000000000{{{f{Dbc}}}{{f{Dbe}}}{}{}}0000000000`{{{f{{ACf{c}}}}}{{ACf{c}}}{AChOn}}{{{f{ACj}}}ACj}{{{f{ACl}}}ACl}{{{f{{ACn{c}}}}}{{ACn{c}}}{AD`Al}}{{{f{c}}{f{Dbe}}}b{}{}}000{{{f{c}}}b{}}000{{}ABd}{{}ABf}{Fh{{f{c}}}{}}0000000000{Fh{{f{Dbc}}}{}}0000000000{Fhb}0000000000{{{f{AC`}}}d}{{{f{ACb}}}d}{{{f{ABh}}}d}{{{f{{ABj{c}}}}}dAl}{{{f{ABl}}}d}{{{f{AC`}}}{{f{Ob}}}}{{{f{ACb}}}{{f{Ob}}}}{{{f{ABh}}}{{f{Ob}}}}{{{f{{ABj{c}}}}}{{f{Ob}}}Al}{{{f{ABl}}}{{f{Ob}}}}{ABn{{l{c}}}Dh}{{{f{DbABd}}}{{l{Ah}}}}{{{f{DbABf}}}{{l{Ah}}}}{{{f{DbACd}}}{{l{Ah}}}}{{{f{DbABl}}}{{l{Ah}}}}{{{ACf{Bj}}}{{l{Bd}}}}{{{ACf{{Bh{Bf}}}}}{{l{Aj}}}}{ACj{{l{An}}}}{AClADb}{{{ACn{c}}}{{l{c}}}Al}`{cc{}}0000000000{{{f{Bj}}e}ADd{}{{Cn{}{{Ch{{Cf{c}}}}}}}}{{{f{Bj}}e}ADd{}{{Cn{}{{Ch{c}}}}}}{{{f{Bj}}{f{{Bh{c}}}}}ADd{}}{{{f{Bj}}{f{{Bh{{Cf{c}}}}}}}ADd{}}{{{f{Eh}}FhFh{f{Bj}}}{{A`{{Cl{ABl}}n}}}}{{}Fh}0000000000{{{f{DbAC`}}}{{Cl{Cj}}}}{{{f{DbACb}}}{{Cl{Cj}}}}{{{f{DbABh}}}{{Cl{Cj}}}}{{{f{Db{ABj{c}}}}}{{Cl{Cj}}}Al}{{{f{DbABl}}}{{Cl{Cj}}}}{ce{}{}}0000000000`{{{f{Bj}}Fh{Cf{Eh}}}ABd}{{{f{Bj}}Fh{Cf{Eh}}}ABf}{{{f{Bj}}FhFh}AC`}{{{f{Bj}}FhFh}ACb}{{{f{Bj}}FhFh}ABh}{{{f{Bj}}Fh}ACd}{{{f{Bj}}FhFhEh}{{ABj{c}}}Al}{{{f{Bj}}Fh}{{ACf{c}}}{AChOn}}{{{f{Bj}}Fh}ACj}{{{f{Bj}}Fh}ACl}{{{f{Bj}}Fh}{{ACn{c}}}Al}{{{f{Bj}}FhFhEhEh}{{ABj{c}}}Al}{{{f{DbABn}}}b}{{{f{DbACj}}}b}{{{f{DbACl}}}b}{{{f{Db{ACn{c}}}}}bAl}{{{f{c}}}e{}{}}000{c{{A`{e}}}{}{}}000000000000000000000{{{f{c}}}AAd{}}0000000000{ce{}{}}0000000000````````{{{f{DbABl}}}b}{{{f{DbABl}}{Cf{{f{Ab}}}}}{{A`{bn}}}}{{{f{DbABl}}{f{Ab}}}{{A`{bn}}}}`{{{f{ABl}}}d}{{{f{ABl}}}{{f{Ob}}}}{{{f{DbABl}}}{{l{Ah}}}}{{{f{Eh}}FhFh{f{Bj}}}{{A`{{Cl{ABl}}n}}}}{{{f{DbABl}}}{{Cl{Cj}}}}````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{Fd}}}Fd}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}0{{}Fd}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}{{{f{Fd}}{f{Fd}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{Fd}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}{{{f{Fd}}{f{Dbc}}}bADf}{{}Fh}{ce{}{}}{{{f{Fd}}}d}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}4``{{ADh{f{Bj}}}{{l{c}}}Dh}{{ADj{f{{l{c}}}}}{{l{c}}}Dh}10{{ADj{f{Bj}}Eh}{{l{c}}}Dh}0{{ADh{f{Bj}}}{{A`{{l{c}}e}}}Dh{}}{{ADj{f{{l{c}}}}}{{A`{{l{c}}e}}}Dh{}}10{{ADj{f{Bj}}Eh}{{A`{{l{c}}e}}}Dh{}}0`{ADlADl}``{{ADn{f{Bj}}Eh}e{}{{AE`{c}}}}{{e{f{Bj}}Eh}AE`{}{{Ib{}{{Ch{c}}}}}}````{{{f{c}}}{{f{e}}}{}{}}00{{{f{Dbc}}}{{f{Dbe}}}{}{}}00{Fh{{f{c}}}{}}00{Fh{{f{Dbc}}}{}}00{Fhb}00{cc{}}00{{}Fh}00{ce{}{}}00000{{{f{AEb}}}AEd}{{{f{AEf}}Eh}AEh}{{{f{DbAEd}}}Cf}{{{f{DbAEh}}}Cf}{{{f{Db{AEj{c}}}}}CfCn}21{{{f{Db{AEj{c}}}}}CfGd}`{{{f{AEd}}}{{Gj{Fh{Cf{Fh}}}}}}{{{f{AEh}}}{{Gj{Fh{Cf{Fh}}}}}}{{{f{{AEj{c}}}}}{{Gj{Fh{Cf{Fh}}}}}Cn}{c{{A`{e}}}{}{}}00000{{{f{c}}}AAd{}}00;;;`````````````````````````{{{f{c}}h}b{}}0000{{}Gb}{{}J`}{{GbGb}Gb}{{J`J`}J`}{{{f{DbGb}}Gb}b}{{{f{DbJ`}}J`}b}3210{{{f{Gb}}}In}0{{{f{J`}}}Bf}05432{{{f{c}}}{{f{e}}}{}{}}000000{{{f{Dbc}}}{{f{Dbe}}}{}{}}000000{{{f{{Md{c}}}}}{{Md{c}}}Dh}{{{f{{Jj{c}}}}}{{Jj{c}}}Dh}{{{f{AEl}}}AEl}{{{f{Gb}}}Gb}{{{f{J`}}}J`}{{{f{c}}{f{Dbe}}}b{}{}}0000{{{f{c}}}b{}}0000000{{{f{DbAEn}}}b}{GbGb}{J`J`}{{{f{Gb}}Gb}d}{{{f{J`}}J`}d}{{}{{Md{c}}}Dh}{{}{{Jj{c}}}Dh}{{}Gb}{{}J`}{Fh{{f{c}}}{}}{{{f{{Mb{c}}}}}fDh}111111{Fh{{f{Dbc}}}{}}000000{{GbGb}Gb}{{J`J`}J`}{{}d}{{{f{Mh}}}{{Cf{In}}}}{{{f{{Jj{c}}}}}{{Cf{In}}}Dh}{{{Jj{c}}In}{{Jj{c}}}Dh}{{{Jj{c}}{Cf{In}}}{{Jj{c}}}Dh}{Fhb}000000<;5{{{f{Gb}}{f{Gb}}}d}{{{f{J`}}{f{J`}}}d}7{{{f{DbGb}}c}b{{Hf{}{{Ch{Gb}}}}}}{{{f{DbJ`}}c}b{{Hf{}{{Ch{J`}}}}}}{{{Jj{c}}d}{{Jj{c}}}Dh}{{{Jj{c}}{Cf{d}}}{{Jj{c}}}Dh}{{{f{{Jj{c}}}}Gb}{{Jj{c}}}Dh}{{{f{{Jj{c}}}}Gb}{{Jj{e}}}DhDh}{{{Jj{c}}J`}{{Jj{c}}}Dh}{{{Jj{c}}{Cf{J`}}}{{Jj{c}}}Dh}{{{f{{Jj{c}}}}{f{DbH`}}}{{A`{bHb}}}Dh}{{{f{AEl}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Gb}}{f{DbH`}}}{{A`{bHb}}}}0000{{{f{J`}}{f{DbH`}}}{{A`{bHb}}}}0000{cc{}}000000{In{{Cf{Gb}}}}{Bf{{Cf{J`}}}}{InGb}0{BfJ`}010{g{{A`{ic}}}{}{}{{Hh{c}{{Ch{e}}}}}{}}0{cGb{{Hf{}{{Ch{Gb}}}}}}{cJ`{{Hf{}{{Ch{J`}}}}}}{{{f{Bj}}}{{Cf{Gb}}}}{{{f{Bj}}}{{Cf{J`}}}}{{{f{{Jj{c}}}}}{{Cf{In}}}Dh}{{{f{{Jj{c}}}}}dDh}{{{f{J`}}}d}{{{f{Mh}}}J`}{{{f{{Jj{c}}}}}J`Dh}0{{{f{{Jj{c}}}}}{{Cf{f}}}Dh}0{{{f{Db{Md{c}}}}}{{f{Db{Jj{c}}}}}Dh}{{{f{J`}}}Lf}{{}Fh}000000{{{f{DbGb}}Gb}b}{{{f{DbJ`}}J`}b}{{GbGb}Gb}{{J`J`}J`}{{{f{Gb}}Gb}d}{{{f{J`}}J`}d}{ce{}{}}000000{Gb}{J`}{{{f{Gb}}}d}{{{f{J`}}}d}{{{f{{Jj{c}}}}}dDh}21{{{f{{Jj{c}}}}}LfDh}111{{{f{Gb}}}{{AF`{Gb}}}}{{{f{J`}}}{{AF`{J`}}}}{{{f{Gb}}}{{AFb{Gb}}}}{{{f{J`}}}{{AFb{J`}}}}{{}d}{{}{{f{{AFf{AFd}}}}}}{{{f{Mh}}}{{Cf{Ln}}}}{{{Jj{c}}}{{Jj{c}}}Dh}{{{f{{Jj{c}}}}}{{Cf{Ln}}}Dh}{{{Jj{c}}Cf}{{Jj{c}}}Dh}{{{f{{Jj{c}}}}{Jj{c}}}{{AFh{c}}}Dh}4231{{{Jj{c}}}{{Md{c}}}Dh}{GbGb}{J`J`}{{{f{{Md{c}}}}}{{Mj{{Jj{c}}}}}Dh}{{{f{DbGb}}Gb}b}{{{f{DbJ`}}J`}b}{{{f{DbGb}}Gbd}b}{{{f{DbJ`}}J`d}b}{{{f{Db{Jj{c}}}}{Cf{In}}}bDh}{{{f{Db{Jj{c}}}}d}bDh}{{{f{DbJ`}}d}b}{{{f{Db{Jj{c}}}}J`}bDh}{{{f{Db{Jj{c}}}}Cf}bDh}033{{{f{Db{Jj{c}}}}Lf}bDh}{{{f{DbJ`}}Lf}b}{{{Jj{c}}Lf}{{Jj{c}}}Dh}{{{Jj{c}}{Cf{Lf}}}{{Jj{c}}}Dh}{{GbGb}Gb}{{J`J`}J`}>=10{{{Md{c}}}{{Jj{c}}}Dh}{{{f{c}}}e{}{}}0000{{{f{DbGb}}Gb}b}{{{f{DbJ`}}J`}b}{c{{A`{e}}}{}{}}0000000000000{{{f{{Md{c}}}}}{{Cf{{Mj{{Jj{c}}}}}}}Dh}{{{f{{Md{c}}}}}{{Cf{{Jl{{Jj{c}}}}}}}Dh}{{{f{c}}}AAd{}}00000098{{{f{{Md{c}}}}}{{f{{AFj{Mh}}}}}Dh}{ce{}{}}000000{AEnAEn}{{{f{{Md{c}}}}}{{Jl{{Jj{c}}}}}Dh}````{{{f{c}}h}b{}}{{{f{{AFl{c}}}}Fh}{{Gj{{AFl{c}}{AFl{c}}}}}Cd}{e{{AFl{c}}}Cd{{Hf{}{{Ch{{Cf{{f{c}}}}}}}}}}{e{{AFl{c}}}Cd{{Hf{}{{Ch{{f{c}}}}}}}}{{AFne}g{}{{Hf{}{{Ch{c}}}}}{}}0{{{f{Jb}}}{{f{AG`}}}}{{{f{{AFl{c}}}}}{{f{AG`}}}Cd}{{{f{Db{AFl{c}}}}}{{f{DbAG`}}}Cd}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}`{{{f{{AFl{c}}}}Fh}dCd}{{{f{{AFl{c}}}}}{{AFl{c}}}{AD`Cd}}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{{f{{AFl{c}}}}}{{f{AFn}}}Cd}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}{{{f{{f{Jb}}}}{f{{f{Jb}}}}}d}{{{f{Jb}}{f{Jb}}}d}{{{f{{AFl{c}}}}{f{DbH`}}}{{A`{bHb}}}{AGbCd}}{cc{}}{{FhAFn}{{AFl{c}}}Cd}{{{f{{AFl{c}}}}Fh}{{Cf{{f{c}}}}}Cd}{{}AFn}{{{f{Hj}}{f{{AFl{c}}}}{f{{AFl{c}}}}}{{AFl{c}}}Cd}{{AFn{f{Hj}}}{{AFl{c}}}Cd}{{{f{Hj}}{f{{AFl{c}}}}}{{AFl{c}}}Cd}0{{}Fh}{ce{}{}}{{{f{{AFl{c}}}}}{}Cd}{{{f{{AFl{c}}}}Fh}dCd}0{{{f{c}}Fh}d{}}{{{f{{AFl{c}}}}}{{AGf{AGd}}}Cd}{{{f{{AFl{c}}}}}{{AGf{{f{c}}{Fj{c}}AGd}}}Cd}{{{f{{AFl{c}}}}}FhCd}0`{db}{{{f{Db{AFl{c}}}}{Cf{Hj}}}bCd}{{{f{Db{AFl{c}}}}FhFh}bCd}{{{f{c}}FhFh}e{}{}}01{{{f{{AFl{c}}}}Fh}{{Gj{{Cl{Cj}}{Cl{Cj}}}}}Cd}0{{{f{Jb}}}{{Cl{Jb}}}}{{{f{{AFl{c}}}}}{{Cl{Cj}}}Cd}{{{f{c}}}e{}{}}{g{{A`{{AFl{c}}e}}}Cd{}{{Hf{}{{Ch{{A`{{f{c}}e}}}}}}}}{g{{A`{{AFl{c}}e}}}Cd{}{{Hf{}{{Ch{{A`{{Cf{{f{c}}}}e}}}}}}}}{{AFng}{{A`{ie}}}{}{}{{Hf{}{{Ch{{A`{ce}}}}}}}{}}0{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}{{{f{Jb}}}{{f{Bj}}}}{{}{{f{Bj}}}}{{{f{{AFl{c}}}}}{{Cf{{f{Hj}}}}}Cd}{{{f{{AFl{c}}}}Fh}{{f{c}}}Cd}0{{{f{{AFl{c}}}}Fh}{}Cd}{{{f{{AFl{c}}}}}{{f{{Mf{{G`{c}}}}}}}Cd}{{{f{{AFl{c}}}}}{{Fj{c}}}Cd}{{{f{{AFl{c}}}}}{}Cd}{ce{}{}}{{{AFl{c}}{Cf{Hj}}}{{AFl{c}}}Cd}{{{f{{AFl{c}}}}{Cf{Hj}}}{{Cl{Cj}}}Cd}1`{{{f{Db{AGh{c}}}}}bCd}0{{{f{Db{AGh{c}}}}{Cf{c}}}bCd}{{{f{Db{AGh{c}}}}c}bCd}{{{f{Db{AGh{c}}}}{f{AG`}}}bCd}{{{f{Db{AGh{c}}}}{f{AG`}}}{{A`{bn}}}Cd}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{}{{AGh{c}}}Cd}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}{{{AGh{c}}}{{l{{Cb{c}}}}}Cd}{cc{}}{{}Fh}{ce{}{}}{{{f{Bj}}Fh}{{AGh{c}}}Cd}{{{f{Db{AGh{c}}}}}AbCd}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}4````{{{f{DbAGj}}}b}{{{f{DbAGj}}{Cf{{f{AG`}}}}}b}{{{f{DbAGj}}{f{AG`}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}`?>={{{f{AGl}}{f{DbH`}}}{{A`{bHb}}}}<{{{f{Bj}}Fh}{{Cl{AGj}}}}{{}{{Mf{Dj}}}}{{}AFn}>={{}d}`{{{Cl{Dj}}{Mf{Dj}}AFn}b}{{{f{DbAGj}}}Ab}==<{ce{}{}}``````````````````````````````````````````````{{{f{c}}h}b{}}00{{{f{{AH`{}{{AGn{c}}}}}}g}{{AH`{}{{AGn{c}}}}}{}{}{{Dj{{Cf{e}}}{{Ad{{Cf{c}}}}}}Dl}}{{{f{AHb}}{f{Dj}}}AHb}{{{f{AHb}}{f{Dj}}}{{l{c}}}Dh}{{{f{{AH`{}{{AGn{c}}}}}}i{f{Db{Bh{g}}}}}b{}{}{}{{Dj{{Cf{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AH`{}{{AGn{c}}}}}}g}{{AH`{}{{AGn{c}}}}}{}{}{{Dj{e}{{Ad{c}}}}Dl}}{{{f{AHd}}Ej}{{l{El}}}}{{{f{AHd}}{f{{Bh{Ab}}}}{f{F`}}}{{A`{{l{El}}n}}}}{{{f{AHf}}}{{A`{{l{El}}n}}}}`{{{f{c}}}{{f{e}}}{}{}}00{{{f{Dbc}}}{{f{Dbe}}}{}{}}00{{{f{AHh}}{f{Eh}}}{{A`{Abn}}}}0{{{f{AHh}}{f{Eh}}Fd}{{A`{Abn}}}}{{{f{Ej}}}Ej}{{{f{F`}}}F`}{{{f{AHj}}}AHj}{{{f{c}}{f{Dbe}}}b{}{}}00{{{f{c}}}b{}}0000{{}Ej}{{}F`}{Fh{{f{c}}}{}}00{Fh{{f{Dbc}}}{}}00``{Fhb}00{{{f{Ej}}{f{Ej}}}d}{{{f{F`}}{f{F`}}}d}{{{f{AHj}}{f{AHj}}}d}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000{{{f{AHn}}}{{A`{Abn}}}}{{{f{AHn}}}{{A`{{Gj{Ab{Gh{Gf}}}}n}}}}`{{{f{AI`}}c}{{A`{AI`n}}}{}}{{{f{AIb}}{f{{l{An}}}}}{{A`{{l{c}}n}}}Dh}`{{{f{Ej}}{f{DbH`}}}{{A`{bHb}}}}{{{f{F`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{AHj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{F`}}}Ej}{cc{}}0{{{f{Ej}}}F`}1`{{{f{Bj}}cFh}AId{}}{{{f{Bj}}Fh}AIf}`{{{f{AIh}}Fh}{{A`{Iln}}}}{{{f{AIh}}Fh}Il}??{{{f{Ej}}{f{Dbc}}}bADf}{{{f{F`}}{f{Dbc}}}bADf}{{{f{AHj}}{f{Dbc}}}bADf}{{}Fh}00{ce{}{}}00{{{f{AIj}}}{{A`{{l{An}}n}}}}{{{f{AIl}}}{{A`{{l{An}}n}}}}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}0``{{{f{AIn}}}{{Cf{c}}}{}}{{{f{AIn}}}{{Cf{M`}}}}{{{f{AJ`}}}{{Cf{c}}}{}}2{{{f{AIn}}}{{Cf{{Gj{cc}}}}}{}}``{{{f{AHf}}}{{A`{Fhn}}}}{{}Ej}{{}F`}{{{f{AJb}}FhFh}{{l{c}}}Dh}88``{{{f{AHn}}}{{A`{{Gh{Gf}}n}}}}{{{f{AJ`}}M`Oh}{{A`{{Cf{c}}n}}}{}}{{{f{AJd}}}Ab}0{{{f{AJf}}}AJf}{{{f{AJh}}{f{Dj}}Oj}{{A`{Abn}}}}{{{f{AJj}}c{Cf{e}}}{{A`{AJjn}}}{{Hf{}{{Ch{In}}}}}{}}{{{f{AJj}}ci}{{A`{AJjn}}}{{Hf{}{{Ch{In}}}}}{}{}{{Dj{{Cf{e}}}{{Ad{{Cf{g}}}}}}}}`{{{f{AJj}}{f{{l{An}}}}{Cf{c}}}{{A`{AJjn}}}{}}{{{f{AJl}}Gf}{{l{c}}}Dh}{{{f{AJn}}Gfc}{{l{e}}}{}Dh}{{{f{AK`}}FhFh}AK`}0`{{{f{AHd}}d}{{l{c}}}Dh}{{{f{AHd}}Ej}{{l{c}}}Dh}{{{f{AKb}}Bf}{{Cf{M`}}}}{{{f{AIn}}}{{Cf{c}}}{}}{{{f{AKd}}{f{c}}}{{A`{AKdn}}}On}{{{f{AKf}}{f{c}}}AKfOn}{{{f{AKh}}}{{G`{{f{{Bh{Bf}}}}}}}}{{{f{c}}}e{}{}}00{c{{A`{e}}}{}{}}00000{{{f{c}}}AAd{}}00{{{f{AHf}}}{{A`{AHfn}}}}8{ce{}{}}00{{Ejd}Ej}{{F`d}F`}1010{{F`c}F`{{Hf{}{{Ch{d}}}}}}210{EjEj}{F`F`}`{{{f{AKj}}{f{{l{An}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dh}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DhDh{{Dj{ff}{{Ad{}}}}}{{Dj{f}{{Ad{}}}}}{{Dj{f}{{Ad{}}}}}Dh}{{{l{c}}{l{e}}gik}{{l{m}}}DhDh{{Dj{}{{Ad{}}}}}{{Dj{}{{Ad{}}}}}{{Dj{}{{Ad{}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DhDhCj{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hd{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DhDh{{AKl{CfCf}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}g}bDhDh{{Af{CfCf}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{Bd}}}DhDh{{Af{{f{DbEf}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DhDh{}{{Af{}{{Ad{g}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bj}}}{{l{k}}}DhDh{CjAKn}{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hd{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bj}}}{{l{k}}}DhDhCj{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hd{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DhDhCj{{Af{}{{Ad{g}}}}}{{Dh{}{{Hd{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DhDh{{Af{ff}{{Ad{{Cl{Cj}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DhDh{{Af{ff}{{Ad{{Cl{Cj}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DhDh{}{}{{Af{CfCf}{{Ad{{A`{{Cf{g}}i}}}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DhDhDh{{AL`{CfCfCf}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DhDhCjALb{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dh{}{{Hd{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Bj}}}{{A`{{l{m}}i}}}DhDhCjALb{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dh{}{{Hd{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DhDhALb{{Af{ff}{{Ad{{A`{{Cl{Cj}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DhDhDh{}{}{{Af{CfCfCf}{{Ad{{A`{{Cf{i}}k}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{}{}{{Af{Cf}{{Ad{{A`{{Cf{e}}g}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{CjAKn}ALb{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dh{}{{Hd{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dh{{ALd{Cf}}}Dh}{{{f{{l{c}}}}e}{{l{g}}}DhALdDh}{{{f{{l{c}}}}g}{{l{i}}}DhCj{{Af{f}{{Ad{e}}}}}{{Dh{}{{Hd{e}}}}}}{{{l{c}}g}{{l{i}}}DhCj{{Af{}{{Ad{e}}}}}{{Dh{}{{Hd{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dh{CjAKn}{{Af{f}{{Ad{e}}}}}{{Dh{}{{Hd{e}}}}}}0{{{f{{l{c}}}}}FhAl}0{{LfLf}Lf}{{{f{{l{El}}}}In}{{A`{bn}}}}{{{f{{ALf{In}}}}In}{{A`{bn}}}}````{{{f{c}}h}b{}}{{{f{{l{c}}}}eALhd}{{G`{In}}}Dh{{Cn{}{{Ch{Cf}}}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{ALh}}}ALh}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}0{{}ALh}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}{{{f{ALh}}{f{ALh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{ALh}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}{{{f{ALh}}{f{Dbc}}}bADf}{{}Fh}{ce{}{}}{{{f{{Bh{f}}}}cIne}{{G`{In}}}{{Cn{}{{Ch{Cf}}}}}{{Dj{fFhf}{{Ad{d}}}}}}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}4`{{Fh{f{Db{G`{d}}}}}b}```{{{f{AK`}}FhFh}AK`}0{{Fh{f{{Bh{Ab}}}}{f{DbF`}}}{{A`{{ALj{{l{El}}}}n}}}}{{{f{{Bh{Ab}}}}{f{{Bh{d}}}}{f{{Bh{d}}}}}{{A`{ALln}}}}{{{f{{Bh{Ab}}}}{f{{Bh{d}}}}{f{{Bh{d}}}}}{{A`{{Jd{Gf}}n}}}}{{{f{Bj}}{f{{Bh{Ab}}}}{f{{Bh{d}}}}{f{{Bh{d}}}}}{{A`{{l{En}}n}}}}{{{f{Bj}}{f{{Bh{Ab}}}}}{{A`{{l{En}}n}}}}{{{f{Ab}}}{{A`{{Cl{Cj}}n}}}}{{{f{{Bh{Ab}}}}}{{A`{ALln}}}}{{{f{{Bh{Ab}}}}}{{A`{{l{En}}n}}}}0```````````88`{ALnGf}00{{{f{Bj}}}{{A`{Efn}}}}{{{f{Bj}}}{{A`{AM`n}}}}{{{f{AMb}}}Gf}{{{f{Bj}}}{{A`{bn}}}}444`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}00000000000000000000000000000000{{{f{AMd}}}d}{{{f{Il}}}{{`{{Cn{}{{Ch{Il}}}}}}}}{{{f{Il}}{f{Db{G`{Il}}}}}b}{{AMdd}AMd}{{{f{{Kb{KlKj}}}}{f{{Kb{KlKj}}}}}}{{{f{Il}}{f{Il}}}Il}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{Bd}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Aj}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{An}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{DbAMf}}{Cf{{f{Bj}}}}}b}{{{f{DbAMd}}{f{AMd}}}{{A`{bn}}}}{{{f{DbAMf}}}b}{{{f{DbAMf}}{f{Bj}}}b}{{{f{AMd}}Ej}{{l{El}}}}{eAMh{}{{Hf{}{{Ch{c}}}}}}0{{AFne}AMj{}{{Hf{}{{Ch{c}}}}}}0{{{f{Il}}}Il}{{{f{{Kb{K`Jn}}}}}{{`{Ij}}}}{{{f{{Kb{KhKd}}}}}{{`{Ij}}}}{{{f{Eh}}}{{f{Eh}}}}{{{f{Ob}}}{{f{Eh}}}}{{{f{AMl}}}{{f{Eh}}}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{Cf{{f{{Bh{c}}}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{{Kb{LbKd}}}}}{{`{Ij}}}}{{{f{c}}}{{f{e}}}{}{}}000000000000000000000000000000000000000000{{{f{Dbc}}}{{f{Dbe}}}{}{}}000000000000000000000000000000000000000000{Eh{{Cl{Eh}}}}{{{ANh{Bj}}}ANj}{{{f{AMd}}{f{AMd}}c}{{A`{AMdn}}}ANl}{{{f{ANn}}{f{Eh}}}{{A`{Abn}}}}{{{f{Il}}{f{Eh}}}Il}{{{f{Eh}}Eh}Eh}{{{f{{Kb{KhKd}}}}Kf}{{Kb{KhKd}}}}{{{f{{Kb{KnKd}}}}Kf}{{Kb{KnKd}}}}{{{f{ANn}}{f{Eh}}Fd}{{A`{Abn}}}}{{{f{{Kb{KhKd}}}}{f{Eh}}Fd}{{A`{Abn}}}}{{{f{{Kb{LbKd}}}}{f{Eh}}Fd}{{A`{Abn}}}}{{{f{{Kb{KnKd}}}}{f{Eh}}Fd}{{A`{Abn}}}}{{{f{{Kb{K`Jn}}}}{f{Eh}}Fd}{{A`{Abn}}}}{{{f{{Kb{KlKj}}}}{f{Eh}}Fd}{{A`{Abn}}}}{{{f{AMd}}{f{Eh}}Fd}{{A`{Abn}}}}`{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}00000000{{{f{{l{Eb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Ed}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{Kb{ce}}}}}{{Kb{ce}}}DhDh}{{{f{AO`}}}AO`}{{{f{ANj}}}ANj}{{{f{AMd}}}AMd}{{{f{AOb}}}AOb}{{{f{Il}}}Il}{{{f{AOd}}}AOd}{{{f{Eh}}}Eh}{{{f{AOf}}}AOf}{{{f{Ob}}}Ob}{{{f{Kf}}}Kf}{{{f{Nh}}}Nh}{{{f{Nj}}}Nj}{{{f{El}}}El}{{{f{Mn}}}Mn}{{{f{Nd}}}Nd}{{{f{Nn}}}Nn}{{{f{Jn}}}Jn}{{{f{Kd}}}Kd}{{{f{Eb}}}Eb}{{{f{Ed}}}Ed}{{{f{K`}}}K`}{{{f{Lb}}}Lb}{{{f{Bd}}}Bd}{{{f{Aj}}}Aj}{{{f{En}}}En}{{{f{An}}}An}{{{f{Kl}}}Kl}{{{f{Kh}}}Kh}{{{f{Kn}}}Kn}{{{f{AOh}}}AOh}{{{f{AFn}}}AFn}{{{f{AOj}}}AOj}{{{f{c}}{f{Dbe}}}b{}{}}00000000000000000000000000000000{{{f{c}}}b{}}000000000000000000000000000000000000000000000000000000000{{{f{DbOb}}Eh}b}{AOle{}{{AMh{c}}AKn}}0{{AOlAFn}e{}{{AMj{c}}AKn}}0{{{f{Eh}}}d}00{{{ANh{Bj}}}Eh}{{{f{Ob}}}{{f{Eh}}}}{{{f{{Kb{KnKd}}}}}{{l{Kd}}}}{{}AOn}{{}AO`}{{}ANj}{{}Il}{{}AOd}{{}Eh}{{}AFn}{Fh{{f{c}}}{}}0{{{f{{Kb{ce}}}}}fDhDh}11111111111111111111111111111111111111111{Fh{{f{Dbc}}}{}}0{{{f{Db{Kb{ce}}}}}{{f{Db}}}DhDh}11111111111111111111111111111111111111111{{{f{{Kb{KlKj}}}}{f{{Kb{KlKj}}}}}}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{AMfc}AMd{{Hf{}{{Ch{{Cf{{f{Bj}}}}}}}}}}{Fhb}000000000000000000000000000000000000000000{{{f{ANn}}}{{f{Eh}}}}{{{f{{Kb{KlKj}}}}}{{f{Eh}}}}{{{f{{Kb{K`Jn}}}}}{{f{Eh}}}}{{{f{{Kb{LbKd}}}}}{{f{Eh}}}}{{{f{{Kb{KhKd}}}}}{{f{Eh}}}}{{{f{{Kb{KnKd}}}}}{{f{Eh}}}}{{{f{AMd}}}{{f{Eh}}}}{{{f{Il}}}Eh}`{{{f{AO`}}{f{AO`}}}d}{{{f{Il}}{f{Il}}}d}{{{f{AOd}}{f{AOd}}}d}{{{f{Eh}}{f{AFn}}}d}{{{f{Eh}}{f{Eh}}}d}{{{f{AOf}}{f{AOf}}}d}{{{f{Ob}}{f{Ob}}}d}{{{f{Kf}}{f{Kf}}}d}{{{f{AFn}}{f{AFn}}}d}{{{f{AOj}}{f{AOj}}}d}{{{f{Il}}{f{Il}}d}d}{{{f{AMd}}{f{AMd}}}}{{{f{AMd}}{f{Bj}}}}{{{f{AMd}}{f{{l{Bd}}}}}}021{{{f{c}}{f{e}}}d{}{}}00000000000000000000000{{{f{{Kb{ce}}}}}ObDhDh}{{{f{ANj}}{f{Bj}}}{{Cf{In}}}}{{ANl{f{{l{El}}}}{f{{l{El}}}}}{{A`{{l{El}}n}}}}{AMfAMd}{AOn{{Mf{ANj}}}}{{{f{AO`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{ANj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{AOb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Il}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{AOd}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Eh}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{AOf}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Ob}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Kf}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{AFn}}{f{DbH`}}}{{A`{bHb}}}}{{{f{AOj}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}0{{{l{Kd}}}{{Kb{LbKd}}}}1{{{l{Jn}}}{{Kb{K`Jn}}}}222222222222{{{f{{Bh{Bf}}}}}Il}{cIlB@`}{{{Cf{c}}}Il{{B@b{Il}}}}{dIl}6{{{f{Bj}}}Il}7{{{f{AFn}}}Eh}8{IlEh}{{{f{Il}}}Eh}:{{{f{Il}}}Ob};{{{f{B@d}}}Ob}{{{f{AOj}}}Kf}======================{B@fAFn}{B@hAFn}?{{{f{AFn}}d}Eh}{{{l{El}}{Mf{ANj}}dAO`}AMd}{{{f{Bj}}cKf}{{Kb{KnKd}}}{{Hf{}{{Ch{B@j}}}}}}{{{f{Bj}}cKf}{{Kb{KnKd}}}{{Hf{}{{Ch{{Cf{B@j}}}}}}}}{{{l{El}}AO`}AMd}{{{f{Bj}}c}{{Kb{K`Jn}}}{{Hf{}{{Ch{B@l}}}}}}{{{f{Bj}}c}{{Kb{K`Jn}}}{{Hf{}{{Ch{{Cf{B@l}}}}}}}}{{{f{Bj}}cKf}{{Kb{KhKd}}}{{Hf{}{{Ch{ALn}}}}}}{{{f{Bj}}cKf}{{Kb{KhKd}}}{{Hf{}{{Ch{{Cf{ALn}}}}}}}}{{{f{Bj}}c}{{Kb{LbKd}}}{{Hf{}{{Ch{AMb}}}}}}{{{f{Bj}}c}{{Kb{LbKd}}}{{Hf{}{{Ch{{Cf{AMb}}}}}}}}{{{BA`{B@n}}Eh}Ob}{{{f{{l{Bd}}}}{f{{ANh{Bj}}}}AO`}{{A`{AMdn}}}}{{{G`{c}}AFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{G`{c}}AFn}{{AKn{}{{AMn{e}}{AN`{c}}{ANb{g}}}}}{ANd{ANf{e}}}AD`{{Gd{}{{Ch{e}}}}IjIdIf}}{{FhcAFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{FhAFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{Bj}}dFhAO`}AMd}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fh}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{ANj}}In}{{f{Bj}}}}{{{f{{Kb{KlKj}}}}Fh}{{A`{Iln}}}}{{{f{{Kb{K`Jn}}}}Fh}{{A`{Iln}}}}{{{f{{Kb{KnKd}}}}Fh}{{A`{Iln}}}}{{{f{{Kb{LbKd}}}}Fh}{{A`{Iln}}}}{{{f{{Kb{KhKd}}}}Fh}{{A`{Iln}}}}{{{f{ANn}}Fh}{{A`{Iln}}}}{{{f{AMd}}Fh}{{A`{Iln}}}}{{{f{{Kb{K`Jn}}}}Fh}Il}{{{f{{Kb{KhKd}}}}Fh}Il}{{{f{{Kb{KnKd}}}}Fh}Il}{{{f{{Kb{LbKd}}}}Fh}Il}{{{f{{Kb{KlKj}}}}Fh}Il}{{{f{ANn}}Fh}Il}{{{f{AMd}}Fh}Il}{{{f{ANj}}}{{f{{ANh{Bj}}}}}}{{}Eh}0000000000000000000000000{{{f{ANj}}In}{{Cf{{f{Bj}}}}}}{{{f{AMd}}}{{f{{Mf{ANj}}}}}}{{{f{Eh}}}{{Cf{{G`{Fh}}}}}}{{{f{Il}}}{{Cf{{f{Bj}}}}}}{{{f{BAb}}Fh}Il}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fh}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{AMd}}{f{AMd}}}}{{{f{AMd}}{f{{l{Bd}}}}}}{{{f{AMd}}{f{Bj}}}}120{{{f{Il}}{f{Dbc}}}bADf}{{{f{AOd}}{f{Dbc}}}bADf}{{{f{Eh}}{f{Dbc}}}bADf}{{{f{Ob}}{f{Dbc}}}bADf}{{{f{Kf}}{f{Dbc}}}bADf}{{{f{AFn}}{f{Dbc}}}bADf}{{{f{AOj}}{f{Dbc}}}bADf}{{{f{Il}}{f{Dbc}}d}bADf}{{{f{{Kb{LbKd}}}}}{{l{Nd}}}}{{{f{{Kb{KnKd}}}}}{{l{Kd}}}}{EhEh}{{}Fh}000000000000000000000000000000000000000000{{{f{Eh}}}{{Cf{{f{Eh}}}}}}{{{f{AFn}}}{{Cf{{f{AFn}}}}}}{ce{}{}}0000000000000000000000000000000000000000000{{BAdEh}{{A`{Lnn}}}}{{{Kb{LbKd}}}Ab}{{{Kb{K`Jn}}}Ab}{{{Kb{KnKd}}}Ab}{{{Kb{KlKj}}}Ab}{{{Kb{KhKd}}}Ab}{AMdAb}{Il{{A`{Iln}}}}{{{f{Eh}}}d}00{{{f{Il}}}d}11{{{f{AMd}}}d}0212{{{f{ANj}}}d}23330332323233332333323{{{f{AFn}}}d}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{AGf{cgAGd}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{AMd}}}BAf}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{Eh}}}{{f{Eh}}}}{{{f{ANj}}}Fh}{{{f{AMd}}}Fh}{{{f{AMd}}{f{Bj}}}}{{{f{AMd}}{f{{l{Bd}}}}}}{{{f{AMd}}{f{AMd}}}}201{{{f{AMd}}{f{AMd}}}{{A`{{Gj{AMdAMd}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Gj{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Eh}}{f{Eh}}}{{A`{dn}}}}{{{f{AOd}}}{{Cf{Eh}}}}{{{f{AMd}}}Ln}{{{f{Eh}}{f{Eh}}}{{A`{Ehn}}}}{{{f{DbAOn}}{f{{Mf{ANj}}}}}{{A`{bn}}}}{{{f{{Kb{KnKd}}}}}{{l{Kd}}}}03{{{f{{Kb{LbKd}}}}}{{l{Nd}}}}1{{{f{{Kb{KlKj}}}}{f{{Kb{KlKj}}}}}}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{AMd}}}{{A`{Fhn}}}}{{{f{AMd}}}{{f{Bj}}}}{{{f{Ob}}}{{f{{BA`{B@n}}}}}}`{{{f{{Kb{LbKd}}}}}{{l{Jn}}}}8{{}c{}}0{{{f{Bj}}FhAO`}AMf}{{{f{Bj}}c}{{Kb{K`Jn}}}{{I`{{Bh{{Cf{B@l}}}}}}}}{{{f{Bj}}c}{{Kb{KnKd}}}{{I`{{Bh{{Cf{B@j}}}}}}}}{{{f{Bj}}c}{{Kb{LbKd}}}{{I`{{Bh{AMb}}}}}}{{{f{Bj}}c}{{Kb{LbKd}}}{{I`{{Bh{{Cf{AMb}}}}}}}}{{{f{Bj}}c}{{Kb{KnKd}}}{{I`{{Bh{B@j}}}}}}{{{f{Bj}}c}{{Kb{KhKd}}}{{I`{{Bh{ALn}}}}}}{{{f{Bj}}c}{{Kb{K`Jn}}}{{I`{{Bh{B@l}}}}}}{{{f{Bj}}c}{{Kb{KhKd}}}{{I`{{Bh{{Cf{ALn}}}}}}}}{{{Mf{ANj}}}AOn}{{{f{Bj}}Eh}Ob}{{{l{c}}}{{Kb{ec}}}DhDh}{{}AOf}{{{f{DbBAf}}}Cf}{{{f{AMd}}{f{Bj}}}}{{{f{AMd}}{f{AMd}}}}{{{f{AMd}}{f{{l{Bd}}}}}}210{{{f{AMd}}}Fh}5{{{f{Bj}}{f{{Bh{{f{Bj}}}}}}{f{Bj}}}{{Kb{LbKd}}}}{{{f{Bj}}{f{{Bh{{f{Bj}}}}}}{f{Bj}}}{{Kb{K`Jn}}}}{{{f{Il}}{f{Il}}}{{Cf{BAh}}}}{{{f{Kf}}{f{Kf}}}{{Cf{BAh}}}}{{{f{{Kb{ce}}}}}{{f{{l{e}}}}}DhDh}{{{f{AMd}}}{{f{{l{El}}}}}}{{{f{{Kb{KlKj}}}}}{{Cf{Fh}}}}{{{f{DbAMf}}{f{Bj}}}{{Gj{Ind}}}}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{Kb{KhKd}}}}{f{{l{Bd}}}}{Cf{{f{AM`}}}}}{{A`{{Kb{KhKd}}n}}}}{{{f{{Kb{K`Jn}}}}{f{{l{Bd}}}}{Cf{{f{AM`}}}}}{{A`{{Kb{K`Jn}}n}}}}{{{f{ANj}}{f{ANj}}}d}{{{f{{Kb{KlKj}}}}}Fh}{{{f{{Kb{LbKd}}}}}{{l{Nd}}}}{{{f{{Kb{KnKd}}}}}{{l{Kd}}}}{{{f{DbOb}}{BA`{B@n}}}b}{{{f{Db{Kb{KnKd}}}}Kf}b}{{{f{Db{Kb{KhKd}}}}Kf}b}{{{f{Db{Kb{KhKd}}}}KfEf}{{A`{bn}}}}{{{f{Db{Kb{KhKd}}}}Ef}{{A`{bn}}}}{{{f{BAf}}}{{Gj{Fh{Cf{Fh}}}}}}{{{f{AMd}}d}AMd}{{{f{AMd}}Ej}AMd}{{{f{{Kb{K`Jn}}}}{f{Bj}}}{{A`{{l{Bd}}n}}}}{{{f{{Kb{KhKd}}}}{f{Bj}}}{{A`{{l{Bd}}n}}}}{{{f{{Kb{LbKd}}}}{f{Bj}}}{{l{Bd}}}}{{{f{Il}}{f{Eh}}}{{Cf{Il}}}}{{{f{{Kb{KlKj}}}}{f{{Kb{KlKj}}}}}}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{Kb{KnKd}}}}}Kf}{{{f{{Kb{KhKd}}}}}Kf}{{{f{{Kb{KhKd}}}}}{{f{{Cf{Ef}}}}}}{{{f{AMd}}AOfd}{{Cl{Cj}}}}{{{f{Eh}}AOf}AFn}{{{f{Ob}}AOf}B@d}{KfAOj}{{{f{Eh}}{f{Bj}}AOf}B@d}{Kf{{f{Bj}}}}{{{f{AMd}}{f{{ANh{Bj}}}}BAj}AMd}{{{f{AMd}}}{{A`{AMdn}}}}{{{f{AMd}}}AMd}{{{f{AFn}}}{{f{AFn}}}}{{{f{c}}}e{}{}}00000000000000000000000000000000{{{f{Eh}}}Eh}{{{f{AFn}}}BAl}{{{f{{Kb{KlKj}}}}Fh}{{A`{{Dn{{Kb{KlKj}}}}n}}}}{{{f{{Kb{KhKd}}}}{f{Bj}}}{{A`{{l{Bd}}n}}}}{{{f{{Kb{LbKd}}}}{f{Bj}}}{{l{Bd}}}}{{{f{{Kb{K`Jn}}}}{f{Bj}}}{{A`{{l{Bd}}n}}}}{{{f{c}}}Ef{}}00{{{f{Il}}{f{Il}}}d}{{{f{{Kb{K`Jn}}}}{Cf{{f{AM`}}}}{f{{l{Bd}}}}}{{A`{{Kb{K`Jn}}n}}}}{{{f{{Kb{KhKd}}}}{Cf{{f{AM`}}}}{f{{l{Bd}}}}}{{A`{{Kb{KhKd}}n}}}}{g{{A`{AMhe}}}{}{}{{Hf{}{{Ch{{A`{ce}}}}}}}}0{{AFng}{{A`{AMje}}}{}{}{{Hf{}{{Ch{{A`{ce}}}}}}}}0{AOl{{A`{eg}}}{}{{AMh{c}}AKn}{}}0{{AOlAFn}{{A`{eg}}}{}{{AMj{c}}AKn}{}}0{{{f{Il}}}{{A`{cn}}}Ll}{c{{A`{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{Il}}{f{Eh}}}{{A`{Iln}}}}{{{f{Eh}}AOf}{{A`{AFnn}}}}{{{f{c}}}AAd{}}000000000000000000000000000000000000000000{{{f{AFn}}}AFn}{{{f{AMd}}}{{A`{AMdn}}}}{{{f{AMd}}}d}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fh}cAD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{AMd}}}{{A`{AAfn}}}}1{{{f{Eh}}Il}d}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}gAD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{ce{}{}}000000000000000000000000000000000000000000{Fhc{}}0{{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}{Cf{Hj}}}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{Eh}}}Il}```````````{{{f{AMd}}{f{AMd}}c}{{A`{AMdn}}}ANl}{{ANl{f{{l{El}}}}{f{{l{El}}}}}{{A`{{l{El}}n}}}}{{{f{AMd}}{f{AMd}}}{{A`{{Gj{AMdAMd}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Gj{{l{Ah}}{l{Ah}}}}n}}}}`````````{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{}BAn}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{{}b}{{{f{DbBAn}}}b}{Fhb}2{cc{}}6{{}Fh}{ce{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}{{}d}3``````````````````````````{{{f{BB`}}}{{f{Bj}}}}>>>===`{{nBB`}n}{nn}=={{{f{BB`}}}f}>===:::`{{{f{BBb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BB`}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{n}}{f{DbH`}}}{{A`{bHb}}}}0<<{cBB`{{B@b{{Dn{Bj}}}}}}{BBdn}{BBfn}{BBhn}{BBjn}{BBln}{cc{}}{BBnn}{{}{{Fl{{f{Bj}}BBb}{{Ad{b}}}}}}{{}Fh}00{ce{}{}}00{cnALb}````{{{Fl{{f{Bj}}BBb}{{Ad{b}}}}}b}{cnBC`}{{{f{c}}}Ef{}}0{c{{A`{e}}}{}{}}00000{{{f{c}}}AAd{}}00666``````````````````{{{f{c}}h}b{}}00{{{f{DbAAf}}{G`{Ab}}{f{BCb}}}{{A`{bn}}}}{{{f{AAf}}{f{Dj}}}{{G`{Ab}}}}0{{{f{AAf}}{f{{l{An}}}}}{{A`{AAfn}}}}{{{f{AAf}}{f{{Bh{{BA`{B@n}}}}}}}{{A`{AAfn}}}}0{{{f{AAf}}GfFh}AAf}{{{f{DbAAf}}}{{f{DbAAf}}}}{{{f{DbAAf}}{f{Bj}}e}{{A`{{f{DbAAf}}n}}}BCd{{AAj{{f{Ab}}}{{Ad{c}}}}}}{{{f{DbAAf}}Fhe}{{A`{{f{DbAAf}}n}}}BCd{{AAj{{f{Ab}}}{{Ad{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Dbc}}}{{f{Dbe}}}{}{}}0000{{{f{AAf}}}{{`{{Cn{}{{Ch{Fh}}}}}}}}{{{f{AAf}}}AAf}{{{f{BCf}}}BCf}{{{f{BCh}}}BCh}2{{{f{c}}{f{Dbe}}}b{}{}}00{{{f{c}}}b{}}0000{{{f{AAf}}{f{Bj}}}{{A`{{f{Ab}}n}}}}{{{f{AAf}}e}{{A`{{G`{{f{Ab}}}}n}}}{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}}{{}BCh}{{}AAf}{Fh{{f{c}}}{}}0000{Fh{{f{Dbc}}}{}}0000{Fhb}0000{{{f{AAf}}{f{Bj}}}{{A`{AAfn}}}}{{{f{DbAAf}}{f{Bj}}}{{A`{Abn}}}}{{{f{AAf}}{f{{Bh{c}}}}}AAf{{I`{Bj}}}}{{{f{AAf}}{f{{BCj{{f{Bj}}A@d}}}}}AAf}{{{f{AAf}}{Cf{{f{{Bh{c}}}}}}}{{A`{AAfn}}}{{I`{Bj}}}}{{{f{AAf}}}{{G`{Eh}}}}9{{{f{BCl}}}AAf}{{{f{BCb}}}AAf}{{{f{BCh}}{f{BCh}}}d}{{{f{AAf}}{f{AAf}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{AAf}}}Fh}`{{{f{AAf}}e}{{A`{AAfn}}}{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}}{{{f{AAf}}{G`{Ab}}}{{A`{AAfn}}}}{{{f{DbAAf}}{f{AAf}}}{{A`{bn}}}}{{{f{AAf}}}{{G`{Ob}}}}{{{f{AAf}}AHj}{{A`{AAfn}}}}{{{f{AAf}}{f{{l{An}}}}}{{A`{AAfn}}}}{{{f{BCf}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BCh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{AAf}}{f{DbH`}}}{{A`{bHb}}}}0{cc{}}0000{g{{A`{ic}}}{}{}{{Hh{c}{{Ch{e}}}}}{}}{cAAf{{Hf{}{{Ch{Ab}}}}}}{{{f{{Bh{BCn}}}}}{{A`{AAfn}}}}{{{f{{Bh{BCn}}}}{f{BCb}}}{{A`{AAfn}}}}{{c{f{BCb}}}{{A`{AAfn}}}{{Cn{}{{Ch{{f{BCn}}}}}}}}{{{f{AAf}}Fh}{{Cf{{G`{Il}}}}}}{{{f{AAf}}{f{Bj}}}{{Cf{Fh}}}}{{{f{AAf}}}{{G`{{f{Bj}}}}}}{{{f{AAf}}}{{G`{{BA`{B@n}}}}}}{{{f{AAf}}}{{f{{Bh{Ab}}}}}}{{{f{DbAAf}}}{{f{Db{G`{Ab}}}}}}{{{f{AAf}}Fh}{{A`{BCnn}}}}{{{f{AAf}}Fh{f{DbBCn}}}{{A`{bn}}}}{{{f{AAf}}Fh{f{DbBCn}}}b}{{{f{AAf}}}{{Cf{{A`{Ehn}}}}}}`{{{f{AAf}}e}{{A`{BD`n}}}{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}}{{{f{AAf}}{G`{Ab}}{f{BDb}}}{{A`{{Gj{Ab{G`{Ab}}Bn}}n}}}}1{{{f{AAf}}{G`{Ab}}dd}{{A`{BD`n}}}}{{{f{BCh}}{f{Dbc}}}bADf}{{{f{AAf}}{Cf{Fh}}}AAf}{{{f{AAf}}}Fh}{{{f{AAf}}{f{{Bh{Ab}}}}}{{A`{AAfn}}}}{{{f{DbAAf}}{f{{Bh{Ab}}}}}{{A`{{f{DbAAf}}n}}}}{{{f{DbAAf}}{f{{Bh{Ab}}}}}{{f{DbAAf}}}}{{{f{AAf}}{f{Bj}}}f}{{{f{AAf}}Fh}f}{{{f{AAf}}BDd}f}{{{f{AAf}}{BDf{Fh}}}f}{{{f{AAf}}{BDh{Fh}}}f}{{{f{AAf}}{BDj{Fh}}}f}{{{f{AAf}}{Ml{Fh}}}f}{{{f{AAf}}{BDl{Fh}}}f}{{}Fh}0000{{{f{DbAAf}}Fhc}{{A`{{f{DbAAf}}n}}}BCd}{ce{}{}}000000{{AAf{f{Bj}}}{{l{j}}}}{{{f{AAf}}}{{A`{{l{An}}n}}}}{{{f{AAf}}}d}1{{{f{AAf}}}{{Fj{Ab}}}}{{{f{AAf}}AOfd}BDn}{{{f{AAf}}}{{`{{Cn{}{{Ch{AAf}}}}}}}}{{{f{AAf}}}BE`}{AAfBEb}{{{f{AAf}}}Fh}{{{f{AAf}}}{{A`{{Cf{Ab}}n}}}}{{{f{AAf}}BCf}{{A`{{Cf{Ab}}n}}}}122{{{G`{c}}}{{A`{AAfn}}}BCd}{{{G`{Ab}}}AAf}{{{G`{Ab}}}{{A`{AAfn}}}}{{{f{DbBDn}}}Cf}{{{f{DbBE`}}}Cf}{{{f{AAf}}}AAf}{{AAfe}{{A`{cn}}}{}{{Dj{AAf}{{Ad{{A`{cn}}}}}}}}{{{f{DbAAf}}e}{{A`{cn}}}{}{{Dj{{f{DbAAf}}}{{Ad{{A`{cn}}}}}}}}{{AAfgc}{{A`{en}}}{}{}{{Dj{AAfc}{{Ad{{A`{en}}}}}}}}{{{f{DbAAf}}}{{Cf{Ab}}}}{{{f{AAf}}{f{AAf}}}d}{{{f{DbAAf}}{f{Bj}}{f{Bj}}}{{A`{{f{DbAAf}}n}}}}{{{f{DbAAf}}{f{Bj}}c}{{A`{{f{DbAAf}}n}}}BCd}{{{f{DbAAf}}Fhc}{{A`{{f{DbAAf}}n}}}BCd}18{{{f{AAf}}{G`{Ab}}{f{BEd}}}{{A`{{Gj{Ab{G`{Ab}}Bn}}n}}}}`{{{f{AAf}}{f{Ab}}dd{Cf{Jh}}}{{A`{AAfn}}}}0{{{f{AAf}}Fhdd{Cf{Jh}}}{{A`{AAfn}}}}{{{f{AAf}}}BCb}{{{f{AAf}}{f{AAf}}}{{A`{bn}}}}{{{f{AAf}}e}{{A`{AAfn}}}{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}}{{{f{AAf}}Fh}{{Cf{{f{Ab}}}}}}{{{f{AAf}}c}{{A`{AAfn}}}{{BEf{Fh}}}}2{{{f{AAf}}c}{{A`{{G`{Ab}}n}}}{{BEh{{BA`{B@n}}}}}}{{{f{AAf}}e{f{{Mf{BCb}}}}}{{A`{AAfn}}}{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}}{{{f{AAf}}e{f{BCb}}}{{A`{AAfn}}}{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}}{{{f{DbAAf}}{f{{Bh{c}}}}}{{A`{bn}}}{{I`{Bj}}}}{{{f{AAf}}}{{Gj{FhFh}}}}{{{f{AAf}}Gf}AAf}{{{f{AAf}}}d}{{{f{DbAAf}}}b}{{{f{BDn}}}{{Gj{Fh{Cf{Fh}}}}}}{{{f{BE`}}}{{Gj{Fh{Cf{Fh}}}}}}{{{f{AAf}}GfFh}AAf}00{{{f{AAf}}cF`}{{A`{AAfn}}}{{BEh{{BA`{B@n}}}}}}{{{f{DbAAf}}cF`}{{A`{{f{DbAAf}}n}}}{{BEh{{BA`{B@n}}}}}}{{{f{AAf}}Gf}{{Gj{AAfAAf}}}}0{{{f{DbAAf}}}{{`{{Cn{}{{Ch{AAf}}}}}}}}{{AAfFhd}{{G`{AAf}}}}{{{f{AAf}}BCf}{{A`{{Cf{Ab}}n}}}}{{{f{AAf}}{Cf{Fh}}}AAf}{{{f{AAf}}{f{{l{El}}}}}{{A`{AAfn}}}}{{{f{AAf}}{f{{l{El}}}}}AAf}{{{f{AAf}}{f{{l{El}}}}d}AAf}{{{f{AAf}}}{{f{AAf}}}}{{{f{AAf}}BEj}{{A`{{A@n{AA`{A@l{{A@j{Fh}}}}}}n}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Ef{}}{{{f{DbAAf}}{Cf{{f{Bj}}}}{Cf{{AAb{Ef{G`{Ef}}}}}}}{{A`{AAfn}}}}{{{f{DbAAf}}{f{Bj}}e}{{A`{{f{DbAAf}}n}}}BCd{{AAj{{f{Ab}}}{{Ad{{A`{cn}}}}}}}}{{{f{DbAAf}}Fhe}{{A`{{f{DbAAf}}n}}}BCd{{AAj{{f{Ab}}}{{Ad{{A`{cn}}}}}}}}{c{{A`{e}}}{}{}}000{{{Gj{{BEl{{Cl{Cj}}}}{f{{Bh{B@d}}}}}}}{{A`{AAfn}}}}{BEn{{A`{AAfn}}}}2{{c{f{BCb}}}{{A`{AAfn}}}{{Cn{}{{Ch{{A`{{f{BCn}}n}}}}}}}}{{{f{AAf}}{f{Bj}}}{{A`{Fhn}}}}44444{{{f{c}}}AAd{}}0000{{{f{AAf}}{Cf{{f{{Bh{Ef}}}}}}BCh{Cf{{Gj{GfFh}}}}}{{A`{AAfn}}}}{{{f{AAf}}d{Cf{{f{{Bh{Ef}}}}}}BCh{Cf{{Gj{GfFh}}}}}{{A`{AAfn}}}}1{{{f{AAf}}c}{{A`{AAfn}}}{{BEh{Ef}}}}{{{f{AAf}}ce}{{A`{AAfn}}}{{BEh{{BA`{B@n}}}}}{{BEh{{BA`{B@n}}}}}}{{{f{AAf}}BF`}{{A`{AAfn}}}}{{{f{AAf}}c{f{Bj}}BFb}{{A`{AAfn}}}{{BEh{Ef}}}}0{{{f{AAf}}{f{AAf}}}{{A`{AAfn}}}}{{{f{DbAAf}}{f{AAf}}}{{A`{{f{DbAAf}}n}}}}{ce{}{}}0000{{{f{AAf}}}Fh}{{{f{DbAAf}}c}{{A`{{f{DbAAf}}n}}}BCd}{{{f{DbAAf}}c{f{BCb}}}{{A`{{f{DbAAf}}n}}}BCd}{{{f{DbAAf}}Ab}{{f{DbAAf}}}}{{{f{AAf}}{f{Bj}}{Cf{In}}}{{A`{AAfn}}}}{{{f{DbAAf}}{f{Bj}}{Cf{In}}}{{f{DbAAf}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{BF`}}}BF`}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{}BF`}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}{{{f{BF`}}{f{BF`}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BF`}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}{{{f{BF`}}{f{Dbc}}}bADf}`{{}Fh}{ce{}{}}``{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}``3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BD`}}}{{A`{AAfn}}}}`{{{f{BFd}}}{{f{{Bh{{BFf{In}}}}}}}}{{{f{BD`}}c}{{A`{AAfn}}}{{Af{AAf}{{Ad{{A`{AAfn}}}}}}IdIf}}{{{f{Bn}}}{{l{Ah}}}}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Dbc}}}{{f{Dbe}}}{}{}}0000000{{{f{BFd}}}BFd}{{{f{Bn}}}Bn}{{{f{BD`}}}BD`}{{{f{BFh}}}BFh}{{{f{c}}{f{Dbe}}}b{}{}}000{{{f{c}}}b{}}0000;{{}BFd}{{}Bn}{Fh{{f{c}}}{}}00{{{f{BFj}}}f}11111{Fh{{f{Dbc}}}{}}0000000`{{BFlc}{}BFn}{Fhb}0000{{{f{DbBFd}}}b}111{{{f{BFd}}{f{BFd}}}d}{{{f{Bn}}{f{Bn}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BG`}}}In}{{{f{BFd}}}{{f{{Bh{In}}}}}}{{{f{BD`}}}{{A`{AAfn}}}}{{{f{DbBFd}}}{{f{Db{G`{In}}}}}}{{{f{BFd}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Bn}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BD`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BFh}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{Bj}}BFh}Ef}{cc{}}000{{{G`{{Gj{{G`{In}}{G`{{BFf{In}}}}}}}}}BFd}{{{G`{{G`{{Gj{In{BFf{In}}}}}}}}}BFd}{{{G`{{Gj{In{BFf{In}}}}}}}BFd}33{BFdBn}4{BGbBFh}5{g{{A`{ic}}}{}{}{{Hh{c}{{Ch{e}}}}}{}}{cBFd{{Hf{}{{Ch{{Gj{In{BFf{In}}}}}}}}}}{cBFd{{Ib{}{{Ch{{Gj{In{BFf{In}}}}}}}}}}{{{f{Bn}}Fh}BG`}{{{f{BD`}}}{{f{Bn}}}}{{{f{DbBD`}}}{{f{DbBn}}}}{{{f{Bn}}}{{l{El}}}}{{{f{BGd}}dd}{{A`{Bnn}}}}{{{f{BD`}}}{{A`{AAfn}}}}{{{f{DbBn}}}{{f{DbBFd}}}}{{}Fh}0000000{ce{}{}}0000000{BnBFd}1{{{f{BFd}}}}{BFd}301{{{f{BG`}}}d}{{{f{Bn}}}d}{{{f{BFd}}}d}{{{f{BFd}}}{{BGh{{BGf{{Fj{In}}}}{Fj{{BFf{In}}}}}}}}{{{f{Bn}}}BGj}{{{f{BD`}}}{{G`{Ab}}}}{{{f{BD`}}{Cf{{Gj{GfFh}}}}}{{G`{Ab}}}}={{{f{BG`}}}Fh}{{{f{Bn}}}Fh}?????{{{G`{In}}{G`{{BFf{In}}}}d}BFd}{{{f{AAf}}{G`{Ab}}Bn{Cf{{G`{Ef}}}}}BD`}{{{f{DbBGj}}}Cf}{{{f{DbBGj}}Fh}Cf}{{{f{BD`}}c}{{A`{AAfn}}}{{Dj{AAf}{{Ad{{A`{AAfn}}}}}}IdIf}}{{{f{c}}}{}{}}{{{f{Bn}}}BFl}{{{f{BD`}}M`Oh}{{A`{AAfn}}}}{{BD`e}BD`{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}}{{{f{Bn}}GfFh}BFj}{{{f{DbBFd}}}b}{{{f{DbBn}}}b}{{{f{BD`}}Bf}{{A`{AAfn}}}}{{{f{BD`}}}{{A`{AAfn}}}}{Bn{{G`{In}}}}0{BD`Bn}{{{f{DbBD`}}}Bn}{{{f{c}}}e{}{}}000{{{f{c}}}Ef{}}{c{{A`{e}}}{}{}}000000000000000{{{f{c}}}AAd{}}0000000{BnBn}{{{f{Bn}}}{{f{BFd}}}}{{{f{Bn}}}{{f{{G`{{A@j{In}}}}}}}};{ce{}{}}0000000`````{{{f{BFd}}c}Ab{{Dj{{Gj{In{f{{BFf{In}}}}}}}{{Ad{Cf}}}}IdIf}}{{{f{BFd}}c}Ab{{Dj{{Gj{In{f{{BFf{In}}}}}}}{{Ad{}}}}IdIf}}{{{f{{Bh{{A@j{In}}}}}}c}Ab{{Dj{{A@j{In}}}{{Ad{Cf}}}}IdIf}}{{{f{{Bh{{A@j{In}}}}}}c}Ab{{Dj{{A@j{In}}}{{Ad{}}}}IdIf}}{{{f{{Bh{c}}}}e{Cf{{Mf{AG`}}}}}{{ALf{c}}}{BGlBGn}{{Cn{}{{Ch{{Gj{InIn}}}}}}Ij}}{{{f{{Bh{c}}}}{f{Hj}}e{Cf{{Mf{AG`}}}}}{{ALf{c}}}{BGlBGn}{{Cn{}{{Ch{{Gj{InIn}}}}}}Ij}}{{{f{{l{c}}}}InIn}{{l{c}}}Dh}{{{f{{G`{{A@j{In}}}}}}{f{{Bh{{Cl{Cj}}}}}}}d}{{{f{BH`}}{f{Bn}}}Ab}{{BHbBHb}BHb}0`{{{f{BHd}}{f{AAf}}{f{Bn}}}{{A`{Abn}}}}{{{f{BHd}}}{{A`{{f{Bj}}n}}}}````````````````````````````````````{{{f{c}}h}b{}}00{{{f{DbBHf}}Il}{{Cf{b}}}}{{{f{DbBHh}}{f{Il}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Dbc}}}{{f{Dbe}}}{}{}}00{{{f{BHf}}}BHf}{{{f{BHh}}}BHh}{{{f{BCn}}}BCn}{{{f{c}}{f{Dbe}}}b{}{}}00{{{f{c}}}b{}}00{{{f{{Bh{c}}}}}Eh{{Hl{Eh}}}}{{}BCn}{Fh{{f{c}}}{}}00{Fh{{f{Dbc}}}{}}00{Fhb}00{{{f{BCn}}{f{BCn}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BCn}}{f{DbH`}}}{{A`{bHb}}}}{{{Gj{{f{Eh}}Fh}}}BHf}{cc{}}{{{Gj{{f{Eh}}Fh}}}BHh}11{{eFh}BCb{{B@b{Eh}}}{{Cn{}{{Ch{{G`{{Gj{Efc}}}}}}}}}}{{}Fh}00{ce{}{}}00{BHfAb}{BHhAb}{{{f{Eh}}Fh}BHf}{{{f{Eh}}Fh}BHh}{{{G`{Il}}}BCn}{{{f{DbBHf}}Fh}Ab}{{{f{DbBHh}}Fh}Ab}{{{f{{Bh{BCn}}}}{Cf{Fh}}}{{A`{BCbn}}}}0{{{f{{Bh{BCn}}}}{Cf{Fh}}}{{A`{{G`{Eh}}n}}}}{{{f{c}}}e{}{}}00{c{{A`{e}}}{}{}}00000{{{f{c}}}AAd{}}00<<<{{{f{{Bh{AAf}}}}}{{A`{AAfn}}}}{{{f{{Bh{AAf}}}}d}{{A`{AAfn}}}}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{AAf{f{{Bh{{f{Bj}}}}}}{f{{Bh{{f{Bj}}}}}}{Cf{{f{Bj}}}}{f{AAf}}}AAf}{{BEbc}{{A`{AAfn}}}{{Dj{BHj{f{Db{BHn{BHl}}}}{f{Db{BHn{BI`}}}}}{{Ad{{A`{bn}}}}}}}}{{{f{BIb}}{f{{Bh{In}}}}dd}AAf}{{{f{BIb}}{f{AAf}}{f{Ab}}{f{Ab}}BId}{{A`{AAfn}}}}{{{f{Bj}}{f{Bj}}}Ef}{{{f{BEn}}Fh}{{Gj{BEnBEn}}}}{{{f{BIf}}{f{{Bh{A@`}}}}Lf}AAf}0{{{f{BIf}}{f{{Bh{A@`}}}}}AAf}0{{{f{BIh}}{Cf{{G`{{f{Bj}}}}}}{Cf{{f{Bj}}}}d}{{A`{AAfn}}}}{{BEbd}BEb}{{{BIj{c}}{Cf{{Mf{BIl}}}}}{{BIj{c}}}BIn}{{{f{Ab}}}{{A`{Abn}}}}{BJ`BJ`}{{{BJb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BJ`BJ`}}{{{f{BFb}}Gf{Cf{{f{AM`}}}}}{{A`{Gfn}}}}0{{{f{BJd}}{f{Ab}}}{{A`{Abn}}}}1{{BJfc}BEb{{I`{{Bh{BJ`}}}}}}5`{{BJ`{f{Bj}}}BJ`}{{}BJ`}{{BJ`d}BJ`}{{}BJh}{c{{A`{BJ`n}}}{{I`{{Bh{BJ`}}}}}}{{{f{{Mf{ce}}}}}{{f{e}}}OnBJj}{{BJld}BJl}`{{{f{BJn}}}d}00`{{BJ`c}BJ`{{B@b{BJ`}}}}{{{Mf{BJn}}BK`}{{A`{BEbn}}}}75{{BJ`cd}BJ`{{B@b{BJ`}}}}{{{f{DbABl}}}b}{{{f{DbABn}}}b}{{{f{DbABl}}{Cf{{f{Ab}}}}}{{A`{bn}}}}{{{f{DbABn}}{Cf{c}}}b{}}{{{f{DbABl}}{f{Ab}}}{{A`{bn}}}}{{{f{DbABn}}c}b{}}{{{f{{AH`{}{{AGn{c}}}}}}g}{{AH`{}{{AGn{c}}}}}{}{}{{Dj{{Cf{e}}}{{Ad{{Cf{c}}}}}}Dl}}{{BJfc{Mf{BCb}}}BEb{{Dj{AAf}{{Ad{{A`{AAfn}}}}}}IdIf}}{{BJ`c{BKd{{Mf{BKb}}}}}BJ`{{Dj{Ab}{{Ad{{A`{{Cf{Ab}}n}}}}}}IdIf}}{{BJ`BJ`c{BKd{{Mf{BKb}}}}}BJ`{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IdIf}}{{{f{BJ`}}{f{Dbc}}f}{{A`{BKfn}}}{{Af{{f{BJ`}}f}{{Ad{{A`{BKfn}}}}}}}}{{{f{AHb}}{f{Dj}}}AHb}{{{f{AHb}}{f{Dj}}}{{l{c}}}Dh}{{BJ`c{f{{Bh{BJ`}}}}{BKd{{Mf{BKb}}}}}BJ`{{Dj{{f{Db{Bh{Ab}}}}}{{Ad{{A`{{Cf{Ab}}n}}}}}}IdIf}}{{BJ`BKh{f{{Bh{BJ`}}}}dd}BJ`}{{ce{BKd{{Mf{BKb}}}}d}BJ`{{Dj{{f{Db{Bh{Ab}}}}}{{Ad{{A`{{Cf{Ab}}n}}}}}}IdIf}{{I`{{Bh{BJ`}}}}}}{{{f{{AH`{}{{AGn{c}}}}}}i{f{Db{Bh{g}}}}}b{}{}{}{{Dj{{Cf{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AH`{}{{AGn{c}}}}}}g}{{AH`{}{{AGn{c}}}}}{}{}{{Dj{e}{{Ad{c}}}}Dl}}{{BJ`BJ`GfEh}BJ`}{BEn{{Mf{Cj}}}}{{{f{BKj}}}{{Cf{Fh}}}}{BKlBJ`}{BKnBJ`}{BJ`BJ`}3210{{{f{AHd}}Ej}{{l{El}}}}{{BJ`Ej}BJ`}{{{f{BL`}}Ej}{{l{El}}}}{{cF`}BJ`{{I`{{Bh{BJ`}}}}}}{{{f{AHd}}{f{{Bh{Ab}}}}{f{F`}}}{{A`{{l{El}}n}}}}{{{f{AHf}}}{{A`{{l{El}}n}}}}6{{{f{BL`}}}{{A`{{l{El}}n}}}}{cBJ`{{B@b{BJ`}}}}{{{f{BLb}}}{{f{{Bh{Ob}}}}}}``{BJ`BKl}{eAMh{}{{Hf{}{{Ch{c}}}}}}{cBEn{{Hf{}{{Ch{b}}}}}}{cBEn{{Hf{}{{Ch{{Cf{b}}}}}}}}2{{AFne}AMj{}{{Hf{}{{Ch{c}}}}}}0{{AFnc}BEn{{Hf{}{{Ch{{Cf{b}}}}}}}}{{AFnc}BEn{{Hf{}{{Ch{b}}}}}}`{{{f{Db{BLd{c}}}}}{{A`{BCln}}}BLf}{{{f{BJn}}}{{f{AG`}}}}{{{f{BL`}}}{{f{AG`}}}}{{{f{BLh}}}{{f{AG`}}}}{{{f{BEn}}}{{f{AG`}}}}{{{f{DbBL`}}}{{f{DbAG`}}}}{{{f{DbBEn}}}{{f{DbAG`}}}}{{{f{Ln}}}Il}{{{f{BLj}}}{{f{{l{Aj}}}}}}{{{f{BLl}}{Cf{{f{Bj}}}}d}{{A`{{Kb{K`Jn}}n}}}}{{{f{BLl}}{Cf{{f{Bj}}}}}{{A`{{Kb{K`Jn}}n}}}}{{{f{BLl}}{Cf{{f{Bj}}}}Kfdd{Cf{{f{Ef}}}}{f{{l{Bd}}}}}{{A`{{Kb{KhKd}}n}}}}{{{f{BLl}}{Cf{{f{Bj}}}}Kfd{Cf{{f{Ef}}}}{f{{l{Bd}}}}}{{A`{{Kb{KhKd}}n}}}}{{{f{{Mf{c}}}}}BLn{BM`On}}{{{f{BMb}}}{{f{{l{Ah}}}}}}{{{f{{Mf{ce}}}}}{}OnBJj}{{{f{{Mf{c}}}}}N`BMd}{{{f{BMf}}}{{f{BJ`}}}}{{{f{{Mf{ce}}}}}{{f{c}}}OnBJj}{{{f{AMl}}}{{f{Eh}}}}{{{f{BMh}}}{{f{Ab}}}}{{{f{DbBL`}}}{{A`{Fhn}}}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{Cf{{f{{Bh{c}}}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{BMj}}}{{f{{l{Bd}}}}}}{{{G`{BJ`}}}BJ`}{{{f{BLl}}{Cf{{f{Bj}}}}d}{{A`{{Kb{LbKd}}n}}}}{{{Mf{{Bh{{BMl{c}}}}e}}}{{Mf{{Bh{c}}e}}}{}BJj}{{{Mf{{BMl{c}}e}}}{{Mf{ce}}}{}BJj}{{{f{Bj}}}BJ`}{{BJ`{Cf{In}}}BJ`}{{{f{BMn}}}{{A`{{l{Bd}}n}}}}{{{f{BMn}}}{{l{Bd}}}}{{{f{{Kb{KhKd}}}}{f{Kf}}{f{AM`}}}{{Kb{KnKd}}}}`{{{BIj{{Cl{BIn}}}}{Cf{{Mf{BCb}}}}}{{A`{BN`n}}}}{{{BNb{c}}{f{BCb}}}{{A`{{BNd{c}}n}}}BNf}{{{BNh{c}}{f{BCb}}}{{A`{{BNj{c}}n}}}BNf}{{{BNl{c}}Fh}{{A`{BNnn}}}BIn}{{{BO`{c}}{f{BCb}}}{{A`{{BOb{c}}n}}}BNf}{{{f{Db{BIj{c}}}}}{{A`{BOdn}}}BIn}`{BJ`BOf}{{BJ`BOhBJ`}BJ`}{{BJhBJh}BJh}{{{f{BL`}}{f{Ab}}}{{A`{Abn}}}}{{{f{DbBJh}}BJh}b}210{{{f{BJh}}}In}0321{{{f{c}}}{{f{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Mf{ce}}}}}{{f{c}}}OnBJj}111111111111111{{{f{Dbc}}}{{f{Dbe}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BEbIncF`}BEb{{I`{{Bh{BJ`}}}}}}{BEn{{Cl{Cj}}}}``{BEbBEb}```{{{f{BOj}}{f{Bj}}}{{A`{Efn}}}}{{BOl{G`{BJ`}}}{{A`{BJ`n}}}}{{{f{AMd}}{f{AMd}}c}{{A`{AMdn}}}ANl}{{{f{BLh}}{f{Db{Bh{Ab}}}}}{{A`{{Cf{Ab}}n}}}}{{{f{BOn}}AbAb}{{A`{Abn}}}}{{BOl{G`{BJ`}}}BJ`}{{{f{C@`}}}b}{{BJ`Eh}BJ`}{{{f{BL`}}{f{Eh}}Fd}{{A`{Abn}}}}{{BEb{C@b{{f{Bj}}EhA@d}}d}BEb}{{{f{AHh}}{f{Eh}}}{{A`{Abn}}}}3{{{f{ANn}}{f{Eh}}}{{A`{Abn}}}}{{BEbEhd}BEb}2{{{f{AHh}}{f{Eh}}Fd}{{A`{Abn}}}}{{{f{ANn}}{f{Eh}}Fd}{{A`{Abn}}}}{{BJ`EhFd}BJ`}`{BJ`C@d}{{{f{{Mf{c}}}}}{{Cf{{f{ALb}}}}}{ALbOn}}{BJ`BJ`}{{{f{C@f}}}{{A`{Abn}}}}1`{{{f{C@h}}}{{A`{{l{Jn}}n}}}}{{{f{BEn}}Fh}d}{{{BNl{c}}{f{BCl}}}{{A`{{BNl{c}}n}}}BIn}{{{f{C@j}}{f{Ab}}}{{A`{Abn}}}}{{{f{BL`}}{f{Ab}}}{{A`{Abn}}}}{{{f{C@j}}c}{{A`{Abn}}}Bb}{{{f{BL`}}}{{Fn{{Fj{{Cl{Cj}}}}{Fl{{f{{Cl{Cj}}}}}{{Ad{Fh}}}}}}}}``{{{f{BL`}}}{{f{{G`{{Cl{Cj}}}}}}}}{{{f{DbBL`}}}{{f{Db{G`{{Cl{Cj}}}}}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BJ`BJ`BJ`}BJ`}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BJ`BJ`}BJ`}10{{{f{C@`}}}C@`}{{{f{BEb}}}BEb}{{{f{BJf}}}BJf}{{{f{BK`}}}BK`}{{{f{C@l}}}C@l}{{{f{C@n}}}C@n}{{{f{CA`}}}CA`}{{{f{CAb}}}CAb}{{{f{CAd}}}CAd}{{{f{BDb}}}BDb}{{{f{BEd}}}BEd}{{{f{CAf}}}CAf}{{{f{BFb}}}BFb}{{{f{CAh}}}CAh}{{{f{CAj}}}CAj}{{{f{CAl}}}CAl}{{{f{CAn}}}CAn}{{{f{AAh}}}AAh}{{{f{A@`}}}A@`}{{{f{CB`}}}CB`}{{{f{CBb}}}CBb}{{{f{CBd}}}CBd}{{{f{CBf}}}CBf}{{{f{CBh}}}CBh}{{{f{BId}}}BId}{{{f{CBj}}}CBj}{{{f{CBl}}}CBl}{{{f{CBn}}}CBn}{{{f{CC`}}}CC`}{{{f{CCb}}}CCb}{{{f{CCd}}}CCd}{{{f{CCf}}}CCf}{{{f{CCh}}}CCh}{{{f{CCj}}}CCj}{{{f{CCl}}}CCl}{{{f{CCn}}}CCn}{{{f{CD`}}}CD`}{{{f{CDb}}}CDb}{{{f{CDd}}}CDd}{{{f{CDf}}}CDf}{{{f{CDh}}}CDh}{{{f{CDj}}}CDj}{{{f{CDl}}}CDl}{{{f{CDn}}}CDn}{{{f{CE`}}}CE`}{{{f{CEb}}}CEb}{{{f{CEd}}}CEd}{{{f{CEf}}}CEf}{{{f{CEh}}}CEh}{{{f{CEj}}}CEj}{{{f{CEl}}}CEl}{{{f{CEn}}}CEn}{{{f{CF`}}}CF`}{{{f{BMf}}}BMf}{{{f{BJ`}}}BJ`}{{{f{CFb}}}CFb}{{{f{BOh}}}BOh}{{{f{{BKd{c}}}}}{{BKd{c}}}AD`}{{{f{CFd}}}CFd}{{{f{CFf}}}CFf}{{{f{CFh}}}CFh}{{{f{CFj}}}CFj}{{{f{CFl}}}CFl}{{{f{CFn}}}CFn}{{{f{BKh}}}BKh}{{{f{CG`}}}CG`}{{{f{CGb}}}CGb}{{{f{CGd}}}CGd}{{{f{CGf}}}CGf}{{{f{CGh}}}CGh}{{{f{CGj}}}CGj}{{{f{CGl}}}CGl}{{{f{CGn}}}CGn}{{{f{BOl}}}BOl}{{{f{BJh}}}BJh}{{{f{CH`}}}CH`}{{{f{CHb}}}CHb}{{{f{{Mf{ce}}}}}{{Mf{ce}}}On{BJjAD`}}{{{f{CHd}}}CHd}{{{f{CHf}}}CHf}{{{f{CHh}}}CHh}{{{f{Oj}}}Oj}{{{f{BEj}}}BEj}{{{f{BEn}}}BEn}{{{f{Ln}}}Ln}{{{f{BCb}}}BCb}{{{f{B@d}}}B@d}{{{f{BCl}}}BCl}{{{f{Oh}}}Oh}{{{f{CHj}}}CHj}{{{f{CHl}}}CHl}{{{f{CHn}}}CHn}{{{f{BL`}}}{{Mf{BL`}}}}{{{f{c}}{f{Dbe}}}b{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{c}}}b{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CI`}}}{{Cf{{f{CIb}}}}}}{{{f{C@l}}}{{Cf{{f{CIb}}}}}}{{{f{CA`}}}{{Cf{{f{CIb}}}}}}``{{{f{BFb}}{f{BFb}}}BAh}{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}BAh{CIdOn}BJj}{{{f{{Bh{BJ`}}}}}BJ`}{{BJlCBl}BJl}{{{f{CBl}}{f{CC`}}}d}`{{{f{{Bh{Ab}}}}}{{A`{Abn}}}}{{{f{Bj}}}BJ`}{BEb{{A`{AAfn}}}}{c{{A`{{G`{AAf}}n}}}{{Ib{}{{Ch{BEb}}}}}}{AOle{}{{AMh{c}}AKn}}0{{AOlAFn}e{}{{AMj{c}}AKn}}0{{ADh{f{Bj}}}{{l{c}}}Dh}{{ADj{f{{l{c}}}}}{{l{c}}}Dh}10{{ADj{f{Bj}}Eh}{{l{c}}}Dh}0{BEb{{A`{C@`n}}}}{cBJ`{{BEh{Ef}}}}{{{f{CHd}}Fh}CIf}``{{{f{BIh}}{G`{{f{Bj}}}}{Cf{{f{Bj}}}}d}{{A`{AAfn}}}}`{{{f{c}}{f{e}}}BAh{}{}}0{BJhBJh}```{{{f{CEh}}}{{A`{{Mf{BCb}}n}}}}{{cCHh}{{A`{BEbn}}}{{I`{{Bh{BEb}}}}}}{{{f{BMn}}{f{{l{Bd}}}}}{{l{Bd}}}}{{ed}{{A`{BJ`n}}}{{B@b{BJ`}}AD`}{{I`{{Bh{c}}}}}}{{{f{CI`}}{G`{BEb}}}{{A`{BEbn}}}}{{{f{C@l}}{G`{BEb}}}{{A`{BEbn}}}}44{e{{A`{BJ`n}}}{{B@b{BJ`}}AD`}{{I`{{Bh{c}}}}}}{{c{f{Bj}}d}BJ`{{I`{{Bh{BJ`}}}}}}{{BKlc}BJ`{{B@b{BJ`}}}}{{{f{CIh}}{f{{Bh{Bf}}}}}{{l{An}}}}{{{f{BMn}}{f{Bj}}d}{{A`{{l{An}}n}}}}{{BKnc}BJ`{{B@b{BJ`}}}}{{{f{BJh}}BJh}d}{{{f{BCb}}{f{Bj}}}d}{{{f{CIh}}{f{{l{Aj}}}}}{{l{An}}}}{{{f{BMn}}{f{{l{Bd}}}}dd}{{A`{{l{An}}n}}}}{{{f{BMn}}{f{Bj}}}{{A`{{l{An}}n}}}}{{{f{Cj}}{f{AFn}}}{{Cl{Cj}}}}{{{f{Ab}}Fh}{{A`{{l{El}}n}}}}{BEbBEb}{{{CIj{c}}}{{A`{Fhn}}}BIn}{BJ`BJ`}{{{f{BMn}}{f{Bj}}d}{{A`{{l{El}}n}}}}{{{f{BMn}}{f{{l{Bd}}}}d}{{A`{{l{El}}n}}}}{{{f{CIl}}Bf{Cf{Bf}}{Cf{{f{CBf}}}}Bfd}{{A`{Fhn}}}}{{{ANh{Bj}}}Eh}{{{f{BIb}}{f{{Bh{A@`}}}}d}AAf}`{{BEbBEb{Cf{Ef}}}BEb}{{{f{CIn}}{f{AAf}}{Cf{{f{Bj}}}}{Cf{{Gj{GfFh}}}}}{{A`{AAfn}}}}{{{f{CIn}}{f{AAf}}{Cf{{Gj{GfFh}}}}d}{{A`{{Gj{AAfAAf}}n}}}}{{{f{Ab}}d}{{A`{Abn}}}}{{BJ`d}BJ`}{{BJ`ced}BJ`{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IdIfAD`}{{I`{{Bh{BJ`}}}}}}212121{{ce}BJ`{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IdIfAD`}{{I`{{Bh{BJ`}}}}}}32{{CJ`BJ`Fhd}BJ`}`{{{f{BEn}}}{{f{AFn}}}}{{{f{B@d}}}{{f{AFn}}}}```{{BJ`BJ`BFbCAh}BJ`}`{CG`BJ`}`{{BJ`BJ`BFbCAh{Cf{Kf}}{Cf{Ef}}}BJ`}0{ALnGf}00{{{f{CJb}}}{{l{Nd}}}}{{{f{CJd}}}{{l{Nd}}}}{{{f{C@h}}}{{A`{{l{Nd}}n}}}}`{{{f{CJf}}}{{l{Kd}}}}{{{f{BFb}}}Gf}`{{{f{BFb}}}d}```{{}b}{cbBJj}{{}BEb}{{}BK`}{{}C@n}{{}CAb}{{}CJh}{{}BDb}{{}BEd}{{}CAl}{{}CB`}{{}CBb}{{}CBd}{{}BId}{{}CBj}{{}CBl}{{}CBn}{{}CCb}{{}CCd}{{}CCh}{{}CCj}{{}CCl}{{}CCn}{{}CD`}{{}CDd}{{}CDh}{{}CDl}{{}CDn}{{}CE`}{{}CEh}{{}BJ`}{{}{{BKd{{Mf{CJj}}}}}}{{}{{BKd{{Mf{BOn}}}}}}{{}{{BKd{{Mf{BKb}}}}}}{{}CG`}{{}CGb}{{}CGf}{{}CGh}{{}CGj}{{}CGl}{{}BJh}{{}CH`}{{}{{Mf{{Bh{c}}}}}{}}{{}{{Mf{CJl}}}}{{}{{Mf{Bj}}}}{{}{{Mf{c}}}CJn}{{}CHf}{{}CHh}{{}Oj}{{}BEj}{{}BCb}{{}B@d}{{}BCl}{{}Oh}`{{}{{AAb{{G`{AAh}}{G`{A@`}}}}}}{Fh{{f{c}}}{}}0{{{f{{ALj{c}}}}}f{}}111111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BKd{c}}}}}f{}}22222222222222222222{{{f{{Mf{ce}}}}}{{f{c}}}OnBJj}3333333333333333{Fh{{f{Dbc}}}{}}0{{{f{Db{ALj{c}}}}}{{f{Db}}}{}}111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CEh}}}{{A`{Efn}}}}{{{f{BEb}}}{{A`{Efn}}}}0001{{{f{{Mf{c}}}}}{{f{Bj}}}{ALbOn}}{{{f{B@d}}{f{CK`}}}{{A`{CKbn}}}}```{{{f{Ab}}GfCKd}{{A`{Abn}}}}{{BKnGfCKd}BJ`}{{BJ`GfCKd}BJ`}{{BJhBJh}BJh}{{{f{CEh}}}{{A`{{`{BC`}}n}}}}``{{{BJb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BJ`BJ`}}{{{f{BJd}}{f{Ab}}}{{A`{Abn}}}}{{BJ`c}BJ`{{B@b{BJ`}}}}{{{Mf{AG`c}}}{{A`{{Mf{ec}}{Mf{AG`c}}}}}BJj{AG`IdIf}}{{{Mf{AG`c}}}{{Mf{ec}}}BJj{AG`IdIf}}{{{f{{Mf{ce}}}}}{{CKf{ce}}}On{AD`BJj}}{Fhb}000000{{{f{DbC@`}}}b}1{{BEbe}BEb{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}}22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222{{{f{Db{Mf{ce}}}}}bOnBJj}3333333333333333{BJ`BJ`}2{{BEb{Cf{{G`{BJ`}}}}}BEb}1{{{f{BL`}}}Ab}{{{f{{Kb{KhKd}}}}{f{Kf}}{f{AM`}}}{{Kb{KnKd}}}}`{BJ`CKh}{{{f{ANn}}}{{f{Eh}}}}{{{f{BL`}}}{{f{Eh}}}}{{{f{Ln}}}{{f{Eh}}}}`{{{f{Eh}}}BJ`}{cBJ`{{I`{{Bh{Eh}}}}}}`{CGbBJ`}{{}BJh}{{}CH`}{{{f{c}}}e{}{{CKl{CKj}}}}0`{{{f{CIh}}{f{{Bh{Bf}}}}}{{l{An}}}}{{{f{CIh}}{f{{l{Aj}}}}}{{l{An}}}}{{BFb{f{Eh}}{f{Bj}}}{{A`{bn}}}}{{BFb{Cf{{f{Bj}}}}{f{Bj}}}{{A`{bn}}}}{{{f{c}}{f{c}}}{{A`{bn}}}CKn}{{{f{CL`}}{f{Bj}}}{{A`{bn}}}}`{{{f{CAd}}{f{CAd}}}d}{{{f{BDb}}{f{BDb}}}d}{{{f{BEd}}{f{BEd}}}d}{{{f{BFb}}{f{BFb}}}d}{{{f{CAh}}{f{CAh}}}d}{{{f{CAj}}{f{CAj}}}d}{{{f{CAl}}{f{CAl}}}d}{{{f{AAh}}{f{AAh}}}d}{{{f{CB`}}{f{CB`}}}d}{{{f{CBb}}{f{CBb}}}d}{{{f{CBd}}{f{CBd}}}d}{{{f{CBf}}{f{CBf}}}d}{{{f{CBh}}{f{CBh}}}d}{{{f{BId}}{f{BId}}}d}{{{f{CBj}}{f{CBj}}}d}{{{f{CBl}}{f{CBl}}}d}{{{f{CBn}}{f{CBn}}}d}{{{f{CC`}}{f{CC`}}}d}{{{f{CCb}}{f{CCb}}}d}{{{f{CCd}}{f{CCd}}}d}{{{f{CCf}}{f{CCf}}}d}{{{f{CCh}}{f{CCh}}}d}{{{f{CCj}}{f{CCj}}}d}{{{f{CCl}}{f{CCl}}}d}{{{f{CCn}}{f{CCn}}}d}{{{f{CD`}}{f{CD`}}}d}{{{f{CDb}}{f{CDb}}}d}{{{f{CDd}}{f{CDd}}}d}{{{f{CDf}}{f{CDf}}}d}{{{f{CDh}}{f{CDh}}}d}{{{f{CDj}}{f{CDj}}}d}{{{f{CDl}}{f{CDl}}}d}{{{f{CDn}}{f{CDn}}}d}{{{f{CE`}}{f{CE`}}}d}{{{f{CEb}}{f{CEb}}}d}{{{f{CEd}}{f{CEd}}}d}{{{f{CEf}}{f{CEf}}}d}{{{f{BMf}}{f{BMf}}}d}{{{f{BJ`}}{f{BJ`}}}d}{{BJ`c}BJ`{{B@b{BJ`}}}}{{{f{CFb}}{f{CFb}}}d}{{{f{BOh}}{f{BOh}}}d}{{{f{{BKd{Ab}}}}{f{{BKd{Ab}}}}}d}{{{f{{BKd{{Mf{c}}}}}}{f{{BKd{{Mf{c}}}}}}}dOn}{{{f{CFd}}{f{CFd}}}d}{{{f{CFf}}{f{CFf}}}d}{{{f{CFh}}{f{CFh}}}d}{{{f{CFj}}{f{CFj}}}d}{{{f{CFl}}{f{CFl}}}d}{{{f{CFn}}{f{CFn}}}d}{{{f{BKh}}{f{BKh}}}d}{{{f{CGd}}{f{CGd}}}d}{{{f{CGf}}{f{CGf}}}d}{{{f{CGh}}{f{CGh}}}d}{{{f{CGj}}{f{CGj}}}d}{{{f{CGl}}{f{CGl}}}d}{{{f{CGn}}{f{CGn}}}d}{{{f{CKb}}{f{CKb}}}d}{{{f{CH`}}{f{CH`}}}d}{{{f{CHb}}{f{CHb}}}d}{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}d{CLbOn}BJj}{{{f{{Mf{Cj}}}}{f{Cj}}}d}{{{f{{Mf{CLd}}}}{f{CLd}}}d}{{{f{CHf}}{f{CHf}}}d}{{{f{CHh}}{f{CHh}}}d}{{{f{Oj}}{f{Oj}}}d}{{{f{BEj}}{f{BEj}}}d}{{{f{BEn}}{f{{f{Cj}}}}}d}{{{f{BEn}}{f{BEn}}}d}{{{f{BCb}}{f{BCb}}}d}{{{f{B@d}}{f{B@d}}}d}{{{f{BCl}}{f{BCl}}}d}{{{f{Oh}}{f{Oh}}}d}{{{f{CHn}}{f{CHn}}}d}{{BJ`c}BJ`{{B@b{BJ`}}}}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CLfBJ`d}BJ`}``{{BJ`c}BJ`{{BEh{Ef}}}}{{BJ`c}BJ`{{I`{{Bh{Eh}}}}}}{{{f{Dbc}}e}{{A`{{f{Dbg}}BBl}}}{}CLh{}}{{{f{{Bh{CIl}}}}d{Cf{{f{CIb}}}}}{{A`{{Mf{{Bh{CIl}}}}n}}}}{{{f{{Bh{CIl}}}}d{Cf{{f{CIb}}}}d}{{A`{{Gj{{Mf{{Bh{CIl}}}}Fh}}n}}}}{{{f{{Bh{c}}}}{f{{Bh{c}}}}}d{{I`{CLj}}}}{{{f{BEb}}d}{{A`{Efn}}}}{{BEbe}BEb{{B@b{BJ`}}AD`}{{I`{{Bh{c}}}}}}{{{f{AHn}}}{{A`{Abn}}}}{BJ`BJ`}{{{f{AHn}}}{{A`{{Gj{Ab{Gh{Gf}}}}n}}}}`{{{f{DbBJh}}c}b{{Hf{}{{Ch{BJh}}}}}}{{BJ`BJ`BJ`}BJ`}{{{f{BMn}}{f{{l{Bd}}}}Fh}{{A`{{l{Bd}}n}}}}{A@`{{Gj{InIn}}}}{{{f{BMn}}{f{Bj}}}{{A`{{l{Ah}}n}}}}{{{f{BMn}}{f{{l{Bd}}}}}{{A`{{l{Ah}}n}}}}{{{f{BMn}}{f{Bj}}{f{Eh}}}{{A`{Abn}}}}{{{f{ABl}}}d}{{{f{C@`}}}{{Cf{{A`{AAfn}}}}}}{{BEbFh}{{A`{AAfn}}}}{{{f{C@`}}}{{A`{AAfn}}}}{{{f{ABl}}}{{f{Ob}}}}{{{f{BL`}}}{{Dn{Ob}}}}{{CLlGf}BJ`}{{CLl{f{Bj}}}BJ`}{{CLl{f{{Bh{c}}}}}BJ`{{I`{Bj}}}}{{{f{BEn}}}{{f{{Bh{B@d}}}}}}`{{BEbc}BEb{{B@b{BJ`}}}}{{BJ`c}BJ`{{B@b{BJ`}}}}`10{{BJ`AHj}BJ`}{{{f{AI`}}c}{{A`{AI`n}}}{}}{{{f{AIb}}{f{{l{An}}}}}{{A`{{l{c}}n}}}Dh}{{{f{BL`}}{f{{l{An}}}}}{{A`{Abn}}}}{{BEbBJ`}BEb}5{{BClc}BCl{{Dj{Fh{f{B@d}}}{{Ad{d}}}}}}{{{f{BMn}}{f{Bj}}d}{{A`{{l{El}}n}}}}{{{f{BMn}}{f{{l{Bd}}}}dd}{{A`{{l{El}}n}}}}{{{f{BMn}}{f{Bj}}}{{A`{{l{El}}n}}}}{CLn{{A`{AAfn}}}}{{{f{DbCM`}}{f{DbAAf}}}{{A`{bn}}}}{ABn{{l{c}}}Dh}{{ANl{f{{l{El}}}}{f{{l{El}}}}}{{A`{{l{El}}n}}}}{BJlBEb}{CI`{{A`{BEbn}}}}{{{BIj{c}}}{{A`{AAfn}}}BIn}{C@l{{A`{BEbn}}}}{CA`{{A`{BEbn}}}}{{{f{Db{BNb{c}}}}{f{DbAAf}}}{{A`{bn}}}BNf}{{{CMb{c}}}{{A`{AAfn}}}BIn}{{{BLd{c}}}{{A`{AAfn}}}BLf}{{{f{Db{CMd{c}}}}{f{DbAAf}}}{{A`{bn}}}BNf}{{{f{Db{BNh{c}}}}{f{DbAAf}}}{{A`{bn}}}BNf}{{{f{Db{CMf{c}}}}{f{DbAAf}}}{{A`{bn}}}BNf}{{{CMh{c}}}{{A`{AAfn}}}BIn}{{{CIj{c}}}{{A`{AAfn}}}BIn}{{{BNl{c}}}{{A`{AAfn}}}BIn}{{{BO`{c}}{f{DbAAf}}}{{A`{Jhn}}}BNf}{{{f{DbABl}}}{{l{Ah}}}}><;{{{CMb{c}}{Cf{{Mf{BIl}}}}d}{{A`{AAfn}}}BIn}{{{f{BNn}}Fh}d}{{}BJ`}{BEbBEb}{BKnBJ`}{BJ`BJ`}`0```{{}{{BKd{{Mf{BKb}}}}}}{{{f{C@f}}}{{A`{Abn}}}}2{{BJ`BJ`}BJ`}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Db{Mf{AFd}}}}}{{A`{bBBl}}}}{{{f{BLh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BOn}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BOj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CAd}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BDb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BEd}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CAf}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BFb}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CAh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CAj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CAl}}{f{DbH`}}}{{A`{bHb}}}}{{{f{AAh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{A@`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BJn}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CB`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CBb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CBd}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CBf}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CMj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CBh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BId}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CBj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CBl}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CBn}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CC`}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CCb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CCd}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CCf}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CCh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CCj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CCl}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CCn}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CD`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CDb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CDd}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CDf}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CDh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CDj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CDl}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CDn}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CE`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CEb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CEd}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CEf}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BJ`}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CFb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BOh}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{{BKd{c}}}}{f{DbH`}}}{{A`{bHb}}}{}}{{{f{CFd}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CFf}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CFh}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CFj}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CFl}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CFn}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{BKh}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CG`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CGb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CGd}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CGf}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CGh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CGj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CGl}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CGn}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BOl}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BJh}}{f{DbH`}}}{{A`{bHb}}}}0000{{{f{CKb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CH`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CHb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{{Mf{ce}}}}{f{DbH`}}}{{A`{bHb}}}{AGbOn}BJj}{{{f{{Mf{ce}}}}{f{DbH`}}}{{A`{bHb}}}OnBJj}{{{f{{Mf{ce}}}}{f{DbH`}}}{{A`{bHb}}}{BC`On}BJj}{{{f{CHd}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CHf}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CHh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Oj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BEj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BEn}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BCb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{B@d}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BCl}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Oh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CHj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CHl}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CHn}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Bj}}BFh}Ef}```{{BJ`ce}BJ`{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IdIfAD`}{{I`{{Bh{BJ`}}}}}}{{BJld}BJl}``{{{f{Bj}}c}{{A`{BJ`n}}}{{I`{{Bh{BJ`}}}}}}{{BJ`{Cf{In}}}BJ`}{cc{}}00000000{CEhBEb}{BJfBEb}2222222222222222222222222222222222{InAAh}3333333{{{f{Bj}}}CBf}44{CC`BId}555555555555555555555555555555{BMfBJ`}{O`BJ`}{N`BJ`}{{{f{Bj}}}BJ`}{NlBJ`}{NfBJ`}{InBJ`}{JhBJ`}={dBJ`}{BfBJ`}{GfBJ`}{M`BJ`}{JfBJ`}{cc{}}0{CFd{{BKd{{Mf{BLh}}}}}}{CFf{{BKd{{Mf{BLh}}}}}}{CFl{{BKd{{Mf{BLh}}}}}}{CMl{{BKd{{Mf{BLh}}}}}}{CFh{{BKd{{Mf{BLh}}}}}}{BKh{{BKd{{Mf{BLh}}}}}}{CFn{{BKd{{Mf{BLh}}}}}}{CMn{{BKd{{Mf{BLh}}}}}}8{CN`{{BKd{{Mf{BLh}}}}}}{CNb{{BKd{{Mf{BLh}}}}}}::::::{CFdBKh}{CFfBKh}<{CFlBKh}{CN`BKh}>>>>>{CGlCGj}??????{CNdCKb}{cc{}}0{Ef{{Mf{Bj}}}}{{{f{Bj}}}{{Mf{Bj}}}}{{{f{CLj}}}{{Mf{CLj}}}}{{{f{CJl}}}{{Mf{CJl}}}}{c{{Mf{c}}}{}}{{{A@j{c}}}{{Mf{{Bh{c}}}}}{}}{CNf{{Mf{CNh}}}}{{{f{CNh}}}{{Mf{CNh}}}}{CIl{{Mf{CLj}}}}{{{Mf{Bj}}}{{Mf{{Bh{Bf}}}}}}{{{Dn{c}}}{{Mf{c}}}{CNjOn}}{{{G`{ce}}}{{Mf{{Bh{c}}e}}}{}{BJjAD`}}{{{Cl{ce}}}{{Mf{ce}}}OnBJj}={CNlc{}}{{{f{{Bh{c}}}}}{{Mf{{Bh{c}}}}}AD`}{CNn{{Mf{CJl}}}}{cc{}}00000{CO`BEn}{CObBEn}22{{{f{{Mf{BCl}}}}}BCb}3{{{f{BCn}}}BCb}{{{f{{Bh{Ab}}}}}BCb}{{{Mf{BCl}}}BCb}{BClBCb}{{{f{BCl}}}BCb}8{{{G`{B@d}}}BCl}99999{In{{Cf{BJh}}}}{InBJh}00{{c{Cf{Hj}}}COd{}}{{{COf{Gf}}{COf{Bf}}{Cf{Hj}}}COh}{{{COf{Gf}}{COf{Bf}}{Cf{Hj}}}COj}{g{{A`{ic}}}{}{}{{Hh{c}{{Ch{e}}}}}{}}000{c{{ALj{{l{e}}}}}{{Hf{}{{Ch{}}}}}Al}{c{{ALj{{l{An}}}}}{{Hf{}{{Ch{d}}}}}}{cBJh{{Hf{}{{Ch{BJh}}}}}}{e{{Mf{{Bh{c}}}}}{}{{Hf{}{{Ch{c}}}}}}{eBCb{{B@b{Ob}}}{{Hf{}{{Ch{c}}}}}}{{gFh}{{COl{Gf}}}I`{{Hf{}{{Ch{{Cf{c}}}}}}}{{Hf{}{{Ch{{Cf{e}}}}}}}}0{e{{COl{Gf}}}{{Hf{}{{Ch{{Cf{d}}}}}}}{{Hf{}{{Ch{{Cf{c}}}}}}}}{{{f{Bj}}e}ADd{}{{Cn{}{{Ch{{Cf{c}}}}}}}}{{gAFn}{{COl{Gf}}}BGn{{Hf{}{{Ch{{Cf{c}}}}}}}{{Hf{}{{Ch{{Cf{e}}}}}}}}783{{{f{Bj}}e}ADd{}{{Cn{}{{Ch{c}}}}}}{{{f{Bj}}}{{Cf{BJh}}}}{c{{ALj{{l{e}}}}}{{Ib{}{{Ch{}}}}}Al}{e{{Mf{{Bh{c}}}}}Id{{Ib{}{{Ch{c}}}}}}`{c{{A`{{CIj{AFd}}n}}}{{B@b{CIl}}}}{{}{{Mf{c}}}On}{c{{Mf{ec}}}BJjOn}{{{f{Bj}}{f{{Bh{c}}}}}ADd{}}{{{f{Bj}}{f{{Bh{{Cf{c}}}}}}}ADd{}}{{{f{Bj}}}{{A`{COn}}}}{c{{ALj{{l{e}}}}}{{Ij{}{{Ch{}}}}}Al}{c{{ALj{{l{An}}}}}{{Ij{}{{Ch{d}}}}}}{Eh{{BKd{{Mf{BKb}}}}}}{{{f{Bj}}c}D@`{}}{{{G`{c}}AFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{G`{c}}AFn}{{AKn{}{{AMn{e}}{AN`{c}}{ANb{g}}}}}{ANd{ANf{e}}}AD`{{Gd{}{{Ch{e}}}}IjIdIf}}`{{{f{Bj}}cFh}AId{}}{{FhcAFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{}CH`}{{BEbBEbcc}BEb{{B@b{BJ`}}}}{{{f{D@b}}{f{AAf}}ee}{{A`{AAfn}}}{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}}{{{f{Bj}}Fh}AIf}{{FhAFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{FhAFn}BEn}``{{BJ`c{BKd{{Mf{BKb}}}}D@d}BJ`{{Dj{Ab}{{Ad{{A`{{Cf{Ab}}n}}}}}}IdIf}}`{{BJ`c}BJ`{{B@b{BJ`}}}}{{BJ`FhFh}BJ`}{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}d{D@fOn}BJj}{{{f{BL`}}Fh}{{A`{Iln}}}}{{BKlBJ`d}BJ`}{{BKnBJ`d}BJ`}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fh}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}6{{{f{BCb}}{f{Bj}}}{{Cf{{f{Eh}}}}}}{{{f{AIh}}Fh}{{A`{Iln}}}}{{{f{ANn}}Fh}{{A`{Iln}}}}{{{f{AIh}}Fh}Il}{{{f{ANn}}Fh}Il}{{{f{BCb}}Fh}{{Cf{{Gj{{f{{BA`{B@n}}}}{f{Eh}}}}}}}}{{{f{DbBCb}}Fh}{{Cf{{Gj{{f{Db{BA`{B@n}}}}{f{DbEh}}}}}}}}{C@dBJ`}{{{f{BEb}}}BJh}{{{f{CHb}}}Eh}{{}Eh}{{{f{CAn}}GfCAh{Cf{{f{AM`}}}}}{{A`{CAfn}}}}00{{{f{CJj}}{f{BCb}}D@h{f{Ob}}{f{Ob}}}{{Cf{Ob}}}}{{{f{BKb}}{f{BCb}}D@h{f{{Bh{Ob}}}}}{{A`{Obn}}}}{{{f{BCb}}{f{Bj}}}{{Cf{Ob}}}}{{{f{AFn}}}{{f{{Bh{B@d}}}}}}{{{f{BLb}}}Fh}{{{f{BCb}}{f{Bj}}}{{Cf{{Gj{Fh{f{{BA`{B@n}}}}{f{Eh}}}}}}}}{{{f{{Bh{Bf}}}}}{{Cf{Fh}}}}{{{f{Db{BNl{c}}}}}{{A`{{f{{Mf{CHd}}}}n}}}BIn}{{{f{BL`}}}{{Cf{{Mj{Mh}}}}}}{{{f{Db{Mf{ce}}}}}{{Cf{{f{Dbc}}}}}OnBJj}{{{f{Db{Mf{ce}}}}}{{f{Dbc}}}OnBJj}{{{f{D@j}}}{{G`{{f{Bj}}}}}}{{{f{BCb}}}{{G`{{f{Bj}}}}}}{{{f{BCl}}}{{G`{{f{Bj}}}}}}{{{f{{CKn{}{{D@l{c}}}}}}}{{G`{{Gj{{f{Bj}}c}}}}}{AGbCLb}}{{{f{BCb}}}{{G`{{Gj{{f{Bj}}}}}}}}{{{f{BCl}}}{{G`{{Gj{{f{Bj}}}}}}}}{{{f{BL`}}Fh}{{Cf{{f{Jb}}}}}}{{{f{BL`}}FhFh}{{Cf{{f{Jb}}}}}}{{{f{BLh}}}{{Cf{{BKd{{Mf{BKb}}}}}}}}{{{f{CAn}}CAfCAhKf{Cf{{f{AM`}}}}CAl}{{A`{D@nn}}}}{{{f{CB`}}}{{Mf{CBb}}}}{{{f{Dbc}}}{{A`{DA`n}}}{BLfBInOn}}{{{f{CMj}}{f{BCb}}}{{A`{{Mf{BCb}}n}}}}{{cFh}{{G`{{Gj{FhFh}}}}}{{Cn{}{{Ch{Fh}}}}}}{{{f{BAb}}Fh}Il}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fh}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{BL`}}Fh}Il}{{{f{CI`}}}d}{{{f{C@l}}}d}`{{BEbe}BJf{{B@b{BJ`}}AD`}{{I`{{Bh{c}}}}}}{{{f{DAb}}{G`{Ab}}{f{BDb}}}{{A`{{Gj{Ab{G`{Ab}}Bn}}n}}}}{{BEbBJ`cBDb}BJf{{I`{{Bh{BJ`}}}}}}2{{BFbBFb{f{{Bh{Gf}}}}CAhKf{Cf{AM`}}}{{A`{{G`{{A@j{In}}}}n}}}}{{CAn{f{{Bh{Gf}}}}CAhKf{f{{Cf{Ef}}}}ddCAl}{{Gj{{G`{{A@j{In}}}}{G`{Gf}}{G`{Gf}}}}}}{{{f{BGd}}dd}{{A`{Bnn}}}}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}{{BJ`c}BJ`{{B@b{BJ`}}}}{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}d{D@fOn}BJj}21`{{{f{BL`}}}d}{{{f{BDb}}{f{Dbc}}}bADf}{{{f{BEd}}{f{Dbc}}}bADf}{{{f{BFb}}{f{Dbc}}}bADf}{{{f{CAh}}{f{Dbc}}}bADf}{{{f{CAj}}{f{Dbc}}}bADf}{{{f{CAl}}{f{Dbc}}}bADf}{{{f{CB`}}{f{Dbc}}}bADf}{{{f{CBb}}{f{Dbc}}}bADf}{{{f{CBd}}{f{Dbc}}}bADf}{{{f{CBf}}{f{Dbc}}}bADf}{{{f{CBh}}{f{Dbc}}}bADf}{{{f{BId}}{f{Dbc}}}bADf}{{{f{CBj}}{f{Dbc}}}bADf}{{{f{CBl}}{f{Dbc}}}bADf}{{{f{CBn}}{f{Dbc}}}bADf}{{{f{CC`}}{f{Dbc}}}bADf}{{{f{CCb}}{f{Dbc}}}bADf}{{{f{CCd}}{f{Dbc}}}bADf}{{{f{CCf}}{f{Dbc}}}bADf}{{{f{CCh}}{f{Dbc}}}bADf}{{{f{CCj}}{f{Dbc}}}bADf}{{{f{CCl}}{f{Dbc}}}bADf}{{{f{CCn}}{f{Dbc}}}bADf}{{{f{CD`}}{f{Dbc}}}bADf}{{{f{CDb}}{f{Dbc}}}bADf}{{{f{CDd}}{f{Dbc}}}bADf}{{{f{CDf}}{f{Dbc}}}bADf}{{{f{CDh}}{f{Dbc}}}bADf}{{{f{CDj}}{f{Dbc}}}bADf}{{{f{CDl}}{f{Dbc}}}bADf}{{{f{CDn}}{f{Dbc}}}bADf}{{{f{CE`}}{f{Dbc}}}bADf}{{{f{CEb}}{f{Dbc}}}bADf}{{{f{CEd}}{f{Dbc}}}bADf}{{{f{CEf}}{f{Dbc}}}bADf}{{{f{BMf}}{f{Dbc}}}bADf}{{{f{BJ`}}{f{Dbc}}}bADf}{{{f{CFb}}{f{Dbc}}}bADf}{{{f{BOh}}{f{Dbc}}}bADf}{{{f{CFd}}{f{Dbc}}}bADf}{{{f{CFf}}{f{Dbc}}}bADf}{{{f{CFh}}{f{Dbc}}}bADf}{{{f{CFj}}{f{Dbc}}}bADf}{{{f{CFl}}{f{Dbc}}}bADf}{{{f{CFn}}{f{Dbc}}}bADf}{{{f{BKh}}{f{Dbc}}}bADf}{{{f{CGd}}{f{Dbc}}}bADf}{{{f{CGf}}{f{Dbc}}}bADf}{{{f{CGh}}{f{Dbc}}}bADf}{{{f{CGj}}{f{Dbc}}}bADf}{{{f{CGl}}{f{Dbc}}}bADf}{{{f{CGn}}{f{Dbc}}}bADf}{{{f{CH`}}{f{Dbc}}}bADf}{{{f{CHb}}{f{Dbc}}}bADf}{{{f{{Mf{ce}}}}{f{Dbg}}}b{DAdOn}BJjADf}{{{f{CHf}}{f{Dbc}}}bADf}{{{f{CHh}}{f{Dbc}}}bADf}{{{f{BEj}}{f{Dbc}}}bADf}{{{f{BCb}}{f{Dbc}}}bADf}{{{f{B@d}}{f{Dbc}}}bADf}{{{f{Oh}}{f{Dbc}}}bADf}{{{f{CHn}}{f{Dbc}}}bADf}{{{f{DAf}}{f{Ab}}CCdd}{{A`{{Gj{{Gj{{G`{In}}{G`{In}}}}d}}n}}}}{{{f{DAf}}{f{Ab}}CCdd}{{A`{{Gj{{ALf{In}}{ALf{In}}}}n}}}}{{BJf{Cf{Fh}}}BEb}{{BKnBJ`}BJ`}{{BJ`{Cf{Fh}}}BJ`}{{{f{BMn}}}{{A`{{l{Bd}}n}}}}{{{f{BMn}}}{{l{Bd}}}}``{{{f{{Bh{{f{{l{Bd}}}}}}}}{f{Bj}}d}{{A`{{l{Bd}}n}}}}{{{f{DAh}}}{{l{Nd}}}}{{{f{CJd}}}{{l{Nd}}}}{{{f{C@h}}}{{A`{{l{Nd}}n}}}}`{{{f{CJf}}}{{l{Kd}}}}`{{BJlCC`}BJl}`{{{f{AAh}}}In}`{{{f{{Kb{KhKd}}}}{f{{l{Bd}}}}CHn{Fl{Gf}{{Ad{ALn}}}}{Fl{ALn}{{Ad{Gf}}}}{f{AM`}}{f{AM`}}}{{A`{{l{Kd}}n}}}}{{{f{{Kb{KhKd}}}}{Cf{{f{Bj}}}}{Fl{Gf}{{Ad{ALn}}}}{Fl{ALn}{{Ad{Gf}}}}{f{AM`}}{f{AM`}}}{{A`{{l{Kd}}n}}}}{BJ`BJ`}{{{f{ALn}}}d}{{{BNb{c}}d}{{BNb{c}}}BNf}````0`{{}b}{cb{AD`BJj}}`{cBJ`{{I`{{Bh{Gf}}}}}}``{{{f{D@j}}{f{Bj}}}{{Cf{Fh}}}}{{{f{BCb}}{f{Bj}}}{{Cf{Fh}}}}{{{f{BCl}}{f{Bj}}}{{Cf{Fh}}}}{{{f{{Bh{In}}}}}{{`{{Cn{}{{Ch{Fh}}}}}}}}{{{f{DA`}}Bf{Cf{Fh}}d{Cf{{f{BCb}}}}FhFh{Cf{{f{CBf}}}}{Cf{Bf}}Bf{Cf{{f{CBh}}}}dd{f{Db{Cf{Fh}}}}d}{{A`{{Gj{BCbFhFh}}n}}}}{{{CMh{c}}{Cf{{DAj{Fh}}}}}{{CMh{c}}}BIn}{{{CIj{c}}{Cf{{DAj{Fh}}}}}{{CIj{c}}}BIn}``{{}Fh}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{DbABl}}}{{Cl{Cj}}}}{{BEbBEbcc}BEb{{B@b{BJ`}}}}{{{f{D@b}}{f{AAf}}ee}{{A`{AAfn}}}{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}}{{{f{DbA@`}}}{{f{DbJh}}}}`{{{f{DbBJh}}BJh}b}{{{f{DbBCb}}Fh{BA`{B@n}}Eh}{{A`{{Cf{Eh}}n}}}}{{BJ`BJ`GfEh}BJ`}{{BJ`BJ`BJ`}BJ`}``{{{f{Ab}}CDb}Ab}{{BJ`CDb}BJ`}`{{{f{Ab}}{f{Ab}}d}{{A`{Abn}}}}{{BJ`BJ`}BJ`}{{BJhBJh}BJh}{{{f{BJh}}BJh}d}{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BEn{{Gj{{G`{B@d}}{G`{{Cl{Cj}}}}{Cf{Hj}}}}}}{{{ALj{c}}}c{}}{{{Mf{ce}}}{{Cf{c}}}{}BJj}33{{{f{BJ`}}}}{BJh}{{{f{BEn}}}}{BCb}{DAlBKn}{BKnBKn}{{{Mf{ce}}}{}OnBJj}{{{Mf{ce}}}{{Gj{e}}}OnBJj}{{CB`c}{{BIj{c}}}BIn}{{BAdEh}{{A`{Lnn}}}}{BCdAb}{{{Mf{BL`}}}Ab}{{Ln{f{Bj}}}Ab}{CHdDAn}{BEh{{G`{c}}}{}}{c{{G`{{BA`{B@n}}}}}{}}{c{{G`{Ef}}}{}}{{{f{BJh}}}d}{{{f{BOh}}}d}{{{f{CC`}}}d}{{{f{Ab}}{f{Ab}}{f{Ab}}CDd}{{A`{{l{An}}n}}}}{{BJ`ccCDd}BJ`{{B@b{BJ`}}}}{cd{{I`{CLj}}}}{{{f{{Bh{Bf}}}}}d}{{{f{BFb}}{Cf{{f{Bj}}}}}d}7{{{f{CH`}}}d}{{{f{BL`}}}d}{{{f{BCb}}}d}{{{f{BCl}}}d}{{{f{BNn}}}d}{BJ`BJ`}{{{f{Ab}}}{{A`{{l{An}}n}}}}{{{f{AIj}}}{{A`{{l{An}}n}}}}27{{{f{BFb}}}d}{{{f{Ab}}{f{Ab}}}{{A`{{l{An}}n}}}}{{BJ`c}BJ`{{B@b{BJ`}}}}54{{{f{AIl}}}{{A`{{l{An}}n}}}}6{{{f{CJb}}}{{l{An}}}}{{{f{CJd}}}{{l{An}}}}{{{f{C@h}}}{{A`{{l{An}}n}}}}999{{{f{BL`}}}{{l{An}}}}::0{{{f{A@`}}}d};{{{f{AAh}}}d}`{{{f{Ab}}}d}{{{f{{Mf{AFd}}}}}d}{{}d}{{{f{CL`}}Ej}{{A`{dn}}}}{{{f{c}}}d{}}0{{{f{CCd}}{f{CC`}}}{{A`{bn}}}}4?{{{f{CJb}}}{{l{Jn}}}}{{{f{CJd}}}{{l{Jn}}}}{{{f{C@h}}}{{A`{{l{Jn}}n}}}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{AGf{cgAGd}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{BJh}}}{{AF`{BJh}}}}{{{f{BEn}}}{{AGf{{G`{{Cl{CLd}}}}DB`AGd}}}}{{{f{BCb}}}{{`{{Cn{}{{Ch{{Gj{{f{{BA`{B@n}}}}{f{Eh}}}}}}}}}}}}{{{f{BCb}}}{{`{L`}}}}{{{f{DbBCb}}}{{`{L`}}}}1{{{f{BJh}}}{{AFb{BJh}}}}2{{BKlBJ`d}BJ`}{{BEbBEbccBId}BEb{{I`{{Bh{BJ`}}}}}}{{BKnBJ`d}BJ`}{{{f{D@b}}{f{AAf}}eeBId}{{A`{AAfn}}}{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}}{{{f{DBb}}{f{AAf}}{f{Bj}}{f{Bj}}eeCCn{Cf{Il}}}{{A`{AAfn}}}{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}}{BEbBJl}{{{f{DBd}}{f{Bj}}d}{{A`{{l{Bd}}n}}}}{{{f{DBd}}{f{{l{Bd}}}}d}{{A`{{l{Bd}}n}}}}{{BJld}BJl}`{CLlBJ`}{DBfBJ`}{{{f{CHd}}}{{f{{Cf{{G`{DBh}}}}}}}}``{{}BJ`}{BEbBEb}{BKnBJ`}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{BJ`BJ`}{DBjBEb}4{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}d{D@fOn}BJj}`{{BEbBEbcc}BEb{{B@b{BJ`}}}}{{{f{D@b}}{f{AAf}}ee}{{A`{AAfn}}}{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}}{{BJlc}BJl{{I`{{Bh{BJ`}}}}}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}c}e{}{}{}}{{c{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}<{{{f{BL`}}}Fh};9{{{f{BEn}}}Fh}{{{f{BCb}}}Fh}{{{f{BCl}}}Fh}{{BEbIn}BEb}{{{f{BL`}}Fh}Ab}{{{f{BNn}}}d}`{BJ`BKn}{cBJ`DBl}{DBlBJ`}{BFbBJ`}{DBnBJ`}{CHbBJ`}{{BJ`c}BJ`{{B@b{BJ`}}}}0``{{CA`d}CA`}{{{CIj{c}}d}{{CIj{c}}}BIn}```{BJ`BJ`}{{{f{DBd}}}{{l{El}}}}0{{{f{DBd}}{f{{Bh{Ab}}}}}{{A`{{l{Ah}}n}}}}{{{f{DBd}}GfCKd}{{A`{{l{Ah}}n}}}}{{{f{DBd}}Gfd}{{A`{Abn}}}}{{{f{DBd}}{f{{l{Bd}}}}d}{{A`{{l{Bd}}n}}}}4{{{f{DBd}}}{{A`{Abn}}}}{{{f{DBd}}}Ab}01{{{f{DBd}}}{{A`{{l{El}}n}}}}{{{f{DBd}}}{{l{Ah}}}}{{{f{DBd}}{f{Ab}}}{{A`{{l{Ah}}n}}}}{{{f{DBd}}GfFh}{{l{Ah}}}}{{{f{DBd}}Ej}{{A`{{l{Ah}}n}}}}{{{f{DBd}}Bf}Ab}7{{{f{DBd}}}{{A`{{l{Ah}}n}}}}01{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}{{BJ`c}BJ`{{B@b{BJ`}}}}{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}d{D@fOn}BJj}21``````{{{f{AMd}}{f{AMd}}}{{A`{{Gj{AMdAMd}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Gj{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Db{Mf{ce}}}}}{{f{Dbc}}}{DC`On}{BJjAD`}}{{BEbcBJh{Cf{{Mf{CMj}}}}{Cf{{f{Bj}}}}}BEb{{Dj{AAf}{{Ad{{A`{AAfn}}}}}}IdIf}}{{DBfc}BJ`{{Dj{{f{Bj}}}{{Ad{{A`{Efn}}}}}}IdIf}}{{BJ`c{BKd{{Mf{BKb}}}}}BJ`{{Dj{Ab}{{Ad{{A`{{Cf{Ab}}n}}}}}}IdIf}}{{BJ`BJ`c{BKd{{Mf{BKb}}}}}BJ`{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IdIf}}{{BJ`{f{Dbc}}{f{Db}}}{{A`{BJ`n}}}{{Af{BJ`{f{Db}}}{{Ad{{A`{BJ`n}}}}}}}}{{{f{BLb}}{Cf{{f{Ef}}}}}{{A`{Obn}}}}{{{f{BLb}}c}{{A`{Obn}}}{{AAj{{f{Eh}}}{{Ad{Eh}}}}}}{c{{BKd{{Mf{BKb}}}}}{{Dj{{f{Eh}}}{{Ad{{A`{Ehn}}}}}}IdIf}}{c{{BKd{{Mf{BKb}}}}}{{Dj{{f{{Bh{{f{Eh}}}}}}}{{Ad{{A`{Ehn}}}}}}IdIf}}{{BJ`c}BJ`{{Af{BJ`}{{Ad{BJ`}}}}}}{c{{BKd{{Mf{BKb}}}}}{{Dj{{f{Ob}}}{{Ad{{A`{Obn}}}}}}IdIf}}{{DBf{Mf{Dj}}}BJ`}{c{{BKd{{Mf{BKb}}}}}{{Dj{{f{{Bh{Ob}}}}}{{Ad{{A`{Obn}}}}}}IdIf}}:{{ce{BKd{{Mf{BKb}}}}}BJ`{{Dj{{f{Db{Bh{Ab}}}}}{{Ad{{A`{{Cf{Ab}}n}}}}}}IdIf}{{I`{{Bh{BJ`}}}}}}{{BJ`c{f{{Bh{BJ`}}}}{BKd{{Mf{BKb}}}}}BJ`{{Dj{{f{Db{Bh{Ab}}}}}{{Ad{{A`{{Cf{Ab}}n}}}}}}IdIf}}{{BJ`BKh{f{{Bh{BJ`}}}}dd}BJ`}2{{{f{BLb}}}{{A`{Obn}}}}{{CB`c}CB`{{Dj{CBb}{{Ad{CBb}}}}}}1111{CHbCHb}{{{Cf{{f{{Bh{Fh}}}}}}{f{BCl}}{Cf{{f{{Bh{Ab}}}}}}{Cf{{f{DCb}}}}}AAf}{{{Cf{{f{{Bh{Ef}}}}}}{f{BCb}}{Cf{{f{{Bh{Ab}}}}}}d}{{Cf{{G`{Fh}}}}}}{{{f{Bj}}}BJ`}{BKlBJ`}{BEbBEb}{BKnBJ`}{{{f{AIn}}}{{Cf{c}}}{}}{BJ`BJ`}{{{f{DCd}}}Ln}{{{f{BL`}}}{{A`{Lnn}}}}``{{{f{{Bh{Bf}}}}{f{Db{G`{Bf}}}}}{{A`{{f{{Bh{Bf}}}}n}}}}865{{{f{AIn}}}{{Cf{M`}}}}4{{{f{BL`}}}{{Cf{M`}}}}:987{{{f{AJ`}}}{{Cf{c}}}{}}61{{{f{DCf}}}Ln}5``{{{CMb{c}}{Cf{CIl}}}{{CMb{c}}}BIn}{{{f{DbBCb}}BCb}b}{{{f{Eh}}{f{Eh}}}{{A`{Ehn}}}}{{{f{DbBCb}}{f{BCb}}}b}````{{{f{CJf}}}{{l{Kd}}}}`{{{f{C@h}}}{{A`{{l{Jn}}n}}}}1`{{{f{Bj}}}BJ`}{BKlBJ`}{BEbBEb}{BKnBJ`}{{{f{AIn}}}{{Cf{c}}}{}}{BJ`BJ`}{{{f{AIn}}}{{Cf{{Gj{cc}}}}}{}}```{{{f{DCd}}}Ln}{{{f{BL`}}}{{A`{Lnn}}}}``{{{f{DAh}}}{{l{Nd}}}}{{{f{CJd}}}{{l{Nd}}}}{{{f{C@h}}}{{A`{{l{Nd}}n}}}}`=```6{{{f{CJb}}}{{l{Nd}}}}21`{{{f{BFb}}}Gf}{{{f{BFb}}}d}{{{BJb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BFbGf}BFb}{{BJ`BJ`}}{{{f{BJd}}{f{Ab}}}{{A`{Abn}}}}``{{{f{BL`}}}Fh}{{{f{CI`}}}{{Cf{Fh}}}}{{{f{C@l}}}{{Cf{Fh}}}}{{{f{CA`}}}{{Cf{Fh}}}}`````{{{BNb{c}}Fh}{{BNb{c}}}BNf}`{BKlBJ`}{BKnBJ`}{{{f{AHf}}}{{A`{Fhn}}}}{BJ`BJ`}{{{f{BL`}}}{{A`{Fhn}}}}{{{f{BL`}}}{{f{Bj}}}}{BJ`DBf}````33`{{{f{DAh}}}{{l{Jn}}}}{{{f{CJd}}}{{l{Jn}}}}{{{f{C@h}}}{{A`{{l{Jn}}n}}}}{{{f{CJf}}}{{l{Kd}}}}{{{f{BFb}}}Gf}`{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}d{CLbOn}BJj}{{{f{CCd}}}d}{BFb}{BJ`}{{{f{Ab}}}{{A`{Abn}}}}0{{{f{BFb}}}d}{{DChFh}{{Cf{Fh}}}}{{BJ`c}BJ`{{B@b{BJ`}}}}0{{{f{BLb}}}{{A`{Obn}}}}{{}c{}}{cCLnBLf}{cCM`BNf}2{{{f{Bj}}c}DCj{}}{c{{ALj{c}}}{}}{BEbBJl}{c{{BIj{c}}}BIn}{cC@l{{I`{CLj}}}}{cCA`{{I`{CLj}}}}{c{{BNb{c}}}BNf}{{{f{{Bh{Ob}}}}}BLb}{c{{CMb{c}}}BIn}{c{{BLd{c}}}BLf}{c{{CMd{c}}}BNf}{{}CJh}{c{{BNh{c}}}BNf}{GfBFb}{c{{CMf{c}}}BNf}{c{{CMh{c}}}BIn}{{BFbBFbBFb}CAn}{c{{CIj{c}}}BIn}{{DCl{Mf{CHd}}{Mf{BCl}}Fh{Cf{{G`{Fh}}}}{Cf{{Mf{BIl}}}}{Cf{DCb}}Fhd{Cf{{G`{Ab}}}}{Cf{{Gj{{Mf{Bj}}{Mf{Bj}}}}}}CDh}{{A`{BNnn}}}}{c{{BNl{c}}}BIn}{c{{BO`{c}}}{BNfBNf}}{CC`BId}{c{{BKd{c}}}{}}{{BJ`BJ`BJ`}CG`}{{}CGb}{{{f{Bj}}{G`{Ob}}{BKd{{Mf{BKb}}}}c}BOlBLh}{c{{Mf{c}}}{}}{{AFn{G`{{Cl{Cj}}}}{Cf{Hj}}}BEn}{{EhIl}Ln}{{}BCb}{{cAFnd}B@d{{B@b{Ef}}}}{e{{Mf{c}}}{}{{AAj{{f{{CKf{c}}}}}{{Ad{c}}}}}}{AFnBEn}{{{f{AJb}}FhFh}{{l{c}}}Dh}{{{f{BL`}}FhFh}Ab}{{{f{Bj}}}CBf}{{ce}{{Mf{ce}}}{}BJj}{{{f{BCb}}Fh{BA`{B@n}}Eh}{{A`{BCbn}}}}{{Gf{f{Bj}}}{{A`{Abn}}}}{EfCBf}{{AFnFh}BEn}{{{Mf{{Bh{CIl}}}}}C@l}{{{Mf{{Bh{CIl}}}}}CA`}{BfCBf}{{}{{Mf{{BMl{c}}}}}{}}{c{{Mf{{BMl{e}}c}}}BJj{}}{Fh{{Mf{{Bh{{BMl{c}}}}}}}{}}{{Fhc}{{Mf{{Bh{{BMl{e}}}}c}}}BJj{}}3210{{{f{DbDCn}}}Cf}{{{f{DbD@n}}}Cf}{{{f{DbBOd}}Fh}{{A`{{Cf{{G`{AAf}}}}n}}}}{{{f{DbBN`}}Fh}{{A`{{Cf{{G`{AAf}}}}n}}}}{{{f{DbBNn}}Fh}{{A`{{Cf{{G`{AAf}}}}n}}}}{{{f{BJ`}}{f{Db{BFf{{f{BJ`}}}}}}}b}{{BJ`{f{Db{BFf{BJ`}}}}}b}{BJ`BJ`}0{BJhBJh}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}0{GfBJ`}`{{}AAh}{{}A@`}`{{{f{BL`}}}Fh}{BEbBEb}7`````{{{f{Db{BNl{c}}}}}{{A`{Fhn}}}BIn}````{{{f{AHn}}}{{A`{{Gh{Gf}}n}}}}{{BJlc}BJl{{I`{{Bh{BJ`}}}}}}`{{BEb{f{Db{BHn{BHl}}}}{f{Db{BHn{BI`}}}}}{{A`{BHjn}}}}`{{BJ`c}BJ`{{B@b{BJ`}}}}{{{f{CJb}}}{{l{Nn}}}}{{{f{CJd}}}{{l{Nn}}}}{{{f{C@h}}}{{A`{{l{Nn}}n}}}}{{{f{C@h}}}{{A`{{l{Jn}}n}}}}{{CElc}BJ`{{B@b{BJ`}}}}{{CF`c}BJ`{{B@b{BJ`}}}}`{{BJ`e}BJ`{{B@b{BJ`}}AD`}{{I`{{Bh{c}}}}}}{{BJ`e{Cf{{Gj{eEj}}}}CGl}BJ`{{B@b{BJ`}}AD`}{{I`{{Bh{c}}}}}}{{{f{DbBCb}}{f{BCb}}}{{A`{bn}}}}```{{{f{Bj}}}BFb}{{{f{Bj}}{f{{Bh{{f{Bj}}}}}}{f{Bj}}}{{Kb{K`Jn}}}}{{{f{Bj}}{f{{Bh{{f{Bj}}}}}}{f{Bj}}}{{Kb{LbKd}}}}{{{f{Bj}}{f{{Bh{{f{Bj}}}}}}{f{Bj}}Kf}{{Kb{KhKd}}}}``{{{f{BFb}}{f{BFb}}}{{Cf{BAh}}}}{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}{{Cf{BAh}}}{D@fOn}BJj}`{{{f{CI`}}}{{f{{Bh{CIl}}}}}}{{{f{C@l}}}{{f{{Bh{CIl}}}}}}{{{f{CA`}}}{{f{{Bh{CIl}}}}}}``{{}BJ`}{c{{DD`{{Mf{c}}}}}{}}{{ce}{{DD`{{Mf{ce}}}}}{}BJj}````{{BJ`c}BJ`{{B@b{BJ`}}}}`{{DBf{f{Bj}}}BJ`}0{{{f{AAf}}{f{AAf}}d}{{A`{{Gj{{AAb{{G`{In}}{G`{A@`}}}}{AAb{{G`{AAh}}{G`{A@`}}}}}}n}}}}`{{{f{DCd}}}Ln}{BJ`BJ`}{BEb{{A`{{Gj{AAfAAf}}n}}}}`{{{f{BEn}}}BEn}{{{f{{Mf{c}}}}{f{DbDDb}}}b{ALbOn}}{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}dOnBJj}{{{f{Bj}}BJ`Oh}BJ`}{{BEbBJ`Oh}BEb}{{{f{AJ`}}M`Oh}{{A`{{Cf{c}}n}}}{}}{{BJ`BJ`Oh}BJ`}{{{f{DCf}}M`Oh}{{A`{Lnn}}}}{{{f{BL`}}M`Oh}{{A`{Lnn}}}}{{{f{CJb}}}{{l{Nd}}}}{{{f{CJd}}}{{l{Nd}}}}{{{f{C@h}}}{{A`{{l{Nd}}n}}}}{{{f{Dbc}}e}{{A`{{f{Dbg}}BBl}}}{}CLh{}}````{{{f{DDd}}CDl{Cf{Jh}}}Ab}{{BJ`CDl{Cf{Jh}}}BJ`}{{{f{Db{Mf{AFd}}}}{f{Db{Bh{Bf}}}}}{{A`{FhBBl}}}}{{{f{Db{Mf{AFd}}}}DDf}{{A`{bBBl}}}}{{{BNl{c}}CDh}{{BNl{c}}}BIn}{{{f{Db{Mf{AFd}}}}{f{Db{G`{Bf}}}}}{{A`{FhBBl}}}}{{{f{Db{Mf{AFd}}}}{f{DbEf}}}{{A`{FhBBl}}}}{{{f{Dbc}}}{{A`{eBBl}}}{}DDh}{{{f{Db{Mf{AFd}}}}{f{Db{Bh{DDj}}}}}{{A`{FhBBl}}}}{{{f{CI`}}}d}{{{f{BL`}}}Ab}{{{f{C@l}}}d}{{{f{CA`}}}d}````{{ce}BJ`{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IdIfAD`}{{I`{{Bh{BJ`}}}}}}{{{f{AJd}}}Ab}0{{{BJb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BJ`BJ`}}{{{f{BJd}}{f{Ab}}}{{A`{Abn}}}}{{{f{DbBJh}}BJh}b}{{{f{DbBCb}}{f{Bj}}}{{Cf{Eh}}}}{{{f{DbBL`}}{f{Bj}}}b}{{BEbei}BEb{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}{{I`{Bj}}}{{Hf{}{{Ch{g}}}}}}{{{f{DbBCb}}{f{Bj}}{BA`{B@n}}}{{Cf{{BA`{B@n}}}}}}{{CLl{G`{Ef}}}BJ`}{{cBJ`}BJ`{{B@b{BJ`}}}}{{{f{Ab}}{f{{l{El}}}}}{{A`{{l{Ah}}n}}}}{{BJ`c}BJ`{{B@b{BJ`}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{BMn}}{f{Bj}}{f{Bj}}}{{A`{{l{Bd}}n}}}}{{BJ`cc}BJ`{{B@b{BJ`}}}}1{{{f{BLb}}{Cf{Eh}}}{{A`{Obn}}}}{{{f{BMn}}{f{Bj}}{f{Bj}}Fh}{{A`{{l{Bd}}n}}}}3{{{f{Ab}}{f{Ab}}{f{Ab}}{f{Ab}}{Cf{Eh}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}{Cf{Eh}}}{{A`{Abn}}}}{{BJ`cc{Cf{c}}{Cf{Eh}}}BJ`{{B@b{BJ`}}}}{{{f{{Kb{KhKd}}}}{Cf{{f{Bj}}}}{f{{l{Bd}}}}CHn}{{A`{{Kb{KhKd}}n}}}}{{{f{DbBCb}}Fh}b}{{BJ`{f{{Bh{Gf}}}}CGn}BJ`}{{{f{CLj}}}CIl}`{{{f{AJf}}}AJf}{{{f{BL`}}}Ab}{BKlBJ`}{BEbBEb}{BKnBJ`}{BJ`BJ`}`{{BJlc}BJl{{I`{{Bh{BJ`}}}}}}{{{f{DAb}}{G`{Ab}}{f{BEd}}}{{A`{{Gj{Ab{G`{Ab}}Bn}}n}}}}{{BEbBJ`cBEd}BJf{{I`{{Bh{BJ`}}}}}}{{BJ`BEd}BJ`}{{{f{AJh}}{f{Dj}}Oj}{{A`{Abn}}}}{{BJ`{Mf{Dj}}{BKd{{Mf{BKb}}}}Oj}BJ`}{{{f{BL`}}{f{Dj}}Oj}{{A`{Abn}}}}{{BJ`Fhc}BJ`{{Af{{f{Db{l{Ed}}}}}{{Ad{{Cf{M`}}}}}}IdIfDl}}{{{f{DDl}}Oj}{{A`{Abn}}}}{{BJ`Oj}BJ`}{{{f{DDl}}{f{Ab}}CAd}{{A`{Abn}}}}{{BJ`BJ`CAd}BJ`}32102032103{{BJ`OhM`Oj}BJ`}2{{BJ`BJ`OhM`CAd}BJ`}543254325432{{{f{DDn}}{f{{l{Bd}}}}{Cf{{f{AM`}}}}}{{A`{DDnn}}}}{{{f{C@f}}In}{{A`{Abn}}}}{{BJ`In}BJ`}{{{f{CAn}}Gf{Cf{{f{AM`}}}}}{{A`{Gfn}}}}0{{{f{C@f}}N`}{{A`{Abn}}}}{{BJ`N`}BJ`}2``{{{f{CI`}}}{{Cf{{f{DCb}}}}}}{{{f{C@l}}}{{Cf{{f{DCb}}}}}}{{{f{CA`}}}{{Cf{{f{DCb}}}}}}``````{{{f{DBd}}{l{Ah}}}{{l{Ah}}}}{{}{{BKd{{Mf{BKb}}}}}}{{BJ`BJ`dd{Cf{Jh}}}BJ`}0`{{{f{BJn}}DE`}{{A`{AAfn}}}}{{cC@n}{{A`{BEbn}}}{{I`{CLj}}}}{{{Mf{{Bh{CIl}}}}C@n}{{A`{BEbn}}}}{{cCAb}{{A`{BEbn}}}{{I`{CLj}}}}{{{Mf{{Bh{CIl}}}}CAb}{{A`{BEbn}}}}{{DEb{f{{Bh{In}}}}e}{{A`{Abn}}}Dl{{Hf{}{{Ch{{Cf{c}}}}}}}}{{{f{AJj}}c{Cf{e}}}{{A`{AJjn}}}{{Hf{}{{Ch{In}}}}}{}}{{{f{AJj}}ci}{{A`{AJjn}}}{{Hf{}{{Ch{In}}}}}{}{}{{Dj{{Cf{e}}}{{Ad{{Cf{g}}}}}}}}{{{f{DbBEb}}}{{A`{{Mf{BCb}}n}}}}{{{f{Db{CMb{c}}}}}{{A`{{Mf{BCl}}n}}}BIn}{{{f{Db{BLd{c}}}}}{{A`{BCbn}}}BLf}{{{f{BNn}}}{{f{{Mf{BCl}}}}}}{{{f{Db{BNl{c}}}}}{{A`{{Mf{BCl}}n}}}BIn}{{{f{BJn}}{Cf{Fh}}}{{A`{{Mf{BCb}}n}}}}{{{f{CHd}}}{{f{DEd}}}}``````{{{f{DbBEb}}{f{Db{BHn{BHl}}}}{f{Db{BHn{BI`}}}}}{{A`{{Mf{BCb}}n}}}}`{{{f{DAh}}}{{l{Nd}}}}{{{f{CJd}}}{{l{Nd}}}}{{{f{C@h}}}{{A`{{l{Nd}}n}}}}`{{{f{CJf}}}{{l{Kd}}}}`{{{f{Db{Mf{AFd}}}}DEf}{{A`{JhBBl}}}}{{BEbc}BEb{{I`{{Bh{BJ`}}}}}}0````{{{f{AJj}}{f{{l{An}}}}{Cf{c}}}{{A`{AJjn}}}{}}{{{f{DbBJh}}BJhd}b}{{{f{BEb}}{BHn{BHl}}{BHn{BI`}}}b}{{{f{DbBCb}}{f{Bj}}Eh}{{Cf{Eh}}}}{{{f{DbBCb}}FhEh}{{Cf{Eh}}}}{{{BNl{c}}d}{{BNl{c}}}BIn}{{{BO`{c}}d}{{BO`{c}}}BNf}{{{CMb{c}}d}{{CMb{c}}}BIn}{{{BLd{c}}d}{{BLd{c}}}BLf}{{{CMh{c}}d}{{CMh{c}}}BIn}4{{CLnd}CLn}{{BJ`Lf}BJ`}{{{f{DbBEn}}{Cf{Hj}}}b}{{{f{AJl}}Gf}{{l{c}}}Dh}{{{f{BL`}}Gf}Ab}{{BKlBJ`}BJ`}{{BEbc}BEb{{B@b{BJ`}}}}{{BKnBJ`}BJ`}{{BJ`BJ`}BJ`}{{{f{AJn}}Gfc}{{l{e}}}{}Dh}{{BEbce}BEb{{B@b{BJ`}}}{{B@b{BJ`}}}}{{BJ`ce}BJ`{{B@b{BJ`}}}{{B@b{BJ`}}}}{{{f{DbBCb}}{f{Bj}}}{{Cf{Eh}}}}{{{f{DbBCb}}Fh}{{Cf{{Gj{{BA`{B@n}}Eh}}}}}}{{{f{BId}}}d}{BJ`BJ`}{{{f{DbABn}}}b}{{{f{DbBL`}}}b}{{BJ`{Cf{Jh}}}BJ`}{{BEbcCBj}{{A`{bn}}}{{I`{CLj}}}}{{BEbcCCh}{{A`{bn}}}{{I`{CLj}}}}{{BEbcCD`}{{A`{bn}}}{{I`{CLj}}}}{{BEbcCDn}{{A`{bn}}}{{I`{CLj}}}}`````{{{f{BL`}}GfFh}Ab}{{BEbGfIn}BEb}{{BKnBJ`BJ`}BJ`}>{{{f{DbBEn}}FhFh}b}0`{{{f{AK`}}FhFh}AK`}{{{f{c}}FhFh}e{}{}}1022{{BEnFhFh}BEn}0`{{{f{AHd}}d}{{l{c}}}Dh}{{BKlEj}BJ`}{{BEbcF`}BEb{{BEh{{BA`{B@n}}}}}}{{BKnEj}BJ`}{{BJ`Ej}BJ`}{{BJ`eF`}BJ`{{B@b{BJ`}}AD`}{{I`{{Bh{c}}}}}}{{BEbcF`}BEb{{I`{{Bh{BJ`}}}}}}{{{f{AHd}}Ej}{{l{c}}}Dh}{{{f{BL`}}Ej}{{A`{Abn}}}}{{{f{{Mf{c}}}}}{{Cf{{f{ALb}}}}}{ALbOn}}{{{f{BMn}}{f{{l{Bd}}}}}{{l{Ah}}}}{{{f{BL`}}Gf}{{Gj{AbAb}}}}{{{f{BEn}}Fh}{{Gj{{Cl{Cj}}{Cl{Cj}}}}}}0{{{f{BMn}}{f{{l{Bd}}}}Fh}{{A`{{l{j}}n}}}}0{{{f{{l{Bd}}}}{f{{l{Bd}}}}e}{{l{Ah}}}{{Cn{}{{Ch{{f{Bj}}}}}}}{{Dj{{f{Bj}}{f{Bj}}}{{Ad{c}}}}}}4{{{f{{l{Bd}}}}{f{{l{Bd}}}}Fhed}{{A`{{l{j}}n}}}{{Cn{}{{Ch{{f{Bj}}}}}}}{{Dj{{f{Bj}}{f{Bj}}}{{Ad{c}}}}}}2{BJ`BJ`}`{{{f{CIh}}{f{{Bh{Bf}}}}}{{l{An}}}}{{{f{CIh}}{f{{l{Aj}}}}}{{l{An}}}}`{{BKlBf}BJ`}{{BEbBf}BEb}{{BKnBf}BJ`}{{{f{AKb}}Bf}{{Cf{M`}}}}{{BJ`Bf}BJ`}{{{f{BL`}}Bf}{{Cf{M`}}}}{{{f{DEh}}Bf}Ln}{{{f{BL`}}Bf}{{A`{Lnn}}}}{{InIn}A@`}{BJ`DEj}{{{f{BMn}}{f{Ab}}}{{A`{{l{Bd}}n}}}}{{{f{{l{Bd}}}}{f{Bj}}d}{{l{Bd}}}}{{{f{BMn}}}{{l{El}}}}0{{{f{BMn}}}{{l{Bd}}}}{{{f{BMn}}{f{Ab}}{f{Ab}}}{{A`{{l{Bd}}n}}}}4``{{{f{C@h}}{f{Bj}}}{{A`{Abn}}}}`{{BJ`Eh}BJ`}`{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Bd}}}}707070{{{f{BMn}}{f{{l{Bd}}}}}{{l{Bd}}}}10{{{f{{Mf{ce}}}}}FhOnBJj}{BJ`CLl}{{{BJb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BJ`BJ`}}{{BJhBJh}BJh}{{{f{DbBJh}}BJh}b}{{{f{BJd}}{f{Ab}}}{{A`{Abn}}}}{{BJlc}BJl{{I`{Bj}}}}{{DBf{f{Bj}}}BJ`}{{{f{BId}}}{{f{Bj}}}}`1{{{f{Bj}}}BJ`}{BKlBJ`}{BEbBEb}{BKnBJ`}{{{f{AIn}}}{{Cf{c}}}{}}{BJ`BJ`}{{{f{DCd}}}Ln}{{{f{BL`}}}{{A`{Lnn}}}}{{}{{BKd{{Mf{BKb}}}}}}>{{{f{Dbc}}i}{{A`{gBBl}}}{}{}{}{{AAj{{f{Dbe}}}{{Ad{g}}}}}}{{BEbIn}BEb}{{BJf{Cf{Fh}}}BEb}{{BKnBJ`}BJ`}{{BJ`{Cf{Fh}}}BJ`}{{{f{AKd}}{f{c}}}{{A`{AKdn}}}On}{{{f{BL`}}{f{{l{El}}}}}{{A`{Abn}}}}{{{f{DEl}}{f{{Bh{A@`}}}}Lf}DEl}{{{f{DEl}}{f{{Bh{A@`}}}}}DEl}{{{f{BL`}}{f{{Bh{In}}}}}{{A`{Abn}}}}{{{f{BL`}}{f{{Bh{In}}}}}Ab}{{{f{AKf}}{f{c}}}AKfOn}{{{f{BL`}}{f{{l{El}}}}}Ab}{{{f{DbBEn}}}{{Cf{Hj}}}}{{BJ`BJ`BJ`}BJ`}{{CEjc}CEl{{B@b{BJ`}}}}{{CEnc}CF`{{B@b{BJ`}}}}`{{BJ`BJ`BFbCAh}BJ`}```{{{f{C@h}}Kf}{{A`{{l{Kd}}n}}}}{BEb{{A`{DEnn}}}}{CEh{{A`{DEnn}}}}1{{{f{CHb}}}{{Cf{Il}}}}{{BKnFh}BJ`}{{{f{BCb}}AOf}BCl}{{{f{BEn}}}{{Cl{Cj}}}}{{{f{AKh}}}{{G`{{f{{Bh{Bf}}}}}}}}{{{f{BEb}}d}{{A`{Efn}}}}{{{f{DF`}}{Cf{{f{Bj}}}}d}{{A`{AAfn}}}}{{{f{BIh}}{Cf{{f{Bj}}}}d}{{A`{AAfn}}}}{{{f{BJ`}}{f{BCb}}D@h}{{A`{Obn}}}}{{{f{BMn}}{f{{l{El}}}}d}{{A`{{l{Kd}}n}}}}{BKlBJ`}{{{f{BMn}}}{{l{Bd}}}}{DBfBJ`}{{{f{AAh}}}{{Cf{In}}}}{{{f{c}}}e{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BJ`BJ`}{{{f{BLb}}}{{A`{Obn}}}}{{{f{C@h}}{f{Bj}}}{{A`{Abn}}}}{{{f{c}}}Ef{}}000000000000{{{f{DbBCb}}{f{BCb}}}{{A`{dn}}}}`887{{{f{CCh}}c}{{BNh{c}}}BNf}{{{f{CDn}}c}{{BO`{c}}}BNf}{{{f{DbBJh}}BJh}b}``{{BEbIncF`}BEb{{I`{{Bh{BJ`}}}}}}{{{f{BEn}}{f{BEn}}}Hj}{{{f{BEn}}f}Hj}10{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}g{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}c}g{}{}{}}{{c{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}g{}{}{}}{{{f{DFb}}{Cf{{f{AM`}}}}{f{{l{Bd}}}}}{{A`{DFbn}}}}{{{f{BFb}}Gf{Cf{{f{AM`}}}}ceg}{{A`{Gfn}}}{{Dj{Gf}{{Ad{Gf}}}}}{{Dj{Gf}{{Ad{ALn}}}}}{{Dj{ALn}{{Ad{Gf}}}}}}{{{f{BFb}}Gf{Cf{{f{AM`}}}}}{{A`{Gfn}}}}{{{f{CAn}}Gf{Cf{{f{AM`}}}}}{{A`{Gfn}}}}10`10{g{{A`{AMhe}}}{}{}{{Hf{}{{Ch{{A`{ce}}}}}}}}{e{{A`{BEnc}}}{}{{Hf{}{{Ch{{A`{{Cf{b}}c}}}}}}}}{e{{A`{BEnc}}}{}{{Hf{}{{Ch{{A`{bc}}}}}}}}2{{AFng}{{A`{AMje}}}{}{}{{Hf{}{{Ch{{A`{ce}}}}}}}}0{{AFne}{{A`{BEnc}}}{}{{Hf{}{{Ch{{A`{bc}}}}}}}}{{AFne}{{A`{BEnc}}}{}{{Hf{}{{Ch{{A`{{Cf{b}}c}}}}}}}}{AOl{{A`{eg}}}{}{{AMh{c}}AKn}{}}0{{AOlAFn}{{A`{eg}}}{}{{AMj{c}}AKn}{}}0{{ADh{f{Bj}}}{{A`{{l{c}}e}}}Dh{}}{{ADj{f{{l{c}}}}}{{A`{{l{c}}e}}}Dh{}}10{{ADj{f{Bj}}Eh}{{A`{{l{c}}e}}}Dh{}}0{c{{A`{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Il{{A`{CHbn}}}}{{{Mf{{Bh{c}}e}}}{{A`{{Mf{{A@j{c}}e}}}}}{}BJj}2222222222222222{DAn{{A`{CHdBBd}}}}{{{f{BCb}}{f{Bj}}}{{A`{{f{Eh}}n}}}}{{{f{BCb}}Fh}{{A`{{Gj{{f{{BA`{B@n}}}}{f{Eh}}}}n}}}}{{{f{BCb}}{f{Bj}}}{{A`{Obn}}}}{{{f{BCb}}{f{Bj}}}{{A`{{Gj{Fh{f{{BA`{B@n}}}}{f{Eh}}}}n}}}}{{{f{DbBCb}}{f{Bj}}}{{A`{{f{DbEh}}n}}}}{{{f{D@j}}{f{Bj}}}{{A`{Fhn}}}}99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999{{CB`{Cf{CIl}}}{{A`{{BIj{AFd}}n}}}}{{{f{BLb}}c}{{A`{Obn}}}{{AAj{{f{Eh}}}{{Ad{{A`{Ehn}}}}}}}}{{{f{BLb}}c}{{A`{Obn}}}{{AAj{{f{{Bh{{f{Eh}}}}}}}{{Ad{{A`{Ehn}}}}}}}}{{BJ`c}{{A`{BJ`n}}}{{Af{BJ`}{{Ad{{A`{BJ`n}}}}}}}}{{{f{BLb}}c}{{A`{Obn}}}{{AAj{{f{Ob}}}{{Ad{{A`{Obn}}}}}}}}{{DChFh}{{A`{Fhn}}}}{Bf{{A`{CEbn}}}}{In{{A`{CEdn}}}}{N`{{A`{CEfn}}}}{c{{A`{{Mf{c}}DFd}}}{}}{{AFn{G`{{Cl{Cj}}}}{Cf{Hj}}}{{A`{BEnn}}}}{{ce}{{A`{{Mf{ce}}DFd}}}{}BJj}{{}{{A`{{Mf{{BMl{c}}}}DFd}}}{}}{c{{A`{{Mf{{BMl{e}}c}}DFd}}}BJj{}}10`{c{{A`{{DD`{{Mf{c}}}}DFd}}}{}}{{ce}{{A`{{DD`{{Mf{ce}}}}DFd}}}{}BJj}{{{f{BCl}}{f{{Bh{Fh}}}}}{{A`{BCln}}}}{{{f{BLh}}{f{Db{G`{Bf}}}}}{{A`{bn}}}}{{{Mf{ce}}}{{A`{c{Mf{ce}}}}}{}BJj}{{{f{c}}}AAd{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{Bj}}}}`{{BJhBJh}BJh}{{{f{AHf}}}{{A`{AHfn}}}}{BKlBJ`}{{BEb{Cf{{G`{Ef}}}}BCh}BEb}{BKnBJ`}{BJ`BJ`}{{{f{BL`}}}{{A`{Abn}}}}4321{{BEbe}BEb{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}}{{BEbBF`}BEb}{{{Mf{{AFj{c}}}}}{{A`{cb}}}Id}{{{Mf{ce}}}cAD`BJj}{{{f{DbLn}}Il}b}{{{f{DbCB`}}{f{DFf}}}b}7{{{f{DFh}}c{f{Bj}}BFb}{{A`{AAfn}}}{{BEh{Ef}}}}0{{{BNl{c}}d}{{BNl{c}}}BIn}```{{BJlCCd}BJl}`{{{f{BEn}}}{{Cf{{f{Hj}}}}}}0{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fh}cAD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{Ln}}}{{f{Il}}}}{{{f{CL`}}ddEfd}{{A`{AAfn}}}}{{BJ`ddEfd}BJ`}`3{{{f{BEn}}}{{f{{Bh{{Cl{Cj}}}}}}}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}gAD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{BEn}}}DB`}{{BKlBf}BJ`}{{BEbBf}BEb}{{BKnBf}BJ`}{{{f{AKb}}Bf}{{Cf{M`}}}}{{BJ`Bf}BJ`}{{{f{BL`}}Bf}{{Cf{M`}}}}{{{f{DEh}}Bf}Ln}{{{f{BL`}}Bf}{{A`{Lnn}}}}`{{{f{DFj}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{DFj}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}`{{{f{{Mf{{AFj{c}}}}}}g}{{A`{eb}}}Id{}{{AAj{{f{c}}}{{Ad{e}}}}}}{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Mf{ce}}}}}FhOnBJj}{{{f{CJb}}}{{l{Nd}}}}{{{f{CJd}}}{{l{Nd}}}}{{{f{C@h}}}{{A`{{l{Nd}}n}}}}210{{{f{CAl}}}{{Cf{In}}}}{{{f{BFb}}}Gf}`{{{f{BFb}}}d}`{cCEj{{B@b{BJ`}}}}{{CElc}CEn{{B@b{BJ`}}}}{{CF`c}CEn{{B@b{BJ`}}}}```{{BJlBEb}BJl}{{CG`BJ`}CG`}{{CA`{Cf{{DAj{Fh}}}}}CA`}{{{BNb{c}}{DAj{Fh}}}{{BNb{c}}}BNf}{{{CMh{c}}{DAj{Fh}}}{{CMh{c}}}BIn}{{C@ld}C@l}{Fhc{}}0{FhBCb}{{{CIj{c}}{Cf{{DAj{Fh}}}}}{{CIj{c}}}BIn}{{CB`Fh}CB`}{{C@l{Cf{CIb}}}C@l}{{CA`{Cf{CIb}}}CA`}{{BEbd}BEb}{{BIdCBl}BId}{{BEbBJ`}BEb}{{{f{DbBCb}}{BA`{B@n}}Eh}{{Cf{Eh}}}}{{BEbc}BEb{{I`{{Bh{BJ`}}}}}}{{{CMb{c}}{Cf{{G`{Ef}}}}}{{CMb{c}}}BIn}{{{BLd{c}}{Cf{{G`{Ef}}}}}{{BLd{c}}}BLf}{{{BNl{c}}{Cf{{G`{Ef}}}}}{{BNl{c}}}BIn}{{CB`{Cf{{Mf{{Bh{Ef}}}}}}}CB`}`4{{C@l{Cf{{f{Bj}}}}}C@l}{{CBb{Cf{c}}}CBb{{B@b{CBf}}}}{{{CMd{c}}AOf}{{CMd{c}}}{}}{{{BNh{c}}AOf}{{BNh{c}}}BNf}{{{CMd{c}}{Cf{CCl}}}{{CMd{c}}}{}}{{CJh{Cf{CCl}}}CJh}{{{BNh{c}}{Cf{CCl}}}{{BNh{c}}}BNf}{{{BO`{c}}CE`}{{BO`{c}}}BNf}{{BEbc}BEb{{I`{{Bh{BEb}}}}}}{{{BO`{c}}{Cf{Fh}}}{{BO`{c}}}BNf}{{{BNb{c}}{Cf{Ef}}}{{BNb{c}}}BNf}0{{CG`BJ`}CG`}{{CGbBJ`}CGb}{{C@ld}C@l}{{CBbd}CBb}{{{f{BLb}}Eh}{{A`{Obn}}}}{{C@l{Cf{{Mf{BCb}}}}}C@l}{{CB`{Cf{{Mf{{G`{Eh}}}}}}}CB`}{{C@lCBd}C@l}{{CBbCBd}CBb}{{C@lBf}C@l}{{CBbBf}CBb}{{CJhCIl}CJh}{{CLl{G`{BJ`}}}{{A`{BJ`n}}}}{{{BNb{c}}{Cf{Fh}}}{{BNb{c}}}BNf}{{{BNb{c}}{Cf{d}}}{{BNb{c}}}BNf}{{CGbBJ`BJ`BJ`}CGb}=={{CB`d}CB`}{{{CMb{c}}{Cf{{G`{Ab}}}}}{{CMb{c}}}BIn}{{{BNl{c}}{Cf{{G`{Ab}}}}}{{BNl{c}}}BIn}{{CG`BJ`BJ`BJ`}CG`}4{{CG`BJ`}CG`}{{CGbBJ`}CGb}{{C@ld}C@l}{{CA`d}CA`}{{{CMh{c}}d}{{CMh{c}}}BIn}{{{CIj{c}}d}{{CIj{c}}}BIn}9{{{CMb{c}}{Cf{{Gj{{Mf{Bj}}{Mf{Bj}}}}}}}{{CMb{c}}}BIn}{{{BNl{c}}{Cf{{Gj{{Mf{Bj}}{Mf{Bj}}}}}}}{{BNl{c}}}BIn}{{C@l{Cf{{Mf{Bj}}}}}C@l}{{CA`{Cf{{Mf{Bj}}}}}CA`}{{C@l{Cf{Fh}}}C@l}{{CA`{Cf{{DAj{Fh}}}}}CA`}{{CB`{Cf{Fh}}}CB`}{{{CMf{c}}DFl}{{CMf{c}}}BNf}{{{CMh{c}}DFl}{{CMh{c}}}BIn}{{{BNb{c}}Ef}{{BNb{c}}}BNf}={{CB`d}CB`}{{B@d{DFn{EfEf}}}B@d}{{BCl{DFn{EfEf}}}BCl}{{CG`BJ`}CG`}{{CGbBJ`}CGb}010{{C@ld}C@l}{{CBbd}CBb}3{{CI`c}CI`{{B@b{{Cf{Fh}}}}}}{{C@lc}C@l{{B@b{{Cf{Fh}}}}}}>{{CA`c}CA`{{B@b{{Cf{Fh}}}}}}{{CA`{Cf{Fh}}}CA`}{{{CMb{c}}{Cf{Fh}}}{{CMb{c}}}BIn}{{{BLd{c}}{Cf{Fh}}}{{BLd{c}}}BLf}{{{CIj{c}}{Cf{Fh}}}{{CIj{c}}}BIn}{{{BNl{c}}{Cf{Fh}}}{{BNl{c}}}BIn}{{CB`{Cf{Fh}}}CB`}20;{{BEbd}BEb}{{{BNb{c}}Ef}{{BNb{c}}}BNf}{{C@l{Cf{CBh}}}C@l}{{CBb{Cf{CBh}}}CBb}{{BEbBJh}BEb}{{CB`CBb}CB`}{{{CIj{c}}{Cf{e}}}{{CIj{c}}}BIn{{B@b{CIl}}}}{{CB`{Cf{c}}}CB`{{B@b{CIl}}}}{{CI`{Mf{{Bh{CIl}}}}}CI`}{{C@l{Mf{{Bh{CIl}}}}}C@l}{{CA`{Mf{{Bh{CIl}}}}}CA`}{{{CIj{c}}{Cf{{Mf{BIl}}}}}{{CIj{c}}}BIn}{{{BNl{c}}{Cf{{Mf{BIl}}}}}{{BNl{c}}}BIn}<{{{CMb{c}}{Cf{{G`{Fh}}}}}{{CMb{c}}}BIn}{{{BLd{c}}{Cf{{G`{Fh}}}}}{{BLd{c}}}BLf}{{{CMh{c}}{Cf{{G`{Ef}}}}}{{CMh{c}}}BIn}{{{CIj{c}}{Cf{{Mf{{Bh{Ef}}}}}}}{{CIj{c}}}BIn}{{{BNl{c}}{Cf{{G`{Fh}}}}}{{BNl{c}}}BIn}{{CB`{Cf{{Mf{{G`{Fh}}}}}}}CB`}{{BEbd}BEb}{{C@l{Cf{Bf}}}C@l}{{{BNb{c}}Bf}{{BNb{c}}}BNf}{{CBb{Cf{Bf}}}CBb}{{{BNb{c}}CCb}{{BNb{c}}}BNf}{{C@ld}C@l}{{CB`d}CB`}{{CI`d}CI`}2{{CA`d}CA`}{{{CIj{c}}d}{{CIj{c}}}BIn}39{{{BO`{c}}{Cf{Fh}}}{{BO`{c}}}BNf}{{CI`c}CI`{{B@b{{Cf{DCb}}}}}}{{BEb{f{Bj}}{Cf{In}}}BEb}{{C@l{Cf{DCb}}}C@l}{{C@lc}C@l{{B@b{{Cf{DCb}}}}}}{{CA`{Cf{DCb}}}CA`}{{CA`c}CA`{{B@b{{Cf{DCb}}}}}}{{{CMb{c}}{Cf{DCb}}}{{CMb{c}}}BIn}{{{BLd{c}}{Cf{DCb}}}{{BLd{c}}}BLf}{{{CIj{c}}{Cf{{f{DbDCb}}}}}{{CIj{c}}}BIn}{{{BNl{c}}{Cf{DCb}}}{{BNl{c}}}BIn}{{CB`{Cf{DCb}}}CB`}{{{f{BLb}}}{{A`{Obn}}}}{{CB`Fh}CB`}{{C@l{Cf{{Mf{BCb}}}}}C@l}{{CA`{Cf{{Mf{BCb}}}}}CA`}{{{CMh{c}}{Mf{BCb}}}{{CMh{c}}}BIn}{{{CIj{c}}{Mf{BCb}}}{{CIj{c}}}BIn}{{CB`{Cf{{Mf{BCb}}}}}CB`}{{C@lc}{{A`{C@ln}}}{{Dj{BCb}{{Ad{{A`{BCbn}}}}}}}}4{{{CMh{c}}{f{BCb}}}{{CMh{c}}}BIn}{{{CIj{c}}{f{BCb}}}{{CIj{c}}}BIn}3{{CG`BJ`}CG`}{{CGbBJ`}CGb}{{C@lBf}C@l}{{{BNb{c}}Bf}{{BNb{c}}}BNf}{{CBbBf}CBb}{{BEbd}BEb}{{C@lFh}C@l}?0?1{{{BO`{c}}CH`}{{BO`{c}}}BNf}2{{BId{Cf{Ef}}}BId}{{{BNb{c}}{Cf{Ef}}}{{BNb{c}}}BNf}{{CG`Kf}CG`}{{CG`{Cf{Ef}}}CG`}{{C@ld}C@l}{{CBbd}CBb}108{{BEn{Cf{Hj}}}BEn}{{{f{BEn}}{Cf{Hj}}}{{Cl{Cj}}}}{{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}{Cf{Hj}}}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}2?{{CG`BJ`}CG`}{BEbBEb}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}c}e{}{}{}}10{{c{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}210213210210{{{f{Db{Mf{AFd}}}}{f{{Bh{Bf}}}}}{{A`{FhBBl}}}}{{{f{CCh}}AAfc}{{A`{bn}}}BNf}{{{f{CDn}}AAfc}{{A`{bn}}}BNf}{{{f{DbAAf}}{f{CLj}}{f{{Bh{c}}}}{f{e}}Fh}{{A`{bn}}}{{I`{Bj}}}{DG`IdIf}}{{{f{Dbc}}e}{{A`{FhBBl}}}{}DDh}{{{f{Db{Mf{AFd}}}}{f{{Bh{DGb}}}}}{{A`{FhBBl}}}}{{BJ`c}BJ`{{B@b{BJ`}}}}{{{f{CJb}}}{{l{Jn}}}}{{{f{CJd}}}{{l{Jn}}}}{{{f{C@h}}}{{A`{{l{Jn}}n}}}}``{{{f{AKj}}{f{{l{An}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dh}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{BFd}}c}Ab{{Dj{{Gj{In{f{{BFf{In}}}}}}}{{Ad{Cf}}}}IdIf}}{{{f{BFd}}c}Ab{{Dj{{Gj{In{f{{BFf{In}}}}}}}{{Ad{}}}}IdIf}}{{{f{{Bh{{A@j{In}}}}}}c}Ab{{Dj{{A@j{In}}}{{Ad{Cf}}}}IdIf}}{{{f{{Bh{{A@j{In}}}}}}c}Ab{{Dj{{A@j{In}}}{{Ad{}}}}IdIf}}{{{f{{Bh{c}}}}e{Cf{{Mf{AG`}}}}}{{ALf{c}}}{BGlBGn}{{Cn{}{{Ch{{Gj{InIn}}}}}}Ij}}{{{f{{Bh{c}}}}{f{Hj}}e{Cf{{Mf{AG`}}}}}{{ALf{c}}}{BGlBGn}{{Cn{}{{Ch{{Gj{InIn}}}}}}Ij}}{{{f{{l{c}}}}InIn}{{l{c}}}Dh}{{{f{{G`{{A@j{In}}}}}}{f{{Bh{{Cl{Cj}}}}}}}d}{{{f{BH`}}{f{Bn}}}Ab}{{BHbBHb}BHb}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DhDh{{Dj{ff}{{Ad{}}}}}{{Dj{f}{{Ad{}}}}}{{Dj{f}{{Ad{}}}}}Dh}{{{l{c}}{l{e}}gik}{{l{m}}}DhDh{{Dj{}{{Ad{}}}}}{{Dj{}{{Ad{}}}}}{{Dj{}{{Ad{}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DhDhCj{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hd{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DhDh{{AKl{CfCf}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}g}bDhDh{{Af{CfCf}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{Bd}}}DhDh{{Af{{f{DbEf}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DhDh{}{{Af{}{{Ad{g}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bj}}}{{l{k}}}DhDh{CjAKn}{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hd{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bj}}}{{l{k}}}DhDhCj{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hd{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DhDhCj{{Af{}{{Ad{g}}}}}{{Dh{}{{Hd{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DhDh{{Af{ff}{{Ad{{Cl{Cj}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DhDh{{Af{ff}{{Ad{{Cl{Cj}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DhDh{}{}{{Af{CfCf}{{Ad{{A`{{Cf{g}}i}}}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DhDhDh{{AL`{CfCfCf}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DhDhCjALb{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dh{}{{Hd{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Bj}}}{{A`{{l{m}}i}}}DhDhCjALb{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dh{}{{Hd{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DhDhALb{{Af{ff}{{Ad{{A`{{Cl{Cj}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DhDhDh{}{}{{Af{CfCfCf}{{Ad{{A`{{Cf{i}}k}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{}{}{{Af{Cf}{{Ad{{A`{{Cf{e}}g}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{CjAKn}ALb{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dh{}{{Hd{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dh{{ALd{Cf}}}Dh}{{{f{{l{c}}}}e}{{l{g}}}DhALdDh}{{{f{{l{c}}}}g}{{l{i}}}DhCj{{Af{f}{{Ad{e}}}}}{{Dh{}{{Hd{e}}}}}}{{{l{c}}g}{{l{i}}}DhCj{{Af{}{{Ad{e}}}}}{{Dh{}{{Hd{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dh{CjAKn}{{Af{f}{{Ad{e}}}}}{{Dh{}{{Hd{e}}}}}}0``{{{f{DGd}}}{{l{El}}}}0{{{f{DGd}}{f{{l{Kd}}}}d}{{A`{Abn}}}}{{{f{DGd}}{f{{l{Bd}}}}d}{{A`{Abn}}}}{{{f{DGd}}}Ab}{{{f{DGd}}}{{A`{Abn}}}}1{{{f{DGd}}}{{A`{{l{El}}n}}}}{{{f{DGd}}}{{l{C`}}}}{{{f{DGd}}{f{Ab}}}{{A`{Abn}}}}{{{f{DGd}}Ej}{{A`{{l{C`}}n}}}}{{{f{DGd}}Bf}{{A`{Abn}}}}5{{{f{DGd}}}{{A`{{l{Ah}}n}}}}01{{{f{DGf}}}{{f{{l{C`}}}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{BOfBJ`}BJ`}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}3{cc{}}{{}Fh}{ce{}{}}6{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}2`````````````````````{{{f{DbDGh}}{f{{Bh{Bf}}}}ddd}{{A`{bn}}}}{{{f{DbDGh}}d}b}<<<<;;;;999988887777{{{f{DGh}}}Eh}77776666{{{f{{Bh{Fh}}}}Fh{f{BCb}}{Cf{Bf}}CBdd}{{A`{{G`{DGh}}n}}}}6666{DGh{{A`{Abn}}}}6666666655557777```````````{{{f{BLl}}{Cf{{f{Bj}}}}d}{{A`{{Kb{K`Jn}}n}}}}{{{f{BLl}}{Cf{{f{Bj}}}}}{{A`{{Kb{K`Jn}}n}}}}{{{f{BLl}}{Cf{{f{Bj}}}}Kfdd{Cf{{f{Ef}}}}{f{{l{Bd}}}}}{{A`{{Kb{KhKd}}n}}}}{{{f{BLl}}{Cf{{f{Bj}}}}Kfd{Cf{{f{Ef}}}}{f{{l{Bd}}}}}{{A`{{Kb{KhKd}}n}}}}{{{f{BLl}}{Cf{{f{Bj}}}}d}{{A`{{Kb{LbKd}}n}}}}`{{{f{CJb}}}{{l{Nd}}}}{{{f{CJd}}}{{l{Nd}}}}{{{f{CJf}}}{{l{Kd}}}}`{{{f{DAh}}}{{l{Nd}}}}21{{{f{CJb}}}{{l{An}}}}{{{f{CJd}}}{{l{An}}}}{{{f{CJb}}}{{l{Jn}}}}{{{f{CJd}}}{{l{Jn}}}}55`46576{{{f{DAh}}}{{l{Jn}}}}16{{{f{CJb}}}{{l{Nn}}}}{{{f{CJd}}}{{l{Nn}}}}{{{f{Bj}}{f{{Bh{{f{Bj}}}}}}{f{Bj}}}{{Kb{K`Jn}}}}{{{f{Bj}}{f{{Bh{{f{Bj}}}}}}{f{Bj}}}{{Kb{LbKd}}}}{{{f{Bj}}{f{{Bh{{f{Bj}}}}}}{f{Bj}}Kf}{{Kb{KhKd}}}}=<{{{f{DDl}}Oj}{{A`{Abn}}}}{{{f{DDl}}{f{Ab}}CAd}{{A`{Abn}}}}101010101010<>=`?>?>`98````````{{{f{c}}h}b{}}{{{f{BLl}}{Cf{{f{Bj}}}}d}{{A`{{Kb{K`Jn}}n}}}}{{{f{BLl}}{Cf{{f{Bj}}}}}{{A`{{Kb{K`Jn}}n}}}}{{{f{BLl}}{Cf{{f{Bj}}}}Kfdd{Cf{{f{Ef}}}}{f{{l{Bd}}}}}{{A`{{Kb{KhKd}}n}}}}{{{f{BLl}}{Cf{{f{Bj}}}}Kfd{Cf{{f{Ef}}}}{f{{l{Bd}}}}}{{A`{{Kb{KhKd}}n}}}}{{{f{DGj}}}{{f{{l{Bd}}}}}}{{{f{BLl}}{Cf{{f{Bj}}}}d}{{A`{{Kb{LbKd}}n}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{DGl}}}DGl}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}0{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}{{{f{DGl}}{f{DGl}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{DGl}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}{{{f{DGl}}{f{Dbc}}}bADf}`{{}Fh}{ce{}{}}{{{f{DGl}}{f{Bj}}}d}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}4````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{{DGn{c}}}}}{{DGn{c}}}{AD`Al}}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}{cc{}}{{{f{Bj}}}{{Cf{DGl}}}}{{}Fh}{ce{}{}}`{{{f{Db{DGn{c}}}}{f{Bj}}}CfAl}{{{f{DbDH`}}{f{{Bh{Bf}}}}{Cf{Kf}}}{{Cf{c}}}{}}{{{f{Db{DGn{Kd}}}}{f{{Bh{Bf}}}}{Cf{Kf}}}{{Cf{Gf}}}}{{{f{Db{DGn{Jn}}}}{f{{Bh{Bf}}}}{Cf{Kf}}}{{Cf{N`}}}}`{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}{{c{Cf{Kf}}}{{A`{{DHd{}{{DHb{e}}}}n}}}{}{}}{{DGl{Cf{Kf}}}{{A`{{DGn{Jn}}n}}}}{{DGl{Cf{Kf}}}{{A`{{DGn{Kd}}n}}}}3{{{f{c}}}AAd{}}:````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Dbc}}}{{f{Dbe}}}{}{}}0{{{f{CIb}}}CIb}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{}CIb}{Fh{{f{c}}}{}}0{Fh{{f{Dbc}}}{}}0{Fhb}0{{{f{CIb}}{f{CIb}}}d}{{{f{DHf}}{f{DHf}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CIb}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}0{{{f{Bj}}}{{A`{DHf}}}}{{{f{Bj}}g}{{A`{CIbn}}}{{I`{Bj}}}{{B@b{Ef}}}{{Hf{}{{Ch{{Gj{ce}}}}}}}}{{{f{CIb}}{f{Dbc}}}bADf}{{}Fh}0{ce{}{}}0``{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}000{{{f{c}}}AAd{}}033{{CIbFh}CIb}`````````{{{f{{Bh{Bf}}}}}d}```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eAMh{}{{Hf{}{{Ch{c}}}}}}0{{AFne}AMj{}{{Hf{}{{Ch{c}}}}}}0{{{f{AMl}}}{{f{Eh}}}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{Cf{{f{{Bh{c}}}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{AMd}}{f{AMd}}c}{{A`{AMdn}}}ANl}{{{f{ANn}}{f{Eh}}}{{A`{Abn}}}}{{{f{ANn}}{f{Eh}}Fd}{{A`{Abn}}}}`{AOle{}{{AMh{c}}AKn}}0{{AOlAFn}e{}{{AMj{c}}AKn}}0{{{ANh{Bj}}}Eh}{{{f{ANn}}}{{f{Eh}}}}`{{ANl{f{{l{El}}}}{f{{l{El}}}}}{{A`{{l{El}}n}}}}{{{G`{c}}AFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{G`{c}}AFn}{{AKn{}{{AMn{e}}{AN`{c}}{ANb{g}}}}}{ANd{ANf{e}}}AD`{{Gd{}{{Ch{e}}}}IjIdIf}}{{FhcAFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{FhAFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fh}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{ANn}}Fh}{{A`{Iln}}}}{{{f{ANn}}Fh}Il}{{}Eh}{{{f{BAb}}Fh}Il}4{{BAdEh}{{A`{Lnn}}}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{AGf{cgAGd}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{AMd}}{f{AMd}}}{{A`{{Gj{AMdAMd}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Gj{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Eh}}{f{Eh}}}{{A`{Ehn}}}}`{{}c{}}0{g{{A`{AMhe}}}{}{}{{Hf{}{{Ch{{A`{ce}}}}}}}}0{{AFng}{{A`{AMje}}}{}{}{{Hf{}{{Ch{{A`{ce}}}}}}}}0{AOl{{A`{eg}}}{}{{AMh{c}}AKn}{}}0{{AOlAFn}{{A`{eg}}}{}{{AMj{c}}AKn}{}}0{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fh}cAD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}0{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}gAD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{Fhc{}}0{{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}{Cf{Hj}}}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}```````````{{{f{AMd}}{f{AMd}}c}{{A`{AMdn}}}ANl}{{ANl{f{{l{El}}}}{f{{l{El}}}}}{{A`{{l{El}}n}}}}=<`````````{{}b}0{{}d}{{{f{{Kb{KhKd}}}}{f{{l{Bd}}}}CHn{Fl{Gf}{{Ad{ALn}}}}{Fl{ALn}{{Ad{Gf}}}}{f{AM`}}{f{AM`}}}{{A`{{l{Kd}}n}}}}{{{f{{Kb{KhKd}}}}{Cf{{f{Bj}}}}{Fl{Gf}{{Ad{ALn}}}}{Fl{ALn}{{Ad{Gf}}}}{f{AM`}}{f{AM`}}}{{A`{{l{Kd}}n}}}}{{{f{{Kb{KhKd}}}}{Cf{{f{Bj}}}}{f{{l{Bd}}}}CHn}{{A`{{Kb{KhKd}}n}}}}```{{c{Cf{Hj}}}COd{}}{{{COf{Gf}}{COf{Bf}}{Cf{Hj}}}COh}{{{COf{Gf}}{COf{Bf}}{Cf{Hj}}}COj}`{CKhBJ`}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{CKhKf}BJ`}3{{CKhBJ`Kf}BJ`}{{CKhEf}BJ`}555{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}8{cc{}}9{{}Fh}{ce{}{}};;;;;;;;;;{{CKh{Cf{Ef}}BJ`CHn}BJ`}{{CKhBJ`}BJ`}={{CKh{f{Bj}}}BJ`}>;0>>>>>>>1{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}5{CKhBJ`}0>0`{{{f{BHd}}{f{AAf}}{f{Bn}}}{{A`{Abn}}}}{{{f{BHd}}}{{A`{{f{Bj}}n}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{}DHh}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}{{DHh{Cf{{f{AFn}}}}}{{A`{AEfn}}}}{cc{}}{{}Fh}{ce{}{}}{{{f{DHh}}}d}{{FhFh}DHh}{{{f{DbDHh}}{Cl{Cj}}}b}{{{f{DbDHh}}}b}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}6`{{{f{{l{c}}}}}FhAl}0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{DHj}}}DHj}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}{{{f{DHj}}{f{DHj}}}d}{{{f{DHj}}{f{DbH`}}}{{A`{bHb}}}}0{cc{}}{{{f{DHj}}{f{Dbc}}}bADf}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Ef{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}4````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{DHl}}}DHl}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}{{{f{DHl}}{f{DHl}}}d}{{{f{DHl}}{f{DbH`}}}{{A`{bHb}}}}0{cc{}}{{{f{DHl}}{f{Dbc}}}bADf}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Ef{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}4{{LfLf}Lf}{{{f{{l{El}}}}In}{{A`{bn}}}}{{{f{{ALf{In}}}}In}{{A`{bn}}}}```{{{f{Ab}}CDb}Ab}{{{f{Ab}}{f{Ab}}d}{{A`{Abn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}CfLd{{Dj{}{{Ad{}}}}Dl}}{{{f{Ab}}{f{Bn}}}Ab}0{{{f{Ab}}{f{Bj}}}Ab}0`{{{f{c}}h}b{}}{{{f{DHn}}}{{f{AG`}}}}{{{f{DbDHn}}}{{Cl{Cj}}}}{{{f{DbDHn}}}{{f{DbAG`}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{DHn}}}DHn}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{{f{DHn}}}{{f{AFn}}}}{{}DHn}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}{{{f{DbDHn}}Fh}b}{{{f{DHn}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}{{}Fh}{ce{}{}}{{{f{DHn}}}Fh}{FhDHn}{{{f{DbDHn}}}b}70{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}{{{f{DHn}}}{{Cf{{f{DI`}}}}}}7`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{DFf}}}DFf}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{}DFf}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}{{{f{{BCj{EhA@d}}}}}Eh}{{{f{DFf}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}{{{f{DFf}}}Fh}{{{f{DFf}}}{{Mf{BCb}}}}{{{f{Bj}}dd}Eh}{{{f{DA`}}Bf{Cf{Fh}}d{Cf{{f{BCb}}}}FhFh{Cf{{f{CBf}}}}{Cf{Bf}}Bf{Cf{{f{CBh}}}}dd{f{Db{Cf{Fh}}}}d}{{A`{{Gj{BCbFhFh}}n}}}}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}{{{f{DA`}}{f{CB`}}}{{A`{DFfn}}}}1{{{f{c}}}AAd{}}4{{DFf{Mf{BCb}}}DFf}````{{{f{{l{c}}}}eALhd}{{G`{In}}}Dh{{Cn{}{{Ch{Cf}}}}}}{{{f{{Bh{f}}}}cIne}{{G`{In}}}{{Cn{}{{Ch{Cf}}}}}{{Dj{fFhf}{{Ad{d}}}}}}``{{{f{DIb}}}{{f{Ab}}}}{{{f{C@h}}}{{A`{{l{Jn}}n}}}}{{{f{C@h}}}{{A`{{l{Nd}}n}}}}0{{{f{C@h}}}{{A`{{l{An}}n}}}}22112{{{f{C@h}}}{{A`{{l{Nn}}n}}}}322{{{f{C@h}}{f{Bj}}}{{A`{Abn}}}}{{{f{C@h}}Kf}{{A`{{l{Kd}}n}}}}1445`{{{f{AK`}}FhFh}AK`}0`{{Fh{f{Db{G`{d}}}}}b}```11{{Fh{f{{Bh{Ab}}}}{f{DbF`}}}{{A`{{ALj{{l{El}}}}n}}}}{{{f{{Bh{Ab}}}}{f{{Bh{d}}}}{f{{Bh{d}}}}}{{A`{ALln}}}}{{{f{{Bh{Ab}}}}{f{{Bh{d}}}}{f{{Bh{d}}}}}{{A`{{Jd{Gf}}n}}}}{{{f{Bj}}{f{{Bh{Ab}}}}{f{{Bh{d}}}}{f{{Bh{d}}}}}{{A`{{l{En}}n}}}}{{{f{Bj}}{f{{Bh{Ab}}}}}{{A`{{l{En}}n}}}}{{{f{Ab}}}{{A`{{Cl{Cj}}n}}}}{{{f{{Bh{Ab}}}}}{{A`{ALln}}}}{{{f{{Bh{Ab}}}}}{{A`{{l{En}}n}}}}0```````````99```{{{f{BMj}}}{{f{{l{Bd}}}}}}{{{f{BMn}}}{{A`{{l{Bd}}n}}}}{{{f{BMn}}}{{l{Bd}}}}{{{f{BMn}}{f{{l{Bd}}}}}{{l{Bd}}}}{{{f{BMn}}{f{Bj}}d}{{A`{{l{An}}n}}}}{{{f{BMn}}{f{{l{Bd}}}}dd}{{A`{{l{An}}n}}}}{{{f{BMn}}{f{Bj}}}{{A`{{l{An}}n}}}}{{{f{BMn}}{f{Bj}}d}{{A`{{l{El}}n}}}}{{{f{BMn}}{f{{l{Bd}}}}d}{{A`{{l{El}}n}}}}{{{f{BMn}}{f{{l{Bd}}}}Fh}{{A`{{l{Bd}}n}}}}{{{f{BMn}}{f{Bj}}}{{A`{{l{Ah}}n}}}}{{{f{BMn}}{f{{l{Bd}}}}}{{A`{{l{Ah}}n}}}}{{{f{BMn}}{f{Bj}}{f{Eh}}}{{A`{Abn}}}}5{{{f{BMn}}{f{{l{Bd}}}}dd}{{A`{{l{El}}n}}}}{{{f{BMn}}{f{Bj}}}{{A`{{l{El}}n}}}}=<{{{f{{Bh{{f{{l{Bd}}}}}}}}{f{Bj}}d}{{A`{{l{Bd}}n}}}}{{{f{BMn}}{f{Bj}}{f{Bj}}}{{A`{{l{Bd}}n}}}}0{{{f{BMn}}{f{Bj}}{f{Bj}}Fh}{{A`{{l{Bd}}n}}}}1{{{f{BMn}}{f{{l{Bd}}}}}{{l{Ah}}}}{{{f{BMn}}{f{{l{Bd}}}}Fh}{{A`{{l{j}}n}}}}0{{{f{{l{Bd}}}}{f{{l{Bd}}}}e}{{l{Ah}}}{{Cn{}{{Ch{{f{Bj}}}}}}}{{Dj{{f{Bj}}{f{Bj}}}{{Ad{c}}}}}}2{{{f{{l{Bd}}}}{f{{l{Bd}}}}Fhed}{{A`{{l{j}}n}}}{{Cn{}{{Ch{{f{Bj}}}}}}}{{Dj{{f{Bj}}{f{Bj}}}{{Ad{c}}}}}}2{{{f{BMn}}{f{Ab}}}{{A`{{l{Bd}}n}}}}{{{f{{l{Bd}}}}{f{Bj}}d}{{l{Bd}}}}{{{f{BMn}}}{{l{El}}}}0{{{f{BMn}}}{{l{Bd}}}}{{{f{BMn}}{f{Ab}}{f{Ab}}}{{A`{{l{Bd}}n}}}}4{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Bd}}}}505050{{{f{BMn}}{f{{l{Bd}}}}}{{l{Bd}}}}10{{{f{BMn}}{f{{l{El}}}}d}{{A`{{l{Kd}}n}}}}444````````{{eFhFh}{{DId{Gf}}}{{I`{Bj}}}{{Cn{}{{Ch{c}}}}}}{{eFhFh}{{Jd{Gf}}}{{I`{{Bh{Bf}}}}}{{Cn{}{{Ch{c}}}}}}``````````````{{{f{c}}h}b{}}0{{{f{Bj}}{G`{{Cl{Cj}}}}{f{AFn}}}{{A`{Abn}}}}{{{f{Bj}}{G`{{Cl{Cj}}}}{f{AFn}}{Cf{{f{{DFn{EfEf}}}}}}}{{A`{Abn}}}}{{{f{Ab}}c}{}{B`Ll}}{{{f{Ab}}{f{Ab}}}}{{AbAb}}{{Abc}{}{B`Ll}}`{{{f{DbAb}}{f{Ab}}}{{A`{{f{DbAb}}n}}}}{{{f{Ab}}}{{Cf{Fh}}}}0{{{f{BL`}}Ej}{{l{El}}}}{{{f{BL`}}}{{A`{{l{El}}n}}}}`{{{f{Ab}}}{{A`{{f{{l{C`}}}}n}}}}{{{f{Ab}}Fh}{{f{{Cl{Cj}}}}}}{{{f{BL`}}}{{f{AG`}}}}{{{f{DbBL`}}}{{f{DbAG`}}}}{{{f{Ab}}}{{l{Ah}}}}{{{f{DbBL`}}}{{f{Db{l{c}}}}}Dh}{{{f{BL`}}}{{f{{l{c}}}}}Dh}{{{f{Ab}}}{{f{BL`}}}}{{{f{Ab}}}{{f{Ab}}}}0{{{f{DbBL`}}}{{A`{Fhn}}}}{{{f{DbAb}}}{{A`{Fhn}}}}{{{f{Ab}}}{{A`{{f{{l{Aj}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{En}}}}n}}}}{{{f{BL`}}{f{Ab}}}{{A`{Abn}}}}00{{{f{Ab}}}{{A`{{f{{l{An}}}}n}}}}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Dbc}}}{{f{Dbe}}}{}{}}000{{{f{BL`}}{f{Eh}}Fd}{{A`{Abn}}}}{{{f{Ab}}{f{Eh}}}{{A`{Abn}}}}0{{{f{Ab}}{f{Eh}}Fd}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{AMd}}n}}}}7{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Ab}}c}{{A`{Abn}}}Bb}{{{f{BL`}}}{{Fn{{Fj{{Cl{Cj}}}}{Fl{{f{{Cl{Cj}}}}}{{Ad{Fh}}}}}}}}{{{f{Ab}}}{{`{{Cn{}{{Ch{Fh}}}}}}}}{{{f{BL`}}}{{f{{G`{{Cl{Cj}}}}}}}}{{{f{DbBL`}}}{{f{Db{G`{{Cl{Cj}}}}}}}}{{{f{DbAb}}}{{f{Db{G`{{Cl{Cj}}}}}}}}{{{f{Ab}}}Ab}{{{f{Lf}}}Lf}1{{{f{BL`}}}{{Mf{BL`}}}}{{{f{c}}{f{Dbe}}}b{}{}}0{{{f{c}}}b{}}00{{{f{DbAb}}}b}{{{f{Ab}}}{{A`{{f{{Kb{K`Jn}}}}n}}}}{{{f{Ab}}}{{A`{{f{{Kb{KhKd}}}}n}}}}{{{f{Ab}}}{{A`{{f{{Kb{KlKj}}}}n}}}}{{}Ab}{Fh{{f{c}}}{}}000{{{f{Ab}}}f}{Fh{{f{Dbc}}}{}}000{{AbAb}}{{Abc}{}{B`Ll}}{{{f{Ab}}c}{}{B`Ll}}{{{f{Ab}}{f{Ab}}}}{Fhb}000{{{f{BL`}}}Ab}{{{f{BL`}}}{{f{Eh}}}}{{{f{Ab}}}{{A`{{f{{Kb{KnKd}}}}n}}}}{{{f{Lf}}{f{Lf}}}d}{{{f{Ab}}{f{Ab}}}d}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}{{{f{Ab}}c}{{A`{{l{An}}n}}}B@`}{{{f{Ab}}{f{Bj}}}{{A`{{l{An}}n}}}}{{{f{Ab}}{f{Ab}}}{{A`{{l{An}}n}}}}30{{{f{Ab}}{f{Bj}}}}{{{f{Ab}}c}{}B@`}66{{{f{c}}{f{e}}}d{}{}}00{{{f{Ab}}}Fh}{{{f{Ab}}}{{A`{Abn}}}}{{{f{DbAb}}{f{Ab}}}{{A`{{f{DbAb}}n}}}}{{{f{Ab}}IlFh}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{Eb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Ed}}}}n}}}}{{{f{BL`}}}{{Dn{Ob}}}}{{{f{Ab}}AHj}{{A`{Abn}}}}{{{f{BL`}}{f{{l{An}}}}}{{A`{Abn}}}}{{{f{Lf}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Ab}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{Ab}}}Ef}{cc{}}000{{{Kb{LbKd}}}Ab}{{{Kb{KnKd}}}Ab}{{{Kb{KhKd}}}Ab}{{{Kb{K`Jn}}}Ab}{{{l{c}}}AbDh}{{{f{Bj}}{f{{Bh{Il}}}}d}{{A`{Abn}}}}{{{f{Bj}}{f{{Bh{Il}}}}{f{Eh}}d}{{A`{Abn}}}}{{{f{Bj}}{Cl{Cj}}}{{A`{Abn}}}}{{{f{Bj}}{G`{{Cl{Cj}}}}}{{A`{Abn}}}}{{{f{Bj}}{G`{{Cl{Cj}}}}{f{Eh}}}Ab}{g{{A`{ic}}}{}{}{{Hh{c}{{Ch{e}}}}}{}}{cAb{{Hf{}{{Ch{{Cf{In}}}}}}}}{cAb{{Hf{}{{Ch{{f{In}}}}}}}}{cAb{{Hf{}{{Ch{Ef}}}}}}{cAb{{Hf{}{{Ch{{f{Bj}}}}}}}}{cAb{{Hf{}{{Ch{{f{d}}}}}}}}{cAb{{Hf{}{{Ch{d}}}}}}{cAb{{Hf{}{{Ch{{Cf{d}}}}}}}}{cAb{{Hf{}{{Ch{{f{M`}}}}}}}}{cAb{{Hf{}{{Ch{M`}}}}}}{cAb{{Hf{}{{Ch{{Cf{M`}}}}}}}}{cAb{{Hf{}{{Ch{{f{Jf}}}}}}}}{cAb{{Hf{}{{Ch{Jf}}}}}}{cAb{{Hf{}{{Ch{{Cf{Bf}}}}}}}}{cAb{{Hf{}{{Ch{Bf}}}}}}{cAb{{Hf{}{{Ch{{f{Bf}}}}}}}}{cAb{{Hf{}{{Ch{{Cf{Nl}}}}}}}}{cAb{{Hf{}{{Ch{Nl}}}}}}{cAb{{Hf{}{{Ch{Gf}}}}}}{cAb{{Hf{}{{Ch{{f{Gf}}}}}}}}{cAb{{Hf{}{{Ch{{Cf{Gf}}}}}}}}{cAb{{Hf{}{{Ch{{f{N`}}}}}}}}{cAb{{Hf{}{{Ch{N`}}}}}}{cAb{{Hf{}{{Ch{{Cf{Jf}}}}}}}}{cAb{{Hf{}{{Ch{{Cf{N`}}}}}}}}{cAb{{Hf{}{{Ch{In}}}}}}{cAb{{Hf{}{{Ch{{f{O`}}}}}}}}{cAb{{Hf{}{{Ch{O`}}}}}}{cAb{{Hf{}{{Ch{{Cf{O`}}}}}}}}{cAb{{Hf{}{{Ch{{f{Nf}}}}}}}}{cAb{{Hf{}{{Ch{Nf}}}}}}{cAb{{Hf{}{{Ch{{Cf{Nf}}}}}}}}{cAb{{Hf{}{{Ch{{f{Jh}}}}}}}}{cAb{{Hf{}{{Ch{Jh}}}}}}{cAb{{Hf{}{{Ch{{Cf{Jh}}}}}}}}{cAb{{Hf{}{{Ch{{f{Nl}}}}}}}}{{{f{Bj}}{G`{O`}}}Ab}{{{f{Bj}}{G`{Nf}}}Ab}{{{f{Bj}}{G`{M`}}}Ab}{{{f{Bj}}{G`{Jf}}}Ab}{{{f{Bj}}{G`{N`}}}Ab}{{{f{Bj}}{G`{Gf}}}Ab}{{{f{Bj}}{G`{Jh}}}Ab}{{{f{Bj}}{G`{In}}}Ab}{{{f{Bj}}{G`{Nl}}}Ab}{{{f{Bj}}{G`{Nb}}}Ab}{{{f{Bj}}{G`{Bf}}}Ab}{{{f{Bj}}Fh{f{Eh}}}Ab}{{{f{Ab}}FhFh}Ab}{{{f{BL`}}Fh}{{A`{Iln}}}}{{{f{Ab}}}Fh}{{{f{Ab}}}J`}{{{f{Ab}}}Ab}{{{f{BL`}}}{{Cf{{Mj{Mh}}}}}}{{{f{BL`}}Fh}{{Cf{{f{Jb}}}}}}{{{f{BL`}}FhFh}{{Cf{{f{Jb}}}}}}{{{f{BL`}}Fh}Il}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Bj}}}{{A`{{l{An}}n}}}}{{{f{Ab}}c}{{A`{{l{An}}n}}}B@`}{{{f{Ab}}{f{Ab}}}{{A`{{l{An}}n}}}}3{{{f{Ab}}{f{Bj}}}}12{{{f{BL`}}}d}{{{f{Lf}}{f{Dbc}}}bADf}{{{f{Ab}}{Cf{Fh}}}Ab}{{{f{Ab}}}{{A`{{f{{l{Nn}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Jn}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Kd}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nd}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{El}}}}n}}}}`{{{f{Ab}}}{{A`{{l{Ah}}n}}}}{{}Fh}000{ce{}{}}000{AbAAf}1{BCdAb}{AbAb}={{{f{Ab}}}{{A`{{l{An}}n}}}}000{{{f{BL`}}}{{l{An}}}}0{{}d}0{{{f{Ab}}}Lf}{{{f{Ab}}}DIf}{{{f{Ab}}}{{`{{Cn{}{{Ch{Ab}}}}}}}}{{{f{BL`}}}Fh}{{{f{Ab}}}Fh}{{{f{BL`}}Fh}Ab}{{{f{Ab}}}{{A`{{f{{l{Ah}}}}n}}}}{AbBJ`}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Ab}}}{{A`{{l{An}}n}}}}{{{f{Ab}}{f{Bj}}}}{{{f{Ab}}c}{{A`{{l{An}}n}}}B@`}3201{{{f{Ab}}}{{A`{{Cf{c}}n}}}Ll}{{{f{BL`}}}{{A`{Lnn}}}}{{{f{BL`}}}{{Cf{M`}}}}{{{f{Ab}}}Ln}1232{{Abc}{}{B`Ll}}{{{f{Ab}}c}{}{B`Ll}}{{{f{Ab}}{f{Ab}}}}{{AbAb}}{{{f{BL`}}}Fh}{{{f{Ab}}}Fh}{{{f{BL`}}}{{A`{Fhn}}}}{{{f{BL`}}}{{f{Bj}}}}{{{f{Bj}}c}Ab{{I`{{Bh{Nb}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{{Cf{N`}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{Ab}}}}}}{{{f{Bj}}{Ml{In}}}Ab}{{{f{Bj}}{Ml{Jh}}}Ab}{{{f{Bj}}c}Ab{{I`{{Bh{{Cf{Ef}}}}}}}}{{{f{Bj}}{Ml{N`}}}Ab}{{{f{Bj}}c}Ab{{I`{{Bh{M`}}}}}}{{{f{Bj}}{Ml{Gf}}}Ab}{{{f{Bj}}c}Ab{{I`{{Bh{Jf}}}}}}{{{f{Bj}}c}AbBCd}{{{f{Bj}}c}Ab{{I`{{Bh{{Dn{{Bh{Bf}}}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{{Cf{{Dn{{Bh{Bf}}}}}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{{Cf{{G`{Bf}}}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{{Cf{Ab}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{{f{Bj}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{Gf}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{N`}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{O`}}}}}}{{{f{Bj}}{f{Ab}}}Ab}{{{f{Bj}}c}Ab{{I`{{Bh{Nf}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{Jh}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{{Cf{Gf}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{In}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{Il}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{Nl}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{Bf}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{d}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{{G`{Bf}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{{Cf{{f{{Bh{Bf}}}}}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{{Cf{AMb}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{{Cf{d}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{{Cf{Bf}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{{f{{Bh{Bf}}}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{{Cf{Nl}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{{Cf{In}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{AMb}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{{Cf{B@j}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{{Cf{{f{Bj}}}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{B@j}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{{Cf{ALn}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{{Cf{M`}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{{Cf{Jh}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{ALn}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{B@l}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{{Dn{Bj}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{{Cf{{Dn{Bj}}}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{{Cf{Nf}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{{Cf{Nb}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{{Cf{Jf}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{{Cf{B@l}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{{Cf{O`}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bh{Ef}}}}}}{{{f{Bj}}{f{Eh}}}Ab}{{{f{BL`}}FhFh}Ab}{{{f{Bj}}Fh}Ab}{{{f{DbDIf}}}Cf}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Bj}}}{{A`{{l{An}}n}}}}{{{f{Ab}}c}{{A`{{l{An}}n}}}B@`}{{{f{Ab}}{f{Ab}}}{{A`{{l{An}}n}}}}30{{{f{Ab}}c}{}B@`}{{{f{Ab}}{f{Bj}}}}{{{f{Ab}}}{{A`{{f{ADb}}n}}}}{{{f{BL`}}}Fh}`{{{f{Ab}}}{{Cl{L`}}}}{{{f{Ab}}}{{A`{Lnn}}}}{{{f{BL`}}M`Oh}{{A`{Lnn}}}}{{{f{BL`}}}Ab}{{{f{Ab}}c}{}{B`Ll}}{{Abc}{}{B`Ll}}{{{f{Ab}}{f{Ab}}}}{{{f{DbBL`}}{f{Bj}}}b}{{{f{DbAb}}{f{Bj}}}{{f{DbAb}}}}{{{f{Ab}}{f{{Bh{Gf}}}}}{{A`{Abn}}}}06{LfLf}{{{f{BL`}}{f{Dj}}Oj}{{A`{Abn}}}}{{{f{Ab}}M`dd{Cf{Jh}}}{{A`{Abn}}}}{{{f{Ab}}Fhdd{Cf{Jh}}}{{A`{Abn}}}}{{{f{Ab}}Fh}Ab}{{{f{DbAb}}Lf}b}{{{f{BL`}}Gf}Ab}{{{f{DbBL`}}}b}{{{f{DbAb}}}b}{{{f{Ab}}{Cf{Jh}}}Ab}{{{f{DIf}}}{{Gj{Fh{Cf{Fh}}}}}}{{{f{BL`}}GfFh}Ab}{{{f{Ab}}GfFh}Ab}{{{f{Ab}}Ej}{{A`{Abn}}}}{{{f{BL`}}Ej}{{A`{Abn}}}}{{{f{BL`}}Gf}{{Gj{AbAb}}}}{{{f{Ab}}Gf}{{Gj{AbAb}}}}{{{f{BL`}}Bf}{{Cf{M`}}}}{{{f{BL`}}Bf}{{A`{Lnn}}}}{{{f{Ab}}}{{A`{{f{{l{Bd}}}}n}}}}{{{f{Ab}}Fh}{{A`{{Dn{Bj}}n}}}}{{{f{Ab}}{f{Eh}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{j}}}}n}}}}{{AbAb}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}{B`Ll}}{{Abc}{}{B`Ll}}{{{f{Ab}}}{{A`{cn}}}Ll}{{{f{BL`}}}{{A`{Lnn}}}}{{{f{Ab}}}{{A`{Lnn}}}}{{{f{Ab}}{Cf{Fh}}}Ab}{{{f{BL`}}{f{{l{El}}}}}{{A`{Abn}}}}{{{f{Ab}}{f{{Bh{A@`}}}}Lf}Ab}{{{f{Ab}}{f{{Bh{A@`}}}}}Ab}{{{f{BL`}}{f{{Bh{In}}}}}{{A`{Abn}}}}{{{f{BL`}}{f{{Bh{In}}}}}Ab}{{{f{BL`}}{f{{l{El}}}}}Ab}{{{f{Ab}}{f{{Bh{In}}}}}Ab}{{{f{Ab}}}{{A`{{f{{Kb{LbKd}}}}n}}}}{{{f{Ab}}FhAOf}{{Cl{Cj}}}}{{{f{Ab}}{Cf{{f{Bj}}}}d}{{A`{AAfn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{c}}}e{}{}}0{{{f{Ab}}}{{Dn{Ab}}}}{{{f{c}}}Ef{}}{{AbAb}{{A`{Abn}}}}{c{{A`{e}}}{}{}}000{{{Gj{{f{Bj}}{Cl{Cj}}}}}{{A`{Abn}}}}{{{Gj{{f{Bj}}{G`{{Cl{Cj}}}}}}}{{A`{Abn}}}}{{{Gj{{f{B@d}}{G`{{Cl{Cj}}}}}}}{{A`{Abn}}}}{{{Gj{{f{B@d}}{Cl{Cj}}}}}{{A`{Abn}}}}44445{{{f{DbAb}}{Jj{c}}}dDh}6{{{f{c}}}AAd{}}000{{{f{Ab}}}{{A`{{f{{l{Nj}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{El}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Mn}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nh}}}}n}}}}{{{f{BL`}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{BL`}}}{{A`{{f{{l{c}}}}n}}}Dh}{{{f{BL`}}Bf}{{Cf{M`}}}}{{{f{BL`}}Bf}{{A`{Lnn}}}}{ce{}{}}000{{Ab{f{Bj}}}Ab}{{{f{Ab}}c}Ab{B`Ll}}{{{f{Ab}}{f{{l{An}}}}{f{Ab}}}{{A`{Abn}}}}``{{{f{c}}h}b{}}{{{f{E`}}}{{f{Ab}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{E`}}}E`}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{{f{E`}}}Ab}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}{cc{}}{{}Fh}{ce{}{}}{{{DIh{Ab}}}E`}{{{f{DbE`}}{f{Db{Cl{Cj}}}}}b}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}5{{{f{DbE`}}{f{Db{Cl{Cj}}}}e}c{}{{Dj{{f{E`}}}{{Ad{c}}}}}}````{{{f{Ab}}{f{Ab}}c}{{A`{Abn}}}{{Af{{f{Ab}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{BJb{}{{Ad{c}}}}{f{Ab}}}c{}}{{{f{BJd}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bl}}}}{f{Ab}}}{{A`{Abn}}}}`210210210210``{{{f{C@j}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Ff}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{C@j}}c}{{A`{Abn}}}Bb}{{{f{{l{Ff}}}}c}{{A`{Abn}}}Bb}```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{CKd}}}CKd}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}0{{}CKd}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}{{{f{CKd}}{f{CKd}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CKd}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}{{{f{CKd}}{f{Dbc}}}bADf}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}3","D":"AEHnB@l","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",11368],[5,"StructType",2001,11369],[5,"ChunkedArray",17,11370],[6,"PolarsError",3452,11371],[6,"Result",11372],[5,"Series",10855,11373],[17,"Output"],[10,"FnMut",11374],[5,"ListType",2001,11369],[5,"BinaryType",2001,11369],[10,"PolarsNumericType",2001,11369],[5,"BooleanType",2001,11369],[10,"Num",11375],[10,"ToPrimitive",11376],[5,"StringType",2001,11369],[1,"u8"],[1,"slice"],[1,"str"],[10,"NumOpsDispatchInner",11313,11377],[6,"GroupsProxy",3840,11378],[5,"FixedSizeListType",2001,11369],[5,"ObjectType",2001,11369],[10,"PolarsObject",1554,11379],[6,"Option",11380],[17,"Item"],[10,"Array",11381],[5,"Box",11382],[10,"Iterator",11383],[5,"AmortizedListIter",11384],[0,"mut"],[17,"IsNested"],[5,"FalseT",2001,11369],[10,"PolarsDataType",2001,11369],[10,"Fn",11374],[10,"Copy",11385],[6,"Cow",11386],[5,"AmortSeries",11289,11387],[5,"Float32Type",2001,11369],[5,"Float64Type",2001,11369],[5,"String",11388],[6,"DataType",2001,11389],[5,"SortOptions",1682,11390],[5,"UInt32Type",2001,11369],[5,"BinaryOffsetType",2001,11369],[5,"SortMultipleOptions",1682,11390],[10,"PolarsIntegerType",2001,11369],[6,"CastOptions",1159,11391],[10,"NumOpsDispatchCheckedInner",11334,11392],[1,"usize"],[5,"Iter",11393],[1,"fn"],[5,"Map",11394],[5,"Vec",11395],[5,"MetadataProperties",1266,11396],[10,"DoubleEndedIterator",11397],[1,"i64"],[5,"OffsetsBuffer",11398],[1,"tuple"],[17,"HasViews"],[17,"IsObject"],[5,"Formatter",11399],[5,"Error",11399],[17,"Array"],[10,"IntoIterator",11400],[10,"FallibleIterator",11401],[5,"Bitmap",11402],[10,"Borrow",11403],[10,"PolarsAsRef",11404],[10,"AsRef",11405],[10,"IntoParallelIterator",11406],[10,"Send",11385],[10,"Sync",11385],[10,"NoOption",11407],[10,"TrustedLen",11408],[6,"AnyValue",2001,11409],[1,"u32"],[5,"MetadataFlags",1266,11396],[10,"PolarsObjectSafe",1554,11379],[5,"BinaryArray",11410],[1,"f32"],[1,"u64"],[5,"Metadata",1266,11396],[5,"RwLockWriteGuard",11411],[5,"Int32Type",2001,11369],[5,"DateType",2001,11369],[5,"Logical",2001,11412],[5,"Int64Type",2001,11369],[6,"TimeUnit",2001,11413],[5,"DatetimeType",2001,11369],[5,"Int128Type",2001,11369],[5,"DecimalType",2001,11369],[5,"DurationType",2001,11369],[10,"ExactSizeIterator",11414],[5,"TimeType",2001,11369],[10,"PolarsFloatType",2001,11369],[6,"IsSorted",10855,11415],[10,"PolarsIterator",1209,11416],[6,"ChunkedArrayLayout",17,11370],[10,"NumCast",11376],[5,"Scalar",4211,11417],[1,"f64"],[6,"MetadataReadGuard",1266,11418],[5,"IMMetadata",1266,11419],[5,"Arc",4211,11420],[10,"MetadataTrait",1266,11421],[5,"RwLockReadGuard",11411],[5,"Range",11422],[5,"UInt64Type",2001,11369],[1,"i32"],[1,"i128"],[5,"Int8Type",2001,11369],[1,"i8"],[5,"UInt8Type",2001,11369],[5,"UInt16Type",2001,11369],[1,"u16"],[5,"Int16Type",2001,11369],[1,"i16"],[5,"Field",2001,11423],[10,"ParallelIterator",11406],[10,"IndexedParallelIterator",11406],[6,"QuantileInterpolOptions",4211,11424],[5,"RollingOptionsFixedWindow",4211,11425],[10,"PolarsOpsNumericType",11426],[10,"Sized",11385],[5,"ChunkId",4211,11427],[17,"IsStruct"],[5,"RandomState",11428],[5,"BytesHash",11429],[5,"ViewRepr",11430],[1,"array"],[5,"Dim",11431],[5,"ArrayBase",11430],[5,"OwnedRepr",11432],[6,"Either",11433],[5,"TypeId",11434],[5,"DataFrame",3547,11435],[5,"NullableIdxSize",4211,11427],[10,"FnOnce",11374],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",853,11436],[5,"AnonymousListBuilder",881,11437],[5,"AnonymousOwnedListBuilder",881,11437],[5,"ListBooleanChunkedBuilder",881,11438],[5,"ListPrimitiveChunkedBuilder",881,11439],[10,"ListBuilderTrait",881,11440],[10,"ChunkedBuilder",881,11441],[5,"ListStringChunkedBuilder",881,11442],[5,"ListBinaryChunkedBuilder",881,11442],[5,"ListNullChunkedBuilder",881,11443],[5,"BinViewChunkedBuilder",881,11444],[10,"ViewType",11445],[5,"BooleanChunkedBuilder",881,11446],[5,"NullChunkedBuilder",881,11447],[5,"PrimitiveChunkedBuilder",881,11448],[10,"Clone",11449],[5,"NullChunked",11450],[10,"NewChunkedArray",881,11441],[10,"Hasher",11451],[10,"ChunkedCollectInferIterExt",1189,11452],[10,"ChunkedCollectIterExt",1189,11452],[10,"Canonical",1203,11453],[10,"ChunkedCollectParIterExt",1205,11454],[10,"FromParIterWithDtype",1205,11454],[5,"BooleanArray",11455],[5,"BoolIterNoNull",1209,11416],[5,"FixedSizeListArray",11456],[5,"FixedSizeListIterNoNull",1209,11416],[5,"SomeIterator",1209,11416],[5,"MetadataEnv",1266,11457],[10,"MetadataCollectable",1266,11458],[5,"Iter",11459],[5,"IterNames",11459],[5,"File",11460],[5,"Mutex",11461],[6,"MetadataMerge",1266,11396],[5,"RwLock",11411],[5,"ObjectArray",1554,11379],[6,"ArrowDataType",2001,11462],[10,"Any",11434],[10,"Debug",11399],[5,"BitmapIter",11463],[6,"ZipValidity",11464],[5,"ObjectChunkedBuilder",1631,11465],[10,"AnonymousObjectBuilder",1654,11466],[5,"ObjectRegistry",1654,11466],[17,"FuncRet"],[10,"ChunkApply",1682,11467],[10,"ChunkApplyKernel",1682,11467],[10,"ChunkSort",1682,11467],[10,"ChunkUnique",1682,11467],[10,"ChunkCast",1682,11467],[6,"FillNullStrategy",1682,11467],[10,"ChunkCompare",10855,11467],[10,"ChunkExplode",1682,11467],[10,"ChunkFillNullValue",1682,11467],[10,"ChunkFilter",1682,11467],[10,"ChunkFull",1682,11467],[10,"ChunkFullNull",1682,11467],[10,"ChunkAnyValue",1682,11467],[10,"IsFirstDistinct",1682,11467],[10,"IsLastDistinct",1682,11467],[10,"ChunkAgg",1682,11467],[10,"ChunkQuantile",1682,11467],[10,"ChunkExpandAtIndex",1682,11467],[10,"Reinterpret",1682,11467],[10,"ChunkReverse",1682,11467],[10,"ChunkRollApply",1682,11467],[10,"ChunkSet",1682,11467],[10,"ChunkShift",1682,11467],[10,"ChunkShiftFill",1682,11467],[10,"SlicedArray",1682,11468],[10,"ChunkVar",1682,11467],[10,"ChunkTake",1682,11467],[10,"ChunkTakeUnchecked",1682,11467],[10,"ChunkBytes",1682,11467],[10,"ChunkZip",1682,11467],[10,"BinaryFnMut",1889,11469],[10,"StaticArray",2001,11470],[10,"TernaryFnMut",1889,11469],[10,"Error",11471],[10,"UnaryFnMut",1889,11469],[5,"PrimitiveArray",11472],[6,"SearchSortedSide",1930,11473],[5,"NoNull",4211,11474],[5,"RowsEncoded",11475],[5,"NaiveDateTime",11476],[6,"Tz",11477],[5,"NaiveTime",11478],[5,"CategoricalChunked",2001,11479],[5,"CategoricalChunkedBuilder",2001,11480],[10,"ArrayFromIter",2001,11481],[10,"ArrayFromIterDtype",2001,11481],[10,"AsRefDataType",2001,11389],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",11482],[10,"From",11405],[5,"BinaryViewArrayGeneric",11445],[6,"RevMapping",2001,11483],[10,"CategoricalMergeOperation",2001,11484],[10,"LogicalType",2001,11412],[6,"CategoricalOrdering",2001,11483],[5,"OwnedObject",2001,11409],[6,"UnknownKind",2001,11389],[5,"CompatLevel",2001,11389],[5,"CategoricalType",2001,11369],[6,"ArrowTimeUnit",2001],[10,"ArrayCollectIterExt",2001,11481],[5,"GlobalRevMapMerger",2001,11484],[10,"NumericNative",2001,11369],[10,"Into",11405],[5,"ArrowField",4211],[6,"IntegerType",11485],[6,"PrimitiveType",11486],[5,"TimeDelta",11487],[5,"NaiveDate",11488],[5,"LazyCompact",11489],[5,"SmartString",11490],[10,"GetAnyValue",2001,11409],[10,"IntoScalar",2001,11491],[5,"CatIter",2001,11479],[6,"Ordering",11492],[1,"u128"],[6,"PhysicalType",11485],[5,"StringCacheHolder",3431,11493],[5,"ErrString",3452,11371],[6,"PolarsWarning",3452,11494],[6,"ParquetError",11495],[6,"Error",11496],[5,"Utf8Error",11497],[5,"Error",11498],[5,"Error",11499],[5,"TryReserveError",11500],[10,"Display",11399],[5,"Schema",4211,11501],[10,"IntoSeries",10855,11502],[6,"NullStrategy",3547,11435],[6,"UniqueKeepStrategy",3547,11435],[5,"HashSet",11503],[5,"ArrowSchema",4211,11504],[5,"Row",4099,11505],[5,"GroupBy",3840,11506],[5,"DynamicGroupOptions",4211,11507],[5,"RangeFull",11422],[5,"RangeToInclusive",11422],[5,"RangeInclusive",11422],[5,"RangeTo",11422],[5,"RangeFrom",11422],[5,"RecordBatchIter",3547,11435],[5,"PhysRecordBatchIter",3547,11435],[5,"LazyFrame",4211,11508],[5,"RollingGroupOptions",4211,11507],[10,"RangeBounds",11422],[10,"IntoVec",4211,11474],[6,"IndexOrder",4211,11509],[5,"RecordBatchT",11510],[5,"StructArray",4211,11511],[5,"UnpivotArgs",3810,11512],[5,"Duration",4211,11513],[5,"GroupsIdx",3840,11378],[5,"UnitVec",11514],[6,"GroupByMethod",3840,11506],[5,"SlicedGroups",3840,11378],[5,"GroupsProxyParIter",3840,11378],[10,"UnindexedConsumer",11515],[6,"GroupsIndicator",3840,11378],[6,"IRAggExpr",11516],[10,"IntoGroupsProxy",3840,11517],[5,"Copied",11518],[5,"Zip",11519],[5,"GroupsProxyIter",3840,11378],[10,"IsFloat",11520],[10,"NativeType",11521],[10,"AggList",4083,11522],[10,"TakeExtremum",4083,11523],[10,"PhysicalAggExpr",4096,11524],[6,"AnyValueBuffer",4099,11525],[6,"AnyValueBufferTrusted",4099,11525],[5,"Node",11526],[6,"IR",11527],[5,"Arena",11526],[6,"AExpr",11516],[10,"JoinDispatch",4211,11528],[5,"JoinArgs",4211,11529],[10,"DfTake",4211,11530],[10,"DataFrameOps",4211,11531],[5,"CsvReader",4211,11532],[10,"PhysicalIoExpr",11533],[10,"MmapBytesReader",11534],[6,"Expr",4211,11535],[10,"LhsNumOps",11313,11377],[10,"NumOpsDispatch",11313,11377],[5,"LazyGroupBy",4211,11508],[5,"OptState",4211,11536],[10,"Allocator",11537],[5,"JoinBuilder",4211,11508],[10,"AnonymousScan",4211,11538],[5,"ScanArgsAnonymous",4211,11539],[10,"FunctionOutputField",4211,11540],[5,"SpecialEq",4211,11540],[6,"VisitRecursion",11541],[6,"FunctionExpr",4211,11542],[10,"ArgAgg",4211,11543],[5,"ArrayNameSpace",4211,11544],[5,"ListNameSpace",4211,11545],[10,"SeriesTrait",10855,11415],[5,"FieldsMapper",4211,11546],[5,"IpcStreamReader",4211,11547],[10,"Read",11548],[10,"SeriesUdf",4211,11540],[10,"AsBinary",4211,11549],[10,"StringMethods",9790,11550],[5,"BorrowedFd",11551],[10,"AsFd",11551],[10,"AsList",4211,11552],[10,"AsRawFd",11553],[6,"AggExpr",4211,11535],[10,"SeriesSealed",4211,11554],[10,"AsString",4211,11555],[20,"MaybeUninit",11556],[10,"StringNameSpaceImpl",4211,11557],[5,"OwnedBatchedCsvReader",4211,11558],[5,"CsvWriter",4211,11559],[5,"BatchedWriter",11559],[10,"Write",11548],[5,"IpcWriter",4211,11560],[5,"BatchedWriter",11560],[5,"ParquetReader",4211,11561],[5,"BatchedParquetReader",4211,11562],[5,"ParquetWriter",4211,11563],[5,"BatchedWriter",11564],[5,"BatchedCsvReader",4211,11558],[5,"BinaryNameSpace",9696,11565],[6,"Operator",4211,11535],[10,"RenameAliasFn",4211,11540],[5,"UserDefinedFunction",4211,11566],[10,"SeriesBinaryUdf",4211,11540],[5,"InProcessQuery",4211,11567],[5,"HashMap",11568],[5,"CategoricalNameSpace",4211,11569],[10,"RoundSeries",4211,11570],[10,"TemporalMethods",10737,11571],[10,"NumOpsDispatchChecked",11334,11392],[5,"LazyCsvReader",4211,11572],[5,"ScanArgsIpc",4211,11573],[5,"LazyJsonLineReader",4211,11574],[5,"ScanArgsParquet",4211,11575],[5,"RollingOptionsDynamicWindow",4211,11576],[5,"Bounds",4211,11577],[6,"ClosedWindow",4211,11578],[6,"Label",4211,11578],[6,"StartBy",4211,11578],[5,"Window",4211,11579],[5,"CsvReadOptions",4211,11580],[5,"CsvParseOptions",4211,11580],[6,"CsvEncoding",4211,11580],[6,"CommentPrefix",4211,11580],[6,"NullValues",4211,11580],[5,"CsvWriterOptions",4211,11581],[6,"JoinCoalesce",4211,11529],[5,"SerializeOptions",4211,11581],[6,"JoinType",4211,11529],[6,"QuoteStyle",4211,11581],[6,"JoinValidation",4211,11529],[5,"IpcScanOptions",4211,11582],[5,"IpcWriterOptions",4211,11560],[5,"AsOfOptions",4211,11583],[6,"IpcCompression",4211,11560],[6,"AsofStrategy",4211,11583],[5,"JsonWriterOptions",4211,11584],[6,"InterpolationMethod",4211,11585],[6,"ClosedInterval",4211,11586],[5,"ParquetOptions",4211,11587],[6,"ParallelStrategy",4211,11587],[6,"RankMethod",4211,11588],[5,"RankOptions",4211,11588],[5,"ParquetWriteOptions",4211,11589],[6,"ParquetCompression",4211,11589],[5,"GzipLevel",4211,11589],[5,"BrotliLevel",4211,11589],[5,"ZstdLevel",4211,11589],[6,"DslPlan",4211,11590],[5,"When",4211,11591],[5,"Then",4211,11591],[5,"ChainedWhen",4211,11591],[5,"ChainedThen",4211,11591],[6,"Excluded",4211,11535],[6,"BooleanFunction",4211,11592],[6,"CategoricalFunction",4211,11593],[6,"TemporalFunction",4211,11594],[6,"PowFunction",4211,11595],[6,"StringFunction",4211,11596],[6,"StructFunction",4211,11597],[5,"DatetimeArgs",4211,11598],[5,"DurationArgs",4211,11598],[5,"RollingCovOptions",4211,11599],[5,"StrptimeOptions",4211,11599],[5,"JoinOptions",4211,11599],[6,"WindowType",4211,11599],[6,"WindowMapping",4211,11599],[6,"NestedType",4211,11599],[5,"StatisticsOptions",4211,11600],[6,"LiteralValue",4211,11601],[5,"FileMetaData",4211,11602],[5,"AnonymousScanOptions",4211,11603],[5,"UnionArgs",4211,11603],[5,"RollingVarParams",4211,11604],[5,"RollingQuantileParams",4211,11604],[6,"NonExistent",4211,11605],[10,"LazyFileListReader",4211,11606],[5,"CloudOptions",9928,11607],[10,"Ord",11492],[6,"ColumnOrder",11608],[10,"BinaryNameSpaceImpl",4211,11609],[5,"JsonLineReader",4211,11610],[5,"PathBuf",11611],[10,"CrossJoin",4211,11612],[10,"ExprEvalExtension",4211,11613],[10,"DateMethods",9790,11614],[10,"DatetimeMethods",9790,11615],[10,"DurationMethods",9790,11616],[5,"IpcStreamWriterOption",4211,11547],[10,"BinaryUdfOutputField",4211,11540],[5,"CStr",11617],[10,"Default",11618],[5,"RowGroupMetaData",11619],[5,"ParquetStatistics",4211],[6,"NullBehavior",11340,11620],[5,"Weak",11420],[5,"DateLikeNameSpace",10302,11621],[1,"char"],[10,"FromIterator",11400],[10,"SchemaNamesAndDtypes",4211,11501],[10,"SeriesMethods",4211,11622],[10,"PartialEq",11492],[10,"Scalar",11623],[10,"ListNameSpaceExtension",4211,11624],[10,"Command",11625],[5,"Path",11611],[5,"StructNameSpace",4211,11626],[10,"SerReader",4211,11627],[10,"SerWriter",4211,11627],[5,"IpcReader",4211,11582],[5,"IpcStreamWriter",4211,11547],[5,"JsonWriter",4211,11584],[5,"JsonReader",4211,11584],[10,"UdfSchema",4211,11628],[6,"RangeFunction",11629],[6,"ListFunction",11630],[6,"BinaryFunction",11631],[6,"ArrayFunction",11632],[5,"MutableStatistics",11633],[5,"OsString",11634],[5,"OsStr",11634],[10,"ToOwned",11386],[1,"never"],[5,"CString",11635],[5,"GrowableStruct",11636],[5,"MutableStructArray",11637],[10,"FromData",10296,11638],[5,"Buffer",11639],[10,"FromDataUtf8",10296,11638],[10,"FromDataBinary",10296,11638],[5,"ListArray",11640],[6,"Ambiguous",4211,11605],[10,"NamedFromOwned",4211,11641],[10,"DataFrameJoinOps",4211,11642],[5,"FunctionOptions",11603],[10,"PartialOrd",11492],[6,"Context",11590],[10,"IndexOfSchema",4211,11501],[17,"DataType"],[5,"BoundsIter",4211,11579],[6,"ReaderBytes",11534],[10,"PolarsTemporalGroupby",4211,11507],[10,"Hash",11451],[10,"SeriesJoin",4211,11643],[10,"TimeMethods",9790,11644],[5,"NonZero",11645],[10,"IntoListNameSpace",4211,11624],[5,"FileMetaData",11646],[5,"StructValueIter",11647],[10,"AsofJoinBy",4211,11648],[10,"ListNameSpaceImpl",4211,11649],[5,"ExprNameNameSpace",4211,11650],[5,"KeyValue",11646],[10,"IntoLazy",4211,11508],[10,"Literal",4211,11601],[5,"Null",4211,11601],[10,"CloneToUninit",11449],[5,"RowIndex",11651],[10,"ChunkAggSeries",4211,11652],[10,"QuantileAggSeries",4211,11653],[10,"IndexToUsize",4211,11654],[10,"NamedFrom",4211,11641],[6,"RowGroupFetcher",11562],[5,"SplitNChars",4211,11655],[5,"Pin",11656],[5,"Request",11471],[10,"SeriesRank",4211,11588],[5,"BorrowedCursor",11657],[10,"VarInt",11658],[5,"IoSliceMut",11548],[10,"SeriesOpsTime",9790,11659],[10,"PolarsRound",4211,11660],[5,"AnonymousScanArgs",4211,11538],[10,"ChunkedSet",4211,11426],[5,"SchemaDescriptor",11661],[6,"SeekFrom",11548],[10,"VarAggSeries",4211,11662],[5,"StringNameSpace",11663],[10,"TakeChunked",4211,11530],[5,"IRPlan",11527],[10,"ToDummies",4211,11664],[10,"PolarsTruncate",4211,11665],[5,"AllocError",11537],[5,"SchemaInferenceResult",10704,11666],[10,"PolarsUpsample",4211,11667],[10,"VecHash",4211,11668],[6,"JsonFormat",4211,11584],[5,"BTreeMap",11669],[10,"WriteDataFrameToFile",11627],[5,"IoSlice",11548],[10,"ArrayNameSpace",9677,11670],[10,"AsArray",9677,11671],[6,"Buffer",9712,11672],[10,"AsString",9857,11550],[6,"Pattern",9857,11673],[5,"DatetimeInfer",9897,11674],[10,"StrpTimeParser",9897,11674],[17,"Error"],[10,"TryFromWithUnit",9897,11674],[6,"CloudType",9928,11607],[5,"AnonymousBuilder",10357,11675],[6,"RollingFunction",10599,11676],[6,"RollingFunctionBy",10629,11677],[5,"MutableNullArray",10673,11678],[5,"MutableBitmap",11679],[10,"AsSeries",10737,11571],[5,"Utf8Array",11680],[5,"SeriesIter",10855,11681],[5,"Rc",11682],[8,"FillNullLimit",1682],[10,"InitHashMaps",2001],[10,"InitHashMaps2",2001],[5,"TrueT",2001],[8,"PolarsResult",3452],[15,"IO",9608],[15,"Context",9608],[15,"Count",9602],[15,"Slice",9603],[8,"ChunkJoinOptIds",4211],[8,"DynArgs",4211],[10,"ListFromIter",4211],[15,"Quantile",9481],[15,"Min",9481],[15,"Max",9481],[15,"IsBetween",10552],[15,"Any",10552],[15,"All",10552],[15,"GroupBy",9491],[15,"Union",9491],[15,"Sort",9491],[15,"Cache",9491],[15,"ExtContext",9491],[15,"DataFrameScan",9491],[15,"IR",9491],[15,"Select",9491],[15,"HStack",9491],[15,"Scan",9491],[15,"MapFunction",9491],[15,"Filter",9491],[15,"Distinct",9491],[15,"Slice",9491],[15,"Sink",9491],[15,"Join",9491],[15,"HConcat",9491],[15,"SortBy",9545],[15,"Filter",9545],[15,"Cast",9545],[15,"Sort",9545],[15,"Gather",9545],[15,"RenameAlias",9545],[15,"Ternary",9545],[15,"Function",9545],[15,"Window",9545],[15,"AnonymousFunction",9545],[15,"Slice",9545],[15,"BinaryExpr",9545],[15,"Round",10555],[15,"RoundSF",10555],[15,"Clip",10555],[15,"BackwardFill",10555],[15,"ForwardFill",10555],[15,"Random",10555],[15,"GatherEvery",10555],[15,"ValueCounts",10555],[15,"Rank",10555],[15,"ReplaceStrict",10555],[15,"CumCount",10555],[15,"CumSum",10555],[15,"CumProd",10555],[15,"CumMin",10555],[15,"CumMax",10555],[15,"Range",9605],[15,"ConcatHorizontal",10577],[15,"ConcatVertical",10577],[15,"ExtractGroups",10577],[15,"SplitExact",10577],[15,"Contains",10577],[15,"Find",10577],[15,"Replace",10577],[15,"DatetimeFunction",10591],[5,"Utf8Field",9712],[5,"CategoricalField",9712],[5,"DatetimeField",9712],[15,"Datetime",9786],[10,"Utf8FromIter",10851],[10,"BinaryFromIter",10851],[6,"BitRepr",10855]],"r":[[1,11683],[2,11683],[3,11683],[4,11683],[6,11493],[7,11683],[8,11683],[9,11683],[13,11683],[14,11683],[16,11493],[17,11370],[18,11370],[19,11370],[24,11684],[116,11370],[139,11370],[140,11370],[168,11370],[170,11370],[223,11370],[276,11370],[425,11370],[474,11370],[579,11370],[582,11370],[722,11370],[853,11436],[881,11437],[882,11437],[883,11444],[884,11444],[885,11446],[886,11441],[887,11442],[888,11438],[889,11440],[890,11443],[891,11439],[892,11442],[893,11441],[894,11447],[895,11448],[896,11444],[1033,11441],[1049,11440],[1077,11441],[1142,11437],[1143,11437],[1144,11442],[1145,11438],[1146,11440],[1147,11443],[1148,11439],[1149,11442],[1157,11440],[1159,11391],[1189,11452],[1190,11452],[1203,11453],[1205,11454],[1206,11454],[1209,11416],[1210,11416],[1211,11416],[1212,11416],[1248,11416],[1264,11685],[1265,11685],[1271,11419],[1276,11396],[1277,11458],[1278,11457],[1279,11396],[1280,11396],[1281,11396],[1282,11418],[1283,11421],[1554,11379],[1555,11379],[1556,11379],[1557,11379],[1569,11379],[1599,11379],[1600,11686],[1631,11465],[1654,11466],[1655,11466],[1656,11466],[1657,11466],[1669,11466],[1670,11466],[1671,11466],[1674,11466],[1676,11466],[1683,11467],[1684,11467],[1685,11467],[1686,11467],[1687,11467],[1688,11467],[1689,11467],[1690,11467],[1691,11467],[1692,11467],[1693,11467],[1694,11467],[1695,11467],[1696,11467],[1697,11467],[1698,11467],[1699,11467],[1700,11467],[1701,11467],[1702,11467],[1703,11467],[1704,11467],[1705,11467],[1706,11467],[1707,11467],[1708,11467],[1709,11467],[1712,11467],[1713,11467],[1722,11467],[1723,11468],[1725,11390],[1726,11390],[1739,11467],[1786,11467],[1789,11467],[1798,11467],[1801,11467],[1844,11467],[1850,11467],[1887,11467],[1889,11469],[1893,11469],[1894,11469],[1895,11469],[1896,11469],[1897,11469],[1898,11469],[1899,11469],[1900,11469],[1901,11469],[1902,11469],[1903,11469],[1904,11469],[1905,11469],[1906,11469],[1907,11469],[1908,11469],[1909,11469],[1910,11469],[1911,11469],[1912,11469],[1913,11469],[1914,11469],[1915,11469],[1916,11469],[1917,11469],[1918,11469],[1919,11469],[1920,11469],[1921,11469],[1922,11469],[1923,11469],[1924,11469],[1925,11687],[1926,11687],[1927,11688],[1928,11688],[1929,11688],[1933,11473],[1935,11473],[1955,11473],[1961,11468],[1962,11689],[1963,11689],[1964,11689],[1965,11689],[1968,11690],[1969,11691],[1970,11691],[1971,11691],[1972,11691],[1973,11691],[1974,11691],[1975,11691],[1976,11691],[1977,11468],[1978,11390],[1979,11390],[1990,11692],[1991,11693],[1992,11693],[1993,11693],[1994,11692],[1995,11692],[1996,11694],[1997,11692],[1998,11693],[1999,11693],[2000,11693],[2002,11409],[2006,11369],[2007,11481],[2008,11481],[2009,11481],[2010,11462],[2012,11389],[2016,11369],[2018,11369],[2019,11369],[2021,11369],[2026,11369],[2027,11369],[2028,11479],[2031,11479],[2032,11480],[2033,11484],[2034,11483],[2035,11369],[2036,11389],[2037,11389],[2038,11389],[2039,11389],[2044,11695],[2045,11369],[2048,11696],[2049,11369],[2054,11697],[2055,11369],[2060,11698],[2061,11369],[2065,11369],[2066,11423],[2067,11423],[2070,11369],[2076,11369],[2077,11369],[2081,11369],[2082,11369],[2083,11409],[2085,11484],[2089,11699],[2090,11654],[2091,11699],[2092,11699],[2093,11700],[2094,11699],[2096,11369],[2097,11369],[2101,11369],[2102,11369],[2106,11369],[2107,11369],[2111,11369],[2112,11369],[2116,11369],[2117,11369],[2119,11491],[2130,11369],[2131,11369],[2133,11412],[2134,11412],[2146,11369],[2149,11369],[2151,11369],[2152,11409],[2156,11700],[2157,11700],[2158,11699],[2159,11700],[2160,11700],[2161,11369],[2162,11369],[2163,11369],[2164,11369],[2166,11483],[2169,11470],[2173,11369],[2175,11369],[2180,11369],[2185,11701],[2186,11369],[2187,11413],[2188,11389],[2191,11369],[2195,11369],[2196,11369],[2200,11369],[2201,11369],[2205,11369],[2206,11369],[2210,11369],[2211,11369],[2215,11389],[2381,11484],[2394,11412],[2538,11389],[3049,11484],[3050,11484],[3054,11389],[3408,11479],[3409,11479],[3410,11480],[3411,11484],[3412,11483],[3414,11484],[3418,11483],[3419,11484],[3421,11484],[3422,11484],[3423,11479],[3424,11479],[3425,11483],[3430,11483],[3431,11493],[3437,11493],[3440,11493],[3448,11493],[3458,11371],[3465,11371],[3466,11371],[3467,11494],[3483,11371],[3496,11371],[3512,11494],[3519,11371],[3520,11371],[3521,11371],[3522,11371],[3523,11371],[3524,11494],[3525,11371],[3544,11702],[3545,11702],[3546,11702],[3548,11435],[3553,11435],[3554,11435],[3556,11435],[3557,11435],[3632,11435],[3663,11435],[3727,11435],[3810,11512],[3840,11378],[3843,11506],[3844,11506],[3846,11378],[3847,11378],[3848,11378],[3849,11378],[3850,11378],[3851,11378],[3854,11378],[3856,11517],[3868,11378],[3877,11506],[3949,11506],[3959,11506],[4083,11522],[4084,11523],[4085,11523],[4086,11523],[4087,11523],[4088,11523],[4089,11523],[4090,11523],[4091,11523],[4092,11523],[4096,11524],[4101,11525],[4102,11525],[4122,11505],[4156,11505],[4177,11505],[4191,11505],[4192,11505],[4193,11505],[4209,11703],[4210,11704],[4213,11535],[4220,11536],[4222,11605],[4225,11538],[4226,11538],[4227,11603],[4233,11409],[4234,11420],[4235,11543],[4238,11436],[4243,11369],[4244,11481],[4246,11481],[4247,11481],[4248,11544],[4249,11381],[4250,11462],[4252,11504],[4254,11549],[4255,11552],[4257,11583],[4258,11389],[4259,11555],[4261,11583],[4262,11648],[4263,11583],[4266,11705],[4272,11558],[4273,11562],[4278,11369],[4279,11444],[4282,11609],[4284,11369],[4285,11369],[4287,11369],[4288,11540],[4295,11369],[4296,11446],[4297,11592],[4298,11369],[4299,11378],[4302,11577],[4303,11579],[4305,11589],[4311,11479],[4315,11479],[4316,11480],[4317,11593],[4318,11484],[4319,11569],[4320,11483],[4321,11369],[4325,11591],[4326,11591],[4327,11467],[4328,11652],[4329,11467],[4330,11467],[4331,11467],[4332,11467],[4333,11467],[4334,11467],[4335,11467],[4336,11467],[4337,11467],[4338,11467],[4339,11467],[4340,11467],[4341,11427],[4342,11529],[4343,11467],[4344,11467],[4345,11467],[4346,11467],[4347,11467],[4348,11467],[4349,11467],[4350,11467],[4351,11467],[4352,11467],[4353,11467],[4354,11467],[4355,11370],[4356,11441],[4357,11452],[4358,11452],[4359,11426],[4361,11586],[4362,11578],[4370,11580],[4371,11389],[4383,11612],[4384,11580],[4385,11580],[4386,11580],[4387,11532],[4388,11559],[4389,11581],[4396,11389],[4397,11389],[4398,11435],[4399,11642],[4400,11531],[4404,11389],[4412,11695],[4413,11614],[4415,11369],[4419,11598],[4420,11696],[4422,11615],[4423,11369],[4430,11697],[4431,11369],[4433,11530],[4440,11590],[4444,11513],[4450,11598],[4451,11698],[4452,11616],[4453,11369],[4454,11604],[4455,11507],[4465,11535],[4468,11535],[4469,11613],[4470,11650],[4479,11705],[4480,11705],[4481,11369],[4482,11423],[4486,11423],[4487,11546],[4488,11650],[4489,11602],[4490,11706],[4492,11467],[4493,11467],[4503,11369],[4511,11369],[4512,11369],[4517,11369],[4518,11369],[4526,11638],[4527,11638],[4528,11638],[4532,11542],[4533,11540],[4537,11409],[4539,11540],[4541,11484],[4542,11506],[4544,11506],[4546,11378],[4547,11378],[4548,11378],[4549,11378],[4550,11378],[4551,11378],[4556,11589],[4566,11699],[4567,11705],[4573,11654],[4574,11699],[4575,11378],[4576,11427],[4577,11699],[4580,11567],[4582,11501],[4583,11509],[4584,11654],[4585,11700],[4586,11699],[4588,11529],[4591,11369],[4592,11369],[4597,11369],[4598,11369],[4603,11369],[4604,11369],[4609,11369],[4610,11369],[4615,11369],[4616,11369],[4619,11585],[4621,11517],[4622,11508],[4623,11624],[4624,11491],[4625,11502],[4626,11474],[4628,11560],[4629,11582],[4630,11582],[4631,11547],[4632,11547],[4633,11547],[4634,11560],[4635,11560],[4638,11467],[4642,11467],[4656,11529],[4657,11508],[4658,11529],[4659,11528],[4660,11599],[4662,11529],[4663,11529],[4666,11584],[4667,11610],[4669,11584],[4670,11584],[4671,11584],[4675,11578],[4677,11707],[4679,11707],[4680,11707],[4686,11572],[4687,11606],[4688,11508],[4689,11508],[4690,11574],[4697,11529],[4702,11377],[4709,11442],[4710,11438],[4711,11440],[4712,11369],[4714,11708],[4715,11545],[4716,11624],[4717,11649],[4718,11439],[4719,11442],[4720,11369],[4721,11601],[4723,11601],[4725,11412],[4728,11412],[4777,11601],[4782,11641],[4783,11641],[4795,11599],[4797,11441],[4799,11474],[4800,11605],[4812,11601],[4820,11580],[4821,11427],[4822,11427],[4823,11377],[4824,11392],[4825,11369],[4828,11369],[4830,11369],[4835,11535],[4836,11536],[4844,11558],[4845,11409],[4847,11709],[4850,11587],[4851,11589],[4852,11587],[4853,11561],[4855,11589],[4856,11563],[4859,11700],[4860,11700],[4861,11699],[4862,11700],[4863,11700],[4865,11369],[4866,11371],[4867,11369],[4868,11369],[4869,11416],[4870,11369],[4871,11379],[4872,11371],[4873,11660],[4874,11507],[4875,11665],[4877,11667],[4879,11595],[4881,11448],[4884,11653],[4885,11424],[4887,11581],[4896,11588],[4897,11588],[4898,11467],[4900,11540],[4908,11483],[4918,11599],[4921,11507],[4922,11576],[4923,11425],[4924,11604],[4925,11710],[4926,11604],[4930,11570],[4931,11711],[4939,11417],[4942,11539],[4943,11573],[4944,11575],[4945,11501],[4948,11501],[4949,11501],[4950,11473],[4955,11627],[4956,11627],[4957,11581],[4958,11373],[4960,11540],[4961,11643],[4962,11622],[4963,11659],[4964,11588],[4965,11554],[4966,11415],[4967,11540],[4980,11468],[4981,11378],[4989,11390],[4990,11390],[4991,11540],[4995,11655],[4997,11578],[4999,11470],[5000,11600],[5008,11493],[5010,11369],[5011,11444],[5013,11596],[5014,11550],[5015,11557],[5017,11369],[5024,11599],[5028,11511],[5029,11684],[5032,11597],[5033,11626],[5035,11369],[5044,11530],[5046,11594],[5047,11571],[5049,11591],[5057,11701],[5058,11644],[5060,11369],[5061,11413],[5062,11389],[5066,11664],[5080,11369],[5087,11369],[5088,11369],[5093,11369],[5094,11369],[5099,11369],[5100,11369],[5105,11369],[5106,11369],[5107,11712],[5108,11628],[5112,11603],[5114,11435],[5117,11389],[5118,11512],[5121,11566],[5130,11662],[5131,11668],[5135,11591],[5137,11579],[5140,11599],[5141,11599],[5151,11589],[5244,11713],[5248,11713],[5257,11714],[5267,11506],[5269,11715],[5272,11716],[5283,11716],[5294,11717],[5300,11718],[5303,11719],[5316,11720],[5321,11720],[5324,11467],[5334,11721],[5359,11722],[5363,11723],[5367,11724],[5375,11718],[5377,11591],[5636,11725],[5644,11484],[5649,11723],[5660,11718],[5675,11726],[5678,11727],[5680,11727],[5682,11727],[6003,11728],[6011,11716],[6015,11729],[6016,11715],[6018,11730],[6030,11715],[6039,11712],[6043,11730],[6045,11731],[6048,11730],[6049,11730],[6050,11731],[6051,11731],[6061,11708],[6062,11732],[6068,11733],[6069,11389],[6075,11734],[6077,11716],[6078,11734],[6080,11734],[6082,11734],[6084,11716],[6085,11734],[6092,11683],[6094,11719],[6095,11721],[6096,11598],[6098,11719],[6099,11719],[6100,11693],[6101,11693],[6102,11693],[6168,11708],[6169,11528],[6428,11633],[6430,11683],[6432,11735],[6576,11736],[6577,11718],[6583,11715],[6584,11715],[6586,11598],[6594,11513],[6595,11513],[6596,11501],[6856,11709],[6857,11709],[6858,11709],[6864,11506],[6885,11467],[6923,11718],[6927,11708],[6931,11467],[6936,11737],[7038,11506],[7042,11716],[7046,11731],[7270,11467],[7280,11718],[7282,11467],[7311,11709],[7327,11705],[7329,11705],[7340,11578],[7341,11578],[7421,11738],[7432,11739],[7433,11739],[7435,11740],[7446,11715],[7452,11654],[7453,11666],[7588,11719],[7589,11719],[7591,11741],[7592,11585],[7594,11741],[7595,11742],[7746,11586],[7748,11709],[7749,11743],[7758,11744],[7763,11745],[7766,11746],[7774,11723],[7777,11723],[7783,11732],[7819,11718],[7834,11718],[7846,11601],[7893,11484],[7894,11484],[7899,11717],[7910,11718],[7913,11718],[7921,11747],[7922,11705],[7923,11723],[7933,11705],[7934,11723],[7940,11723],[7953,11389],[7964,11723],[7985,11721],[8023,11721],[8034,11748],[8035,11749],[8083,11750],[8104,11723],[8109,11718],[8110,11708],[8142,11705],[8163,11371],[8164,11371],[8165,11371],[8166,11371],[8171,11642],[8180,11723],[8211,11716],[8223,11751],[8224,11752],[8226,11753],[8233,11753],[8234,11753],[8236,11739],[8239,11709],[8329,11725],[8332,11467],[8345,11726],[8384,11708],[8400,11467],[8417,11655],[8419,11655],[8437,11738],[8448,11721],[8449,11754],[8451,11754],[8453,11754],[8455,11754],[8457,11754],[8471,11723],[8495,11591],[8499,11719],[9072,11718],[9096,11708],[9257,11591],[9471,11755],[9479,11467],[9628,11522],[9629,11523],[9630,11523],[9631,11523],[9632,11523],[9633,11523],[9634,11523],[9635,11523],[9636,11523],[9637,11523],[9641,11469],[9645,11469],[9646,11469],[9647,11469],[9648,11469],[9649,11469],[9650,11469],[9651,11469],[9652,11469],[9653,11469],[9654,11469],[9655,11469],[9656,11469],[9657,11469],[9658,11469],[9659,11469],[9660,11469],[9661,11469],[9662,11469],[9663,11469],[9664,11469],[9665,11469],[9666,11469],[9667,11469],[9668,11469],[9669,11469],[9670,11469],[9671,11469],[9672,11469],[9673,11469],[9674,11469],[9675,11469],[9676,11469],[9677,11670],[9678,11671],[9696,11565],[9713,11672],[9715,11672],[9718,11672],[9732,11672],[9764,11672],[9789,11569],[9790,11614],[9791,11615],[9792,11616],[9793,11576],[9794,11659],[9795,11550],[9796,11644],[9849,11756],[9857,11550],[9863,11673],[9864,11550],[9888,11550],[9897,11674],[9899,11674],[9900,11674],[9911,11674],[9930,11607],[9931,11607],[9967,11757],[9980,11607],[9981,11607],[9987,11743],[9988,11743],[9989,11758],[9990,11758],[9991,11758],[9992,11758],[9993,11758],[9995,11409],[9999,11369],[10000,11481],[10001,11481],[10002,11481],[10003,11462],[10005,11389],[10009,11369],[10011,11369],[10012,11369],[10014,11369],[10019,11369],[10020,11369],[10021,11479],[10024,11479],[10025,11480],[10026,11484],[10027,11483],[10028,11369],[10029,11389],[10030,11389],[10031,11389],[10032,11389],[10037,11695],[10038,11369],[10041,11696],[10042,11369],[10047,11697],[10048,11369],[10053,11698],[10054,11369],[10058,11369],[10059,11423],[10060,11423],[10063,11369],[10069,11369],[10070,11369],[10074,11369],[10075,11369],[10076,11409],[10078,11484],[10082,11699],[10083,11654],[10084,11699],[10085,11699],[10086,11700],[10087,11699],[10089,11369],[10090,11369],[10094,11369],[10095,11369],[10099,11369],[10100,11369],[10104,11369],[10105,11369],[10109,11369],[10110,11369],[10112,11491],[10123,11369],[10124,11369],[10126,11412],[10127,11412],[10139,11369],[10142,11369],[10144,11369],[10145,11409],[10149,11700],[10150,11700],[10151,11699],[10152,11700],[10153,11700],[10154,11369],[10155,11369],[10156,11369],[10157,11369],[10159,11483],[10162,11470],[10166,11369],[10168,11369],[10173,11369],[10178,11701],[10179,11369],[10180,11413],[10181,11389],[10184,11369],[10188,11369],[10189,11369],[10193,11369],[10194,11369],[10198,11369],[10199,11369],[10203,11369],[10204,11369],[10208,11389],[10221,11484],[10224,11412],[10229,11389],[10246,11484],[10247,11484],[10248,11389],[10266,11479],[10267,11479],[10268,11480],[10269,11484],[10270,11483],[10272,11484],[10276,11483],[10277,11484],[10279,11484],[10280,11484],[10281,11479],[10282,11479],[10283,11483],[10288,11483],[10289,11493],[10290,11493],[10291,11493],[10292,11493],[10293,11739],[10294,11739],[10295,11739],[10296,11638],[10297,11638],[10298,11638],[10302,11621],[10354,11524],[10357,11675],[10377,11687],[10378,11687],[10393,11592],[10396,11593],[10435,11542],[10478,11595],[10510,11596],[10518,11597],[10523,11594],[10548,11542],[10549,11542],[10550,11542],[10551,11542],[10593,11593],[10597,11595],[10603,11676],[10633,11677],[10659,11688],[10660,11688],[10661,11688],[10662,11585],[10665,11585],[10666,11742],[10667,11759],[10668,11760],[10669,11760],[10670,11760],[10671,11760],[10672,11760],[10673,11678],[10704,11666],[10715,11666],[10720,11666],[10721,11666],[10734,11473],[10735,11473],[10736,11473],[10737,11571],[10738,11571],[10759,11468],[10762,11468],[10763,11689],[10764,11689],[10765,11689],[10766,11689],[10769,11690],[10770,11691],[10771,11691],[10772,11691],[10773,11691],[10774,11691],[10775,11691],[10776,11691],[10777,11691],[10778,11468],[10779,11390],[10780,11390],[10791,11555],[10792,11655],[10793,11557],[10812,11738],[10820,11655],[10822,11655],[10825,11738],[10831,11754],[10833,11754],[10835,11754],[10837,11754],[10839,11754],[10845,11566],[10851,11761],[10852,11761],[10856,11415],[10857,11467],[10859,11502],[10860,11415],[10864,11373],[10865,11681],[10866,11681],[10867,11415],[10877,11373],[10883,11373],[11072,11373],[11194,11373],[11289,11387],[11290,11387],[11313,11377],[11314,11377],[11315,11377],[11317,11377],[11321,11377],[11334,11392],[11335,11392],[11342,11620]],"b":[[28,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[29,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[30,"impl-Add-for-ChunkedArray%3CT%3E"],[31,"impl-Add-for-%26ChunkedArray%3CT%3E"],[32,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[33,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[34,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[35,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[36,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[37,"impl-Add-for-ChunkedArray%3CStringType%3E"],[38,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[39,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[41,"impl-AggList-for-ChunkedArray%3CListType%3E"],[42,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[43,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[44,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[45,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[46,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[47,"impl-AggList-for-ChunkedArray%3CStructType%3E"],[48,"impl-AggList-for-ChunkedArray%3CT%3E"],[51,"impl-ChunkedArray%3CListType%3E"],[52,"impl-ChunkedArray%3CFixedSizeListType%3E"],[53,"impl-ChunkedArray%3CListType%3E"],[54,"impl-ChunkedArray%3CFixedSizeListType%3E"],[58,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[59,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[60,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[61,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[62,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[63,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[65,"impl-ChunkedArray%3CFixedSizeListType%3E"],[66,"impl-ChunkedArray%3CListType%3E"],[68,"impl-ChunkedArray%3CFloat32Type%3E"],[69,"impl-ChunkedArray%3CFloat64Type%3E"],[73,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[74,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[75,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[76,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[77,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[78,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[79,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[80,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[81,"impl-ChunkedArray%3CBinaryType%3E"],[82,"impl-ChunkedArray%3CStringType%3E"],[83,"impl-ChunkedArray%3CT%3E"],[85,"impl-ChunkedArray%3CListType%3E"],[86,"impl-ChunkedArray%3CFixedSizeListType%3E"],[87,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[88,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[89,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[90,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[91,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[92,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[93,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[94,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[95,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[96,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[97,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[98,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[100,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[101,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[102,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[103,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[104,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[105,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[106,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[107,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[108,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[109,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[110,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[111,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[112,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[113,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[114,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[115,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[118,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[119,"impl-ChunkedArray%3CStringType%3E"],[123,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[124,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[126,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[127,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[128,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[129,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[130,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[131,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[132,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[133,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[134,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[143,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[144,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[145,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[146,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[147,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[148,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[149,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[150,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[151,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[152,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[153,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[154,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[155,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[156,"impl-ChunkedArray%3CStructType%3E"],[157,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[160,"impl-Container-for-ChunkedArray%3CT%3E"],[161,"impl-ChunkedArray%3CT%3E"],[180,"impl-Div-for-ChunkedArray%3CT%3E"],[181,"impl-Div-for-%26ChunkedArray%3CT%3E"],[182,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[183,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[190,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[191,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[192,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[193,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[194,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[195,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[196,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[197,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[198,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[199,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[200,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[201,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[202,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[203,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[204,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[205,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[206,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[207,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[208,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[209,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[210,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[211,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[215,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[216,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[217,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[218,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[219,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[220,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[221,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[224,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[225,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[226,"impl-Debug-for-ChunkedArray%3CListType%3E"],[227,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[228,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[229,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[230,"impl-Debug-for-ChunkedArray%3CT%3E"],[232,"impl-ChunkedArray%3CFixedSizeListType%3E"],[233,"impl-ChunkedArray%3CListType%3E"],[242,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[243,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[244,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[245,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[246,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[247,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[248,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[249,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[250,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[251,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[252,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[253,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[254,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[255,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[256,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[257,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[258,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[259,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[260,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[261,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[262,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[263,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[264,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[265,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[266,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[267,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[268,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[269,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[270,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[271,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[272,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[273,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[274,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[275,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[277,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[278,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[279,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[280,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[281,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[282,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[283,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[284,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[287,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[288,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[289,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[290,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[291,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[292,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[293,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[294,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[295,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[296,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[297,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[298,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[301,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[302,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[303,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[304,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[305,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[306,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[307,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[308,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[309,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[310,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[311,"impl-ChunkFullNull-for-ChunkedArray%3CStructType%3E"],[312,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[313,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[314,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[315,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[316,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[317,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[319,"impl-ChunkedArray%3CListType%3E"],[320,"impl-ChunkedArray%3CFixedSizeListType%3E"],[322,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[323,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[324,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[325,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[326,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[327,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[328,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[329,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[330,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[331,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[332,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[333,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[334,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[335,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[336,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[337,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[338,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[339,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[340,"impl-ChunkedArray%3CFixedSizeListType%3E"],[341,"impl-ChunkedArray%3CListType%3E"],[345,"impl-ChunkedArray%3CFixedSizeListType%3E"],[346,"impl-ChunkedArray%3CListType%3E"],[354,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[355,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[356,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[357,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[358,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[359,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[360,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[361,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[362,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[363,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[364,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[365,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[367,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[368,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[369,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[370,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[371,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[372,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[373,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[374,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[375,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[376,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[377,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[378,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[379,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[380,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[381,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[382,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[383,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[384,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[390,"impl-ChunkedArray%3CListType%3E"],[391,"impl-ChunkedArray%3CFixedSizeListType%3E"],[400,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[401,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[402,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[403,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[404,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[405,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[406,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[407,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[409,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[410,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[429,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[435,"impl-Container-for-ChunkedArray%3CT%3E"],[436,"impl-ChunkedArray%3CT%3E"],[441,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[442,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[443,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[444,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[445,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[446,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[447,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[448,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[449,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[450,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[451,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[452,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[453,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[454,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[455,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[456,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[457,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[458,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[459,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[460,"impl-ChunkedArray%3CBooleanType%3E"],[461,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[462,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[463,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[464,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[465,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[466,"impl-ChunkedArray%3CBooleanType%3E"],[467,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[468,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[469,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[470,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[471,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[472,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[480,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[481,"impl-ChunkedArray%3CBooleanType%3E"],[483,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[484,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[485,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[486,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[487,"impl-ChunkedArray%3CT%3E"],[488,"impl-ChunkedArray%3CBooleanType%3E"],[489,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[490,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[491,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[492,"impl-Mul-for-ChunkedArray%3CT%3E"],[495,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[496,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[497,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[499,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[500,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[501,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[502,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[503,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[504,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[505,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[506,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[507,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[508,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[509,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[510,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[511,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[512,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[513,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[514,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[515,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[516,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[517,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[518,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[519,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[520,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[521,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[522,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[523,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[524,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[525,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[526,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[527,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[528,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[529,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[530,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[531,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[532,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[533,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[534,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[535,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[536,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[537,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[538,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[539,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[540,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[542,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[543,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[544,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[545,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[546,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[547,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[548,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[549,"impl-ChunkExpandAtIndex%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[550,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[556,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[557,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[558,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[559,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[560,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[561,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[562,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[563,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[564,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[565,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[566,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[567,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[568,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[569,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[570,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[571,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[572,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[573,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[574,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[575,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[576,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[577,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[580,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[581,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[583,"impl-ChunkedArray%3CStringType%3E"],[584,"impl-ChunkedArray%3CListType%3E"],[585,"impl-ChunkedArray%3CStringType%3E"],[586,"impl-ChunkedArray%3CListType%3E"],[589,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[590,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[591,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[592,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[593,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[594,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[601,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[602,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[603,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[604,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[605,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[606,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[607,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[608,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[609,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[610,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[611,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[612,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[613,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[614,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[615,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[616,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[617,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[618,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[619,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[620,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[621,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[622,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[623,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[624,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[625,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[626,"impl-Rem-for-ChunkedArray%3CT%3E"],[629,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[630,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[631,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[632,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[633,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[634,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[635,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[636,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[641,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-%26mut+ChunkedArray%3CT%3E"],[642,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[643,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[644,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[645,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[646,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[647,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[648,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[649,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[650,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[651,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[652,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[653,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[654,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[655,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[661,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[662,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[663,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[664,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[665,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[666,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[667,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[668,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[669,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[670,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[671,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[672,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[673,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[674,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[675,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[676,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[678,"impl-Container-for-ChunkedArray%3CT%3E"],[679,"impl-ChunkedArray%3CT%3E"],[680,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[681,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[682,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[683,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[684,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[685,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[686,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[687,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[688,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[689,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[690,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[691,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[692,"impl-ChunkedArray%3CT%3E"],[693,"impl-Container-for-ChunkedArray%3CT%3E"],[695,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[696,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[697,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[699,"impl-Sub-for-ChunkedArray%3CT%3E"],[700,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[701,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[702,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[704,"impl-ChunkedArray%3CBooleanType%3E"],[705,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[706,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[707,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[708,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[710,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[711,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[714,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[715,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStructType%3E"],[716,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[717,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[718,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[719,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[720,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStructType%3E"],[721,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[726,"impl-ChunkedArray%3CListType%3E"],[727,"impl-ChunkedArray%3CFixedSizeListType%3E"],[728,"impl-ChunkedArray%3CT%3E"],[729,"impl-ChunkedArray%3CListType%3E"],[734,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[735,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[736,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[737,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[738,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[739,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[741,"impl-ChunkedArray%3CFixedSizeListType%3E"],[742,"impl-ChunkedArray%3CListType%3E"],[757,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[758,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[759,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[760,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[761,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[767,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[768,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[769,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[770,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[771,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[772,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[773,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[774,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[775,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[776,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[777,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[778,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[779,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[780,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[781,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[782,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[783,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[784,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[785,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[786,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[787,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[788,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[789,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[790,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[791,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[792,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[793,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[794,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[795,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[796,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[797,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[798,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[799,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[800,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[801,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[813,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[814,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[815,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[816,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[817,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[818,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[819,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[820,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[821,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[822,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[823,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[824,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[825,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[826,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[827,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[828,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[829,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[830,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[831,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[832,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[833,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[834,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[835,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[836,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[837,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[838,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[839,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[840,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[841,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[842,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[843,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[844,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[845,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[846,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[847,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[848,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[1028,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1029,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1304,"impl-Flags-for-MetadataProperties"],[1305,"impl-MetadataProperties"],[1306,"impl-MetadataFlags"],[1307,"impl-Flags-for-MetadataFlags"],[1372,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1373,"impl-Metadata%3CT%3E"],[1398,"impl-Debug-for-MetadataProperties"],[1399,"impl-Binary-for-MetadataProperties"],[1400,"impl-LowerHex-for-MetadataProperties"],[1401,"impl-UpperHex-for-MetadataProperties"],[1402,"impl-Octal-for-MetadataProperties"],[1403,"impl-UpperHex-for-MetadataFlags"],[1404,"impl-Binary-for-MetadataFlags"],[1405,"impl-Octal-for-MetadataFlags"],[1406,"impl-LowerHex-for-MetadataFlags"],[1407,"impl-Debug-for-MetadataFlags"],[1417,"impl-MetadataProperties"],[1418,"impl-Flags-for-MetadataProperties"],[1419,"impl-MetadataFlags"],[1420,"impl-Flags-for-MetadataFlags"],[1433,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1434,"impl-Metadata%3CT%3E"],[1477,"impl-Metadata%3CT%3E"],[1478,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1482,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1483,"impl-Metadata%3CT%3E"],[1560,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1561,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1595,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1596,"impl-ObjectArray%3CT%3E"],[1611,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1612,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1622,"impl-ObjectArray%3CT%3E"],[1623,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1625,"impl-ObjectArray%3CT%3E"],[1626,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1628,"impl-ObjectArray%3CT%3E"],[1629,"impl-Array-for-ObjectArray%3CT%3E"],[1632,"impl-ObjectChunkedBuilder%3CT%3E"],[1633,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1635,"impl-ObjectChunkedBuilder%3CT%3E"],[1636,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[2385,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2386,"impl-Logical%3CDurationType,+Int64Type%3E"],[2388,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2389,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2390,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2391,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2392,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2694,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2695,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2696,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2697,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2698,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2705,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2706,"impl-PartialEq-for-DataType"],[2713,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2714,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2715,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2716,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2717,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2718,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2751,"impl-Display-for-AnyValue%3C\'_%3E"],[2752,"impl-Debug-for-AnyValue%3C\'a%3E"],[2754,"impl-Display-for-DataType"],[2755,"impl-Debug-for-DataType"],[2758,"impl-Debug-for-TimeUnit"],[2759,"impl-Display-for-TimeUnit"],[2764,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2766,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2779,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2780,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2781,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2782,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2784,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2786,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2788,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2789,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2791,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2793,"impl-From%3C%26ArrowField%3E-for-Field"],[2817,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2818,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2840,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2841,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2842,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2843,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2844,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2847,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2848,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2849,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2850,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2851,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2887,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2888,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2889,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2890,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2891,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2892,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2994,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[2995,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[2996,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[2997,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[2998,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[3043,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3044,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3045,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3046,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3047,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3048,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3083,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3084,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3085,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3086,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3087,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3088,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3089,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3090,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3096,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3097,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3098,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3099,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3100,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3101,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3104,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[3105,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[3124,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[3125,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[3131,"impl-Logical%3CDurationType,+Int64Type%3E"],[3132,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3138,"impl-Logical%3CDateType,+Int32Type%3E"],[3139,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3140,"impl-Logical%3CTimeType,+Int64Type%3E"],[3155,"impl-Logical%3CDurationType,+Int64Type%3E"],[3156,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3204,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3205,"impl-Logical%3CTimeType,+Int64Type%3E"],[3206,"impl-Logical%3CDateType,+Int32Type%3E"],[3211,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[3212,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3498,"impl-Display-for-ErrString"],[3499,"impl-Debug-for-ErrString"],[3500,"impl-Display-for-PolarsError"],[3501,"impl-Debug-for-PolarsError"],[3505,"impl-From%3CParquetError%3E-for-PolarsError"],[3506,"impl-From%3CError%3E-for-PolarsError"],[3507,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3508,"impl-From%3CError%3E-for-PolarsError"],[3509,"impl-From%3CError%3E-for-PolarsError"],[3511,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3641,"impl-Debug-for-DataFrame"],[3642,"impl-Display-for-DataFrame"],[3674,"impl-Index%3C%26str%3E-for-DataFrame"],[3675,"impl-Index%3Cusize%3E-for-DataFrame"],[3676,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3677,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3678,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3679,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3680,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3681,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3700,"impl-DataFrame"],[3701,"impl-Container-for-DataFrame"],[3708,"impl-Container-for-DataFrame"],[3709,"impl-DataFrame"],[3747,"impl-DataFrame"],[3748,"impl-Container-for-DataFrame"],[3752,"impl-Container-for-DataFrame"],[3753,"impl-DataFrame"],[3774,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BArrowField%5D)%3E-for-DataFrame"],[3775,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3957,"impl-Debug-for-GroupByMethod"],[3958,"impl-Display-for-GroupByMethod"],[3964,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3965,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3966,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[4001,"impl-IntoIterator-for-%26GroupsIdx"],[4002,"impl-IntoIterator-for-GroupsIdx"],[4004,"impl-IntoParallelIterator-for-GroupsIdx"],[4005,"impl-IntoParallelIterator-for-%26GroupsIdx"],[5327,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[5328,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[5332,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[5333,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[5361,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5362,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[5384,"impl-OptState"],[5385,"impl-Flags-for-OptState"],[6145,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[6146,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[6147,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[6156,"impl-Default-for-Arc%3C%5BT%5D%3E"],[6157,"impl-Default-for-Arc%3CCStr%3E"],[6158,"impl-Default-for-Arc%3Cstr%3E"],[6159,"impl-Default-for-Arc%3CT%3E"],[6637,"impl-PartialEq-for-Expr"],[6638,"impl-Expr"],[6641,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[6642,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[6659,"impl-PartialEq-for-Arc%3CT,+A%3E"],[6660,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[6661,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[6666,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[6667,"impl-PartialEq-for-StructArray"],[6945,"impl-Debug-for-Duration"],[6946,"impl-Display-for-Duration"],[6963,"impl-Debug-for-JoinType"],[6964,"impl-Display-for-JoinType"],[6966,"impl-Display-for-JoinValidation"],[6967,"impl-Debug-for-JoinValidation"],[6985,"impl-Display-for-Expr"],[6986,"impl-Debug-for-Expr"],[6988,"impl-Display-for-Operator"],[6989,"impl-Debug-for-Operator"],[6991,"impl-Debug-for-BooleanFunction"],[6992,"impl-Display-for-BooleanFunction"],[6993,"impl-Display-for-CategoricalFunction"],[6994,"impl-Debug-for-CategoricalFunction"],[6995,"impl-Display-for-TemporalFunction"],[6996,"impl-Debug-for-TemporalFunction"],[6997,"impl-Display-for-PowFunction"],[6998,"impl-Debug-for-PowFunction"],[6999,"impl-Debug-for-StringFunction"],[7000,"impl-Display-for-StringFunction"],[7001,"impl-Debug-for-StructFunction"],[7002,"impl-Display-for-StructFunction"],[7003,"impl-Debug-for-FunctionExpr"],[7004,"impl-Display-for-FunctionExpr"],[7014,"impl-Debug-for-OptState"],[7015,"impl-Binary-for-OptState"],[7016,"impl-LowerHex-for-OptState"],[7017,"impl-Octal-for-OptState"],[7018,"impl-UpperHex-for-OptState"],[7022,"impl-Debug-for-Arc%3CT,+A%3E"],[7023,"impl-Pointer-for-Arc%3CT,+A%3E"],[7024,"impl-Display-for-Arc%3CT,+A%3E"],[7057,"impl-From%3CDslPlan%3E-for-LazyFrame"],[7058,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[7135,"impl-From%3CAggExpr%3E-for-Expr"],[7136,"impl-From%3Ci16%3E-for-Expr"],[7137,"impl-From%3Ci32%3E-for-Expr"],[7138,"impl-From%3C%26str%3E-for-Expr"],[7139,"impl-From%3Cu16%3E-for-Expr"],[7140,"impl-From%3Ci8%3E-for-Expr"],[7141,"impl-From%3Cu32%3E-for-Expr"],[7142,"impl-From%3Cu64%3E-for-Expr"],[7144,"impl-From%3Cbool%3E-for-Expr"],[7145,"impl-From%3Cu8%3E-for-Expr"],[7146,"impl-From%3Ci64%3E-for-Expr"],[7147,"impl-From%3Cf64%3E-for-Expr"],[7148,"impl-From%3Cf32%3E-for-Expr"],[7151,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7152,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7153,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7154,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7155,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7156,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7157,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7158,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7160,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7161,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7168,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[7169,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[7171,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[7172,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[7188,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[7189,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[7190,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[7191,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[7192,"impl-From%3CT%3E-for-Arc%3CT%3E"],[7193,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[7194,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[7195,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[7196,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[7197,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[7198,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[7199,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[7200,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[7203,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[7204,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[7211,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[7212,"impl-From%3CMutableStructArray%3E-for-StructArray"],[7215,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[7217,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[7218,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[7219,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[7220,"impl-From%3CArrowSchema%3E-for-Schema"],[7221,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[7230,"impl-Flags-for-OptState"],[7231,"impl-OptState"],[7240,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7241,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7250,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7251,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7264,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7265,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[8389,"impl-StructArray"],[8390,"impl-Array-for-StructArray"],[8396,"impl-StructArray"],[8397,"impl-Array-for-StructArray"],[8657,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[8658,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[8662,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[8663,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[9099,"impl-StructArray"],[9100,"impl-Array-for-StructArray"],[9352,"impl-LazyFileListReader-for-LazyCsvReader"],[9353,"impl-LazyCsvReader"],[9354,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9355,"impl-LazyJsonLineReader"],[9400,"impl-LazyCsvReader"],[9401,"impl-LazyFileListReader-for-LazyCsvReader"],[9402,"impl-LazyJsonLineReader"],[9403,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9443,"impl-StructArray"],[9444,"impl-Array-for-StructArray"],[9917,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[9918,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[9923,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[9924,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[10617,"impl-Display-for-RollingFunction"],[10618,"impl-Debug-for-RollingFunction"],[10647,"impl-Debug-for-RollingFunctionBy"],[10648,"impl-Display-for-RollingFunctionBy"],[10873,"impl-Add%3CT%3E-for-%26Series"],[10874,"impl-Add-for-%26Series"],[10875,"impl-Add-for-Series"],[10876,"impl-Add%3CT%3E-for-Series"],[10892,"impl-SeriesSealed-for-Series"],[10893,"impl-AsSeries-for-Series"],[10946,"impl-Div-for-Series"],[10947,"impl-Div%3CT%3E-for-Series"],[10948,"impl-Div%3CT%3E-for-%26Series"],[10949,"impl-Div-for-%26Series"],[10960,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10961,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10962,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10964,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10965,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10966,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10982,"impl-Debug-for-Series"],[10983,"impl-Display-for-Series"],[10989,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[10990,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[10991,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[10992,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[10993,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[11000,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[11001,"impl-FromIterator%3C%26u32%3E-for-Series"],[11002,"impl-FromIterator%3CString%3E-for-Series"],[11003,"impl-FromIterator%3C%26str%3E-for-Series"],[11004,"impl-FromIterator%3C%26bool%3E-for-Series"],[11005,"impl-FromIterator%3Cbool%3E-for-Series"],[11006,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[11007,"impl-FromIterator%3C%26f64%3E-for-Series"],[11008,"impl-FromIterator%3Cf64%3E-for-Series"],[11009,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[11010,"impl-FromIterator%3C%26f32%3E-for-Series"],[11011,"impl-FromIterator%3Cf32%3E-for-Series"],[11012,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[11013,"impl-FromIterator%3Cu8%3E-for-Series"],[11014,"impl-FromIterator%3C%26u8%3E-for-Series"],[11015,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[11016,"impl-FromIterator%3Cu16%3E-for-Series"],[11017,"impl-FromIterator%3Ci64%3E-for-Series"],[11018,"impl-FromIterator%3C%26i64%3E-for-Series"],[11019,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[11020,"impl-FromIterator%3C%26i32%3E-for-Series"],[11021,"impl-FromIterator%3Ci32%3E-for-Series"],[11022,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[11023,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[11024,"impl-FromIterator%3Cu32%3E-for-Series"],[11025,"impl-FromIterator%3C%26i16%3E-for-Series"],[11026,"impl-FromIterator%3Ci16%3E-for-Series"],[11027,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[11028,"impl-FromIterator%3C%26i8%3E-for-Series"],[11029,"impl-FromIterator%3Ci8%3E-for-Series"],[11030,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[11031,"impl-FromIterator%3C%26u64%3E-for-Series"],[11032,"impl-FromIterator%3Cu64%3E-for-Series"],[11033,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[11034,"impl-FromIterator%3C%26u16%3E-for-Series"],[11035,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[11036,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[11037,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[11038,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[11039,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[11040,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[11041,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[11042,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[11043,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[11044,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[11045,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[11057,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11058,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11059,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11061,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11062,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11063,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11104,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11105,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11106,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11108,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11109,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11110,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11119,"impl-Mul%3CT%3E-for-Series"],[11120,"impl-Mul%3CT%3E-for-%26Series"],[11121,"impl-Mul-for-%26Series"],[11122,"impl-Mul-for-Series"],[11127,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[11128,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[11129,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[11130,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[11131,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[11132,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[11133,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[11134,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[11135,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[11136,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[11137,"impl-NamedFrom%3CT,+T%3E-for-Series"],[11138,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[11139,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[11140,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[11141,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[11142,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[11143,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[11144,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[11145,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[11146,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[11147,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[11148,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[11149,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[11150,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[11151,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[11152,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[11153,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[11154,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[11155,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[11156,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[11157,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[11158,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[11159,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[11160,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[11161,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[11162,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[11163,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[11164,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[11165,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[11166,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[11167,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[11168,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[11169,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[11170,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[11171,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[11172,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[11173,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[11174,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[11175,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[11176,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[11177,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[11178,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[11179,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[11185,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11186,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11187,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11189,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11190,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11191,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11199,"impl-Rem%3CT%3E-for-%26Series"],[11200,"impl-Rem%3CT%3E-for-Series"],[11201,"impl-Rem-for-%26Series"],[11230,"impl-Sub-for-Series"],[11231,"impl-Sub-for-%26Series"],[11232,"impl-Sub%3CT%3E-for-%26Series"],[11233,"impl-Sub%3CT%3E-for-Series"],[11258,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[11259,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[11260,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[11261,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAAwAEAAAACUPcQ+uD7EPsg+zD7QPtQ+6D70Pwg/DD+gP","e":"OzAAAAEAAJsgTwQCAAAABQABAAgAAAALAAIAEAAAABIAAAAUAB0AOwAFAEUAAgBJAAsAWAAHAGEACQBsAAAAbgAAAHAABAB2ABYAjgAAAJAAEQClAAMAqgABALAADQC/ABUA1wAHAOAACgDsAAAA7gABAPIAHQAWARUALgETAEMBAABFARQAXAEBAGABAQBjAR4AhAECAIwBEACeAQMApQECAKoBAQCtAQcAugEhAOEBBgDqAQgA9AE1AC0CFQBEAgIASAIEAE4CBQBYAgAAWgIaAHYCBwCCAhEAlgIPAKcCAACpAgsAtgIPAMkCAwDRAgAA1AIBANsCAADfAgYA5wIAAOkCAwDuAg0A/QIAAP8CKAAqAwIALgMjAFUDNACMAwgAmQMRAK4DXAAYBBIANgQHAD8ESQCMBA8AnQQBAKAEGQC7BAAAvgQOANAEAgDWBAIA2wQcAPkECQAEBQoAGQUAABwFAAAhBSAARgUSAFsFAABdBQkAaQUDAG8FAQBzBQ0AiwUAAI0FAACQBQEAlgUHAJ8FBwC0BQEAuAUAALsFAwDDBQUAygUEANYFCwDpBQQA8AUNAAAGBgAKBgcAEwYBABcGFgAvBgcAOAYAADsGAQA+BgEAQwYQAFUGAABYBgAAWgYCAF4GAgBiBgEAZQYIAG8GAABxBgUAeQYBAHwGAAB+BgEAgQYDAIYGAwCLBgIAjwYDAJUGAACYBgAAoAYAAKUGAACoBgEArQYBALAGAACzBgAAuwYAAMEGAgDMBgYA1gYSAOsGBQDzBggA/gYEAAUHAAAHBwAACQcBAA8HBQAYBwEAIQcBAC0HAAAvBwEAMgcAADUHAAA3BwAAOwcAAD0HAABCBwwAUQcCAGAHAABiBwcAawcBAG4HAAByBwAAdAcDAHkHAQB8BwUAiAcXAKEHAQClBwQAqwcDALIHBwDHBwMAzAcIANYHBADdBwIA4QcFAOkHAADrBw0A/QcBAAEIAQAHCAEACggBAA0IAwASCAAAFAgAABcIAQAbCAAAHQgBACAIAAAiCAIAJggMADQIAAA2CAEAOQgAADsIAQA+CAAAQAgBAEMIAABFCAEASAgDAE8IAABTCAEAVwgAAFoIAABcCAAAXggDAGMIAABmCAgAcAgBAHMIBAB6CAEAfggAAIAIAgCECAEAiggDAI8IAQCSCAAAlAgBAJcIAACZCAEAnAgAAJ4IAQChCAAAowgBAKYIAACoCAAAqwgkANEIFwDqCGYAVAmOAOQJBwDuCZcAhwoFAI4KKgC6ChAAzQoAAM8KAADcCgMA4QoAAOMKAADlCgEA6AoAAOoKAQACCwEABQsAAA0LAAAQCwAAEgsFABkLBAAfCwUAJgsAACgLGgBICw0AWAsrAIULAACxCwcAuwsAAL0LAQDACwMAxQsBAMoLAADMCwUA0wsAANYLAgDbCwMA4AsAAOMLDQDzCwAA9gsOAAYMAAAJDAsAFgwMACQMAQAnDAAAKQwNADgMAABADAAAQgwAAEcMEABaDAAAXAwCAGEMIACEDAAAiAxkAO4MLQAdDQEAIA01AFcNAQBaDQgAZA0AAGYNAQBpDQQAbw0BAHQNAAB2DQIAeg0AAH0NBACDDQQAiQ0SAJ0NEQCxDQUAuA0EAMANBADGDRUA3w0AAOINCgDuDQIA9g0WAA8OEAApDgEALQ4CADEOAAAzDgAAOA4DAEEOAABQDgAAUg4AAFQOAQBbDgwAbg4CAHYOAAB5DgAAfQ4AAIIOAQCPDgEAkw4AAJkOAACiDgEApQ4BAKkOAACrDgEAsg4AALQOAwC7DgYAxA4JAM8OAADUDgEA2A4EAOQODgD0DgIA+A4AAPoOCQAFDwEACA8DAA0PAwASDwkAHQ8HACYPAQApDx0ASA8oAHIPBgB9DwIAgg8AAIQPAACGDwMAjA8AAJAPBwCgDw0Arw8BALYPAwC7DwEAvw8CAMQPAADGDx8A6Q8MAPgPBQD/DwcACBAjAC4QDgA+EA8ATxAAAFIQAwBZEAYAYxAOAHQQBQB8EAAAfxAIAIkQAQCNEAQAkxAFAJoQAACfEAkAqhABAK4QBAC0EAEAtxAKAMMQAADGEAAAyBAJANMQAADWEAkA4RAEAOoQAADtEAAA9RACAPwQAAD/EAEABREKABEREgAnEQcAMBEBADMRBQA9EQQARREEAE8RAwBUEQAAVhELAGQRBABqEQUAchEBAHYRAAB5EQAAexECAIARAgCEEQUAixEEAJERAwCYEQIAnhEAAKARAQCkEQAAphEEAK0RDwC+EQAAwREBAMQRAwDKEQIA0BEWAOgRCQD0EQAA9hEBAPoRAAD8EQEAABIAAAISAQAGEgAACBIEAA8SAgATEgEAFxIAABoSAAAcEgIAIBICACQSCgAxEgcAOhIAADwSAABAEgEARBIAAEYSAABIEgEASxIBAE4SAQBTEgAAVRINAGYSBQBtEgcAdxICAHsSBgCGEgEAiRIAAIsSAQCOEgQAlBIDAJkSAgCdEgAAnxIEAKUSAACnEgYArxIEALUSAQC4EgEAuxIBAL4SAQDBEgAAwxIAAMUSAADJEgIAzhIDANMSBwDdEgIA5BIAAOYSBQDtEgMA8xIAAPUSAAD4EgAA+hIDAP8SAgADEwIABxMAAAkTDgAaExUAMRMTAEgTAQBLEwYAUxMFAFwTAQBgEwAAYhMFAGkTBABvEwAAcRMCAHYTAAB4EwAAfBMBAIETBwCKEwMAkhMGAJoTCQCmEwMAqxMHALQTAAC2EwIAuxMCAMITBQDJExIA3hMAAOATAQDkEwAA5hMBAOoTAADsEwEA8BMAAPITBAD5EwMA/hMAAAAUAQAGFAkAERQAABQUBgAdFAIAIRRdAIAUAgCHFAAAiRQAAIwUBQCUFAAAnBQAAKAUAACiFAAAphQFALAUAAC0FAAAuxQAAL8UAADLFAIAzxQIANkUAADbFAEA3hQCAOUUAQDoFAQA7hQBAPYUCgAEFQAABxUAAAoVAAAMFQAADhX1AAUWAQAIFgEACxYAAA0WAgATFgAAFxYAABsWAAAdFgAAHxYAACUWAAAoFgEAKxYAADUWTACDFg0AkhbeAHIXAQB4FwIAfhcCAIQXCgCSFwQAmBcAAJ4XAACgFwAAqxcBAK8XAACxFwAAthcAALsXAQDKFwAA0BcAANUXAgDbFwAA3RcFAOUXJwARGAIBFhkAABsZAQAeGQMAJRkAACcZAwAvGQgAORlhAJwZDwCxGQEAthkBALoZAAC9GQMAwhksAPAZEwAFGgwAFRqtAMcaAADOGgAA0BoBANMaAADVGgAA2RoAAN0aAADfGgAA5hoAAOkaAADxGgAA9BoCAPsaBgADGwEABhsAAAgbAwAQGwAAEhsAABQbAQAZG2cAghsAAIUbAACSGwEAthsAAL4bAADBGwAA4BsHAOkbBADwGwcA+RsBAAEcAQAEHAEACxwAABIcAAAjHAAALBwBADAcAAAyHAQAOBwAAD8cAABCHAAARRwFAE0cAABTHAEAWBwCAF4cBQBlHAIAaRwBAG0cAgBxHAAAcxwAAHUcAAB6HAAAgxwAAIYcAQCJHAIAjhwAAJEcAQCWHAEAmRwBAJ0cBACmHAEAqhwAALUcAAC3HD8A+hwDAAIdAAAEHQAABh0DAAwdAAAOHQAAEB0BABMdAAAWHQAAGx0CACAdfgChHQAApx0CAKsdAQArHgAALR4HADgeAwA9HgIAQR4DAEceAABJHgAASx4CAE8eAQBSHgAAVB4AAFceAQBkHgAAZh4AAGkeAQBsHgMAch4CAIMeAQCGHgEAjx4AAJEeAQCUHgAAmB4CAJ4eAQChHgAApB4AAKkeAgCuHgEAsh4CALYeAwC8Hg4A0B4AANYeAQDdHgAA4B4FAOkeAADxHgIA/R4AAAgfAAAOHwEAEh8AABYfAQAZHwAAHB8AACEfAAAjHwAAJR8AACofAAAuHwAAMB8CADcfBgBEHwgAUh8AAFQfAABYHwAAXh8AAGAfBABpHwEAbB8BAG8fAAByHwgAfR8BAIAfAACDHwEAih8AAJQfAACXHwEAoh8GAK8fAgC3HwEAvh8CAMIfAQDMHwAAzh8EANQfBQDbHwMA5B8DAOkfAADrHwIA8R8AAPMfAAD/HwAAAiABAAUgAQAIIAMADiAFABUgBAAhIAAAJyAAAC0gAAAvIAAANCAAADggAAA6IAAAPCABAF8gAABkIAAAbCADAHEgBQB5IAAAgiAAAIYgAgCKIAMAkSAAAJMgAQCWIAEAmSABAJ0gAACiIAMAqSAAALQgAAC2IAAAuCAAAL0gBADHIAEAyiAAAMwgAADOIAAA0SAAANMgAADZIAMA3iAHAOcgAADpIAAA7SAAAPMgAAD2IAAA/CAAAAEhCgAOIQEAEiEAABUhAgAgIQAAMCEAADIhAAA1IQIAOSEDAD8hAQBCIQAARSEAAEkhXQCpIQwAtyEAALshAQDAIQoAzCEAAM4hAQDRIY0AYSIAAGUiegDjIgAA5SIDAPAiAADzIgEA9iJ5AHEjAAB/IwAAgSMAAIcjBACNIwIAkiMAAJUjAACZIwAAnyMAAKEjAACjI3oAJSQDAC4kAAAxJAEANiQBADskAQA+JAAARiQAAEokAQBQJAAAViQAAGAkAABnJAEAciQDAHkkAQCJJAAAiyQAAI8kAACSJAAAlSQAAJskAQCeJAMApiQAALMkAAC6JAAAvCQAAL8kAADHJAAAzCQAANskAADdJAEA5SQCAOskFAABJQEAByUBAAolSABVJQAAVyUAAFklAQBcJQEAXyUGAGclNwChJQUAqCUJALMlAQC2JQAAuiUAALwlAwDBJQEAxCUFAM4lEgDiJQEA5SUCAOolAADtJRYABSYXACEmBAAqJhMAPyYGAFYmAABkJgIAeiYAAIImCACPJgAAkSYNAKAmAgCkJhIAuCYBALsmDwDMJhkA6CYAAOomAgDvJgoA+yYBAP4mBQAFJwgADycEABYnAgAaJwUAIicAACQnDQA2JwEAOicBAEAnAQBDJwEARicDAEsnAABNJwAAUCcBAFQnAABWJwEAWScAAFsnAgBfJwwAbScAAG8nAQByJwAAdCcBAHcnAAB5JwEAfCcAAH4nAQCBJwMAiCcAAIwnAQCQJwAAkycAAJUnAACXJwMAnCcAAJ8nCACpJwEArCcEALMnAQC3JwAAuScCAL0nAQDDJwMAyCcBAMsnAADNJwEA0CcAANInAQDVJwAA1ycBANonAADcJwEA3ycAAOEnAADkJxIA+CcGAAEoAAAEKBEAFygIACEoAQAkKAgALigAADAoAQA2KAAAOCgEAEEoAQBKKAIAUCgAAFIoAABcKAAAaygDAHMoCgB/KAAAgSgIAIwo7wB9KQEAgCkZAJspAQCeKQ8AsCkSAMQpAADGKRcA3ykBAOMpAADlKQsA8ikCAPkpAAAMKgMAEyoHACgqBQAwKgAAOSoAADsqAQBCKgYASioAAFAqCgBkKgUAayoAAG0qAwByKgUAeioEAIAqAQCEKgAAiioEAJMqAgCXKgkApCoCAKgqAACsKgIAsCoEALkqEQDOKgEA0SoBANYqAQDaKgIA5ioDAO4qBAD1KgEA+CovACsrAAAtKwAAMisBADYrAAA4KwAAOisAAEArAQBDKwMASysDAFYrAgBaKwAAXCsAAF8rAABiKwEAZisBAGsrAABwKwMAdSsAAHgrFwCRKxsArysBALIrAQC3KwEAuysBAMArAgDFKwEAyCsAAMsrAgDRKwEA1CsAANYrAADYKwAA3CsAAN8rAwDoKwAA8CsAAPIrAQD1Kw4ABSwEABAsAAATLAMAGCwAABssCwAoLAAAKiwAACwsBAAyLBYASywBAE8sEABhLAEAZCwEAA=="}],\
["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCCHCQQQQQQIFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNCCNNNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCPTTTTFPPTTFKFFGFGKPTTTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNNMNNNNCNNNNNNNNNMNNNNNNNNNNNNNNNNNNNCHNNNNNNNMNNNNNNNNNMMNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPPPNMMMMMMNMCNNNMMNNNNNNNNMMNMCMMCNNCMMCMMNNNNNNNNNNNNNNNMMMMNMNMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHHKFFNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGFFJJGPPPFPFPPPPIFPPPFPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPKRRRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIKKKKRGPIKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNMNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNHNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNGPPPPGFHHHPPPPPPFPPPPPPGIGPPPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHQQQQHHNNNNNNNNNOOOOJJJEEEEEEEEGPPNNNNNNNNNNHNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNONNOONNNNOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFFKSHHHNNNNNNNNNNNNNNNNOONNNNHNNNNNNNNNNNNNNNNNGFEKIFFEEPFFFKGKFEEEEPPPEPIPPPKKKPFPPIIGKEEPIIIPPEPEEEKEEPPPKKPEPGPPPIFEKPPPGEEIEKGPPGFFFPPEPPEEPKPFPEPEEKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOEONNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNMNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOOONNONMMNNNNNNNNNNNNCNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNOONNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHFNNNNNNNNNNNNNNNNCNNNNNNNHRTKFKINNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNMNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPGEPPKGGPPPFFIKPNNNNNNNNCNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMNMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNNNMNNNNNNNMMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNMNNNMNNMNNNNNNNMNNNNNMNNNNMNNNNNNNNNNNNNNNNNMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFINNNNNNNNNNNNNNNNNNNNNNKKKRMMNNCMMNNMMNNMMNNMMNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNNNKKKKKKFFFFNNHHHHHHHNHHEHNNNNNNNNMNNNNNNNHHNNHHNNNNNNNNNNNNNNNNNHHNNNNNNNNCNNNNNNNNNMNNNNNHHHHNNONNNNNNNNNNMNNMMHMNNNNENMHHHMHNNNNNNNHNNNNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_data_type_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","scalar","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","add","add","add","add","add_to","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_into_string_amortized","apply_kernel","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_inner","apply_to_slice","apply_values","apply_values_generic","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitor","bitxor","borrow","borrow","borrow_mut","borrow_mut","builder","cast","cast_and_apply_in_place","cast_unchecked","cast_with_options","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","deref","deref_mut","deref_mut","div","div","div","div","divide","drop","drop","drop","drop_nulls","dtype","equal","equal","equal_missing","equal_missing","extend","fill_null_with_values","filter","first_non_null","float","fmt","fmt","for_each","for_each_amortized","from","from","from","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iterator_par","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","group_tuples","group_tuples_perfect","gt","gt","gt_eq","gt_eq","has_nulls","head","init","init","init_rand","inner_dtype","interior_mut_metadata","into","into","into_decimal","into_decimal_unchecked","into_iter","into_no_null_iter","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt_eq","lt_eq","max","max","max_reduce","mean","mean","median","median_reduce","merge_metadata","metadata","metadata","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","min","min_max","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not_equal","not_equal","not_equal_missing","not_equal_missing","null_count","object","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","rem","rem","rem","rem","remainder","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","slice","sort","sort_with","split_at","split_at","std","std_reduce","sub","sub","sub","sub","subtract","sum","sum","sum_reduce","tail","take","take","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","to_ndarray","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_generic","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","vzip","vzip","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_null","append_null","append_null","append_null","append_null","append_option","append_option","append_value","append_value","append_value","append_value","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","finish","finish","finish","finish","finish","finish","finish","finish","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","init","init","init","init","into","into","into","into","list","new","new","new","new","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","from","from","from","from","from","from","from","get_list_builder","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new_with_values_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_iter","into_iter","new","next","next","next_back","next_back","par","size_hint","size_hint","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","FAST_EXPLODE_LIST","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","collect_cheap_metadata","collect_cheap_metadata","complement","complement","contains","contains","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","difference","disabled","distinct_count","distinct_count","distinct_count","distinct_count_opt","drop","drop","drop","drop","drop","drop","drop","empty","empty","enabled","eq","eq","experimental_enabled","extend","extend","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_name","from_name","get_distinct_count","get_fast_explode_list","get_fast_explode_list","get_flags","get_flags","get_flags","get_max_value","get_min_value","get_mut","get_sorted_flag","init","init","init","init","init","init","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","is_empty","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","iter","iter_names","iter_names","log","logfile","max_value","max_value","max_value","max_value_opt","merge","min_value","min_value","min_value","min_value_opt","new","not","not","read","remove","remove","set","set","set_distinct_count","set_fast_explode_list","set_fast_explode_list","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","set_sorted_flag","sorted","sorted_opt","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","take","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_read","try_write","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_cheap_metadata","with_cheap_metadata","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Some","Zero","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","deref","deref","deref_mut","deref_mut","descending","descending","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","hash","hash","init","init","into","into","maintain_order","maintain_order","multithreaded","multithreaded","new","new","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_nulls_last_multi","with_order_descending","with_order_descending","with_order_descending_multi","with_order_reversed","with_order_reversed","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","SmartString","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_binary","as_borrowed","as_ref","as_ref","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","bitand","bitor","bitor","bitxor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","call_categorical_merge_operation","cast","cast","cast","cast_leaf","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode_and_offsets","field","fill_null_with_values","fill_null_with_values","filter","filter","filter","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_amortized","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_owned","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_inner","get_object","get_object_unchecked","get_str","get_unchecked","get_unchecked","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","implode","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_decimal","into_decimal_unchecked","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_scalar","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_enum","is_float","is_float","is_integer","is_integer","is_known","is_list","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter_offsets","last","leaf_dtype","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max","max_reduce","max_reduce","max_reduce","mean","median","median","median_reduce","median_reduce","merge_dtypes","min","min_reduce","min_reduce","min_reduce","mmap_slice","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","n_unique","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_logical","newest","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","offsets","oldest","par_iter","par_iter","par_iter_indexed","par_iter_indexed","partial_cmp","partial_cmp","physical","precision","precision","quantile","quantile","quantile_reduce","quantile_reduce","rand_bernoulli","remainder","remainder","remainder","remainder","remainder","remainder","remainder","reverse","reverse","reverse","reverse","reverse","reverse","revmap","scale","scale","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","set","set","set","set_fast_explode","set_inner_dtype","set_name","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","std_reduce","std_reduce","strict_cast","string_cache","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","sum","sum_reduce","sum_reduce","take_unchecked","take_unchecked","take_unchecked","take_unchecked","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_decimal","to_logical","to_logical_type","to_ndarray","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_scale","to_scale","to_string","to_string","to_string","to_string_unchecked","tot_eq","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","try_zip_and_apply_amortized","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unique","unique","unique","value","value_unchecked","value_within_range","values_iter","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_capacity","with_nullable_idx","with_validity_typed","zero","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","append","append_null","append_value","arg_sort","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cast_with_options","clone","clone_into","clone_to_uninit","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drain_iter_and_finish","drop","drop","drop","drop","dtype","equal","equal","equal","equal_missing","equal_missing","equal_missing","finish","finish","finish","from","from","from","from","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","gt","gt","gt_eq","gt_eq","gt_eq","init","init","init","init","into","into","into","into","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","lt","lt","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","max_reduce","merge_map","min_reduce","n_unique","name","new","new","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unique","uses_lexical_ordering","value_counts","vzip","vzip","vzip","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","build_local","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","find","fmt","fmt","from","from","get","get_categories","get_optional","init","init","into","into","is_global","is_local","len","same_src","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow_mut","borrow_mut","constants","deref","deref","deref","deref_mut","deref_mut","drop","drop","feature_gated","fmt","fmt","fmt","from","from","from","get_warning_function","init","init","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","ahash","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","add","add","add","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_lengths","clear","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks","iter_chunks_physical","len","max_horizontal","mean_horizontal","min_horizontal","mul","mul","mul","n_chunks","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","rem","rem","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice","slice_par","sort","sort_in_place","split_at","split_at","split_chunks","split_chunks_by_n","sub","sub","sub","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","to_owned","to_owned","to_string","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","unpivot","unpivot2","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","UnpivotArgs","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","index","init","into","on","streamable","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Float32","Float32","Float64","Float64","Int32","Int32","Int64","Int64","Null","Null","Row","String","String","UInt32","UInt32","UInt64","UInt64","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","IdxHash","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","finish","fmt","from","from","hash","hash","idx","init","init","into","into","populate_multiple_key_hashmap","try_from","try_from","try_into","try_into","type_id","type_id","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vzip","vzip","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","DynArgs","Earliest","Err","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","Midpoint","NamedFrom","NamedFromOwned","Nearest","NewChunkedArray","NoData","NonExistent","None","Null","Null","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","Ok","OutOfBounds","Physical","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","QuantileAggSeries","QuantileInterpolOptions","Raise","Raise","RevMapping","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SQLInterface","SQLSyntax","Scalar","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","Some","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","UnpivotArgs","VarAggSeries","VecHash","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","allocator","as_fd","as_ptr","as_raw_fd","as_ref","assume_init","assume_init","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","cmp","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","context","context_trace","convert_inner_type","data_type","data_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default_arrays","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","df","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","fields","filter","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_params","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_str","from_vec","ge","get_mut","get_mut_unchecked","get_names","get_names_and_dtypes","get_unchecked","gt","hash","hash","hash","hash","hash","idx","increment_strong_count","increment_strong_count_in","index_of","indexes_to_usizes","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_mut","interpol","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_raw","into_raw_with_allocator","into_series","is_empty","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","le","len","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_reduce","max_reduce","median_reduce","metadata","metadata","min_periods","min_reduce","min_reduce","name","ne","negative_to_usize","new","new","new","new_cyclic","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","null","null","partial_cmp","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_reduce","prod_reduce","provide","ptr_eq","quantile_reduce","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_reduce","store","string_cache","strong_count","sum_reduce","sum_reduce","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_project","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_or_clone","utf8","var_reduce","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","weights","window_size","with_metadata","with_metadata","write","write_vectored","error","error","msg","msg","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","set_global_random_seed","Scalar","__clone_box","as_any_value","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","from","init","into","into_series","new","reduce","to_owned","try_from","try_into","type_id","update","value","vzip","mean_reduce","DataType","IS_ARROW","IndexOfSchema","Schema","SchemaNamesAndDtypes","SchemaRef","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","contains","default","deref","deref_mut","drop","ensure_matching_schema","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","get","get_at_index","get_at_index_mut","get_field","get_full","get_names","get_names","get_names_and_dtypes","get_names_and_dtypes","hash","index_of","index_of","init","insert_at_index","into","into_iter","is_empty","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","len","merge","merge_from_ref","new","new_inserting_at_index","remove","rename","reserve","set_dtype","set_dtype_at_index","shift_remove","shift_remove_index","to_arrow","to_owned","to_supertype","try_from","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","type_id","vzip","with_capacity","with_column","Ascending","Ascending","BitRepr","ChunkCompare","Descending","Descending","IntoSeries","IsSorted","IsSorted","Large","Not","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","amortized_iter","append","arg_sort","arg_sort","arg_unique","arg_unique","arithmetic","array_ref","as_any","as_any_mut","as_any_mut","as_list","as_mut","as_ref","as_ref","as_single_ptr","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitand","bitor","bitor","bitxor","bitxor","bool","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","compute_len","decimal","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","dot","drop","drop","drop","drop","drop_nulls","drop_nulls","dtype","dtype","eq","eq","equal","equal","equal","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","field","fill_null","filter","fmt","fmt","fmt","fmt_list","from","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","get_metadata","get_object","get_object","get_object_chunked_unchecked","get_object_chunked_unchecked","get_unchecked","get_unchecked","gt","gt","gt","gt_eq","gt_eq","gt_eq","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","init","into","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_series","is_sorted_flag","iter","iter_chunks","len","len","limit","limit","list","lt","lt","lt","lt_eq","lt_eq","lt_eq","max","max_reduce","max_reduce","mean","mean","mean_reduce","median","median","median_reduce","median_reduce","min","min_reduce","min_reduce","mul","mul","mul","mul","n_chunks","n_chunks","n_chunks","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","quantile_reduce","rechunk","rem","rem","rem","rename","rename","reshape_list","reverse","reverse","rolling_map","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","slice","sort","sort_with","sort_with","split_at","split_at","std","std","std_reduce","std_reduce","str","str_value","strict_cast","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","sum_reduce","tail","take","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","to_arrow","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_mul_owned","try_set_metadata","try_sub_owned","type_id","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique","unique_stable","unpack","var","var","var_reduce","var_reduce","vzip","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","add","add_to","add_to","add_to","checked","div","divide","divide","divide","mul","multiply","multiply","multiply","rem","remainder","remainder","remainder","sub","subtract","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div","checked_div_num","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","Arg","Container","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","SuperTypeOptions","TrustMyLength","Wrap","__clone_box","__clone_box","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all_equal","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","binary_concatenate_validities","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_lengths","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","coalesce_nulls","coalesce_nulls_series","collect_reversed","collect_trusted","concat_df","concat_df_unchecked","contains","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","dtypes_to_schema","dtypes_to_supertype","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","flatten","fmt","fold_options","from","from","from","from","from_fallible_iter","from_iter","from_iter","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_par_iter","from_trusted_len_iter_rev","from_trusted_len_iter_rev","get_supertype","get_supertype_with_options","get_time_units","handle_casting_failures","hash","hash","implode_list","init","init","init","init","into","into","into","into","into_inner","into_iter","into_vec","into_vec","into_vec","iter_chunks","len","materialize_dyn_int","n_chunks","new","new","next","next_back","rayon","size_hint","slice","slice_slice","split","split_and_flatten","split_at","split_df_as_ref","to_owned","to_owned","trust_my_length","try_from","try_from","try_from","try_from","try_get_supertype","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[40,"polars_core::chunked_array"],[442,"polars_core::chunked_array::arithmetic"],[470,"polars_core::chunked_array::builder"],[578,"polars_core::chunked_array::builder::list"],[732,"polars_core::chunked_array::cast"],[762,"polars_core::chunked_array::collect"],[776,"polars_core::chunked_array::float"],[778,"polars_core::chunked_array::from_iterator_par"],[782,"polars_core::chunked_array::iterator"],[819,"polars_core::chunked_array::iterator::par"],[821,"polars_core::chunked_array::metadata"],[1111,"polars_core::chunked_array::object"],[1188,"polars_core::chunked_array::object::builder"],[1211,"polars_core::chunked_array::object::registry"],[1239,"polars_core::chunked_array::ops"],[1365,"polars_core::chunked_array::ops::arity"],[1401,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1403,"polars_core::chunked_array::ops::gather"],[1406,"polars_core::chunked_array::ops::search_sorted"],[1437,"polars_core::chunked_array::ops::sort"],[1444,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1445,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[1453,"polars_core::chunked_array::ops::sort::options"],[1531,"polars_core::chunked_array::temporal"],[1532,"polars_core::chunked_array::temporal::conversion"],[1535,"polars_core::config"],[1539,"polars_core::datatypes"],[3006,"polars_core::datatypes::categorical"],[3147,"polars_core::datatypes::categorical::revmap"],[3202,"polars_core::datatypes::categorical::string_cache"],[3221,"polars_core::datatypes::revmap"],[3227,"polars_core::datatypes::string_cache"],[3231,"polars_core::error"],[3296,"polars_core::error::PolarsError"],[3300,"polars_core::error::constants"],[3303,"polars_core::export"],[3311,"polars_core::fmt"],[3343,"polars_core::frame"],[3616,"polars_core::frame::explode"],[3646,"polars_core::frame::group_by"],[3886,"polars_core::frame::group_by::GroupByMethod"],[3887,"polars_core::frame::group_by::GroupsProxy"],[3889,"polars_core::frame::group_by::aggregations"],[3902,"polars_core::frame::group_by::expr"],[3905,"polars_core::frame::row"],[4002,"polars_core::functions"],[4004,"polars_core::hashing"],[4052,"polars_core::prelude"],[4635,"polars_core::prelude::PolarsError"],[4639,"polars_core::prelude::default_arrays"],[4645,"polars_core::prelude::list"],[4668,"polars_core::prelude::null"],[4699,"polars_core::prelude::revmap"],[4705,"polars_core::prelude::slice"],[4708,"polars_core::prelude::string_cache"],[4712,"polars_core::prelude::utf8"],[4716,"polars_core::random"],[4717,"polars_core::scalar"],[4742,"polars_core::scalar::reduce"],[4743,"polars_core::schema"],[4824,"polars_core::series"],[5238,"polars_core::series::amortized_iter"],[5262,"polars_core::series::arithmetic"],[5287,"polars_core::series::arithmetic::checked"],[5295,"polars_core::series::ops"],[5323,"polars_core::utils"],[5469,"polars_core::utils::flatten"],[5474,"dyn_clone::sealed"],[5475,"num_traits"],[5476,"num_traits::cast"],[5477,"polars_error"],[5478,"polars_core::series::arithmetic::borrowed"],[5479,"polars_core::frame::group_by::proxy"],[5480,"core::option"],[5481,"core::iter::traits::iterator"],[5482,"core::ops::function"],[5483,"core::marker"],[5484,"alloc::string"],[5485,"polars_core::datatypes::dtype"],[5486,"polars_core::datatypes::aliases"],[5487,"polars_core::series::arithmetic::borrowed::checked"],[5488,"polars_arrow::array"],[5489,"alloc::vec"],[5490,"core::iter::traits::double_ended"],[5491,"core::fmt"],[5492,"core::iter::traits::collect"],[5493,"core::result"],[5494,"polars_utils::iter::fallible"],[5495,"polars_arrow::bitmap::immutable"],[5496,"rayon::iter"],[5497,"polars_arrow::trusted_len"],[5498,"polars_core::datatypes::any_value"],[5499,"polars_utils::index"],[5500,"std::sync::rwlock"],[5501,"polars_core::chunked_array::logical::decimal"],[5502,"core::iter::traits::exact_size"],[5503,"polars_core::series::series_trait"],[5504,"core::slice::iter"],[5505,"core::iter::adapters::map"],[5506,"polars_core::chunked_array::metadata::guard"],[5507,"polars_core::chunked_array::metadata::interior_mutable"],[5508,"alloc::sync"],[5509,"polars_core::chunked_array::metadata::md_trait"],[5510,"core::convert"],[5511,"core::ops::range"],[5512,"polars_core::datatypes::field"],[5513,"polars_arrow::legacy::kernels::rolling::no_nulls"],[5514,"polars_core::chunked_array::ops::rolling_window"],[5515,"ahash::random_state"],[5516,"polars_utils::hashing"],[5517,"ndarray::aliases"],[5518,"either"],[5519,"core::any"],[5520,"polars_core::chunked_array::arithmetic::numeric"],[5521,"polars_core::chunked_array::builder::string"],[5522,"polars_arrow::array::binview"],[5523,"polars_core::chunked_array::builder::boolean"],[5524,"polars_core::chunked_array::builder::null"],[5525,"polars_core::chunked_array::builder::primitive"],[5526,"core::clone"],[5527,"polars_core::chunked_array::builder::list::anonymous"],[5528,"polars_core::chunked_array::builder::list::boolean"],[5529,"polars_core::chunked_array::builder::list::primitive"],[5530,"polars_core::chunked_array::builder::list::binary"],[5531,"polars_core::chunked_array::builder::list::null"],[5532,"alloc::boxed"],[5533,"core::hash"],[5534,"polars_arrow::array::boolean"],[5535,"polars_core::chunked_array::metadata::env"],[5536,"polars_core::chunked_array::metadata::collect"],[5537,"bitflags::iter"],[5538,"std::fs"],[5539,"std::sync::mutex"],[5540,"polars_arrow::datatypes"],[5541,"polars_arrow::bitmap::utils::iterator"],[5542,"polars_arrow::bitmap::utils::zip_validity"],[5543,"polars_arrow::offset"],[5544,"polars_arrow::array::static_array"],[5545,"core::error"],[5546,"polars_arrow::array::primitive"],[5547,"polars_arrow::legacy::array::slice"],[5548,"polars_row::row"],[5549,"polars_arrow::array::binary"],[5550,"chrono::naive::datetime"],[5551,"alloc::borrow"],[5552,"polars_arrow::array::static_array_collect"],[5553,"bytemuck::zeroable"],[5554,"polars_core::chunked_array::logical::categorical"],[5555,"polars_core::chunked_array::logical::categorical::merge"],[5556,"polars_core::chunked_array::logical"],[5557,"polars_core::datatypes::time_unit"],[5558,"polars_arrow::types"],[5559,"polars_arrow::datatypes::physical_type"],[5560,"core::borrow"],[5561,"polars_arrow::pushable"],[5562,"polars_core::datatypes::into_scalar"],[5563,"core::cmp"],[5564,"polars_core::chunked_array::logical::categorical::builder"],[5565,"polars_core::chunked_array::logical::categorical::revmap"],[5566,"polars_core::chunked_array::logical::categorical::string_cache"],[5567,"polars_error::warning"],[5568,"polars_core::series::from"],[5569,"polars_utils::aliases"],[5570,"polars_arrow::datatypes::schema"],[5571,"polars_core::chunked_array::ndarray"],[5572,"polars_arrow::array::struct_"],[5573,"polars_arrow::record_batch"],[5574,"polars_utils::idx_vec"],[5575,"rayon::iter::plumbing"],[5576,"polars_core::frame::group_by::into_groups"],[5577,"core::iter::adapters::copied"],[5578,"core::iter::adapters::zip"],[5579,"polars_arrow::legacy::kernels::rolling"],[5580,"polars_utils::float"],[5581,"polars_arrow::types::native"],[5582,"polars_core::frame::group_by::aggregations::agg_list"],[5583,"polars_core::frame::row::av_buffer"],[5584,"polars_core::hashing::identity"],[5585,"hashbrown::map"],[5586,"polars_core::hashing::vector_hasher"],[5587,"core::alloc"],[5588,"std::os::fd::owned"],[5589,"std::os::fd::raw"],[5590,"core::mem::maybe_uninit"],[5591,"polars_arrow::legacy::kernels::time"],[5592,"core::default"],[5593,"core::ffi::c_str"],[5594,"polars_arrow::scalar"],[5595,"std::io::error"],[5596,"simdutf8::basic"],[5597,"alloc::collections"],[5598,"regex::error"],[5599,"std::path"],[5600,"std::ffi::os_str"],[5601,"alloc::ffi::c_str"],[5602,"polars_arrow::legacy::array::default_arrays"],[5603,"polars_arrow::buffer::immutable"],[5604,"polars_arrow::array::list"],[5605,"polars_core::named_from"],[5606,"polars_core::chunked_array::ops::aggregate"],[5607,"polars_core::chunked_array::ops::aggregate::quantile"],[5608,"polars_arrow::legacy::index"],[5609,"core::pin"],[5610,"core::io::borrowed_buf"],[5611,"std::io"],[5612,"polars_core::chunked_array::ops::aggregate::var"],[5613,"alloc::collections::btree::map"],[5614,"polars_arrow::legacy::array::list"],[5615,"polars_arrow::legacy::array::null"],[5616,"polars_arrow::bitmap::mutable"],[5617,"polars_arrow::array::utf8"],[5618,"polars_core::series::iterator"],[5619,"alloc::rc"],[5620,"polars_arrow::legacy::utils"],[5621,"polars_core::utils::supertype"],[5622,"polars_arrow::legacy::trusted_len::rev"],[5623,"smartstring::config"],[5624,"smartstring"],[5625,"polars_core::chunked_array::object::extension"],[5626,"polars_error::constants"],[5627,"polars_core::frame::horizontal"],[5628,"polars_arrow::legacy::prelude"],[5629,"polars_arrow::legacy::array"],[5630,"polars_arrow::legacy::array::utf8"],[5631,"polars_core::utils::any_value"],[5632,"polars_core::utils::schema"],[5633,"polars_core::utils::series"]],"if":"`````````````{{}b}``0```````````````{{}d}``````````````{{{f{c}}h}b{}}{{{f{{l{j}}}}}d}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}{f{Aj}}}Adn}{{{f{{l{Al}}}}}d}{{{f{{l{Al}}}}}{{An{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{f{{l{j}}}}{f{Bf}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{{f{Bh{l{c}}}}{f{{l{c}}}}}b{{Bn{}{{Bj{Bl}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cb{An}{{C`{An}}}}Cd}}{{{f{{l{j}}}}c}{{l{j}}}{{Ch{Cf}{{C`{Ad}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Ch{{An{Cf}}}{{C`{{An{c}}}}}}Cd}Bn}{{{f{{l{Cj}}}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{{l{Cl}}}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Bn{}{{Ch{An}{{C`{{An{e}}}}}}}Bn}{{{l{c}}e}{{l{c}}}n{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}e}CnBn{{Ch{{f{BhD`}}}}}}{{{f{{l{c}}}}{f{Cb}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cb}}}{{l{e}}}nBn}{{{f{{l{Db}}}}c}{{l{Db}}}{{Ch{{f{{Df{Dd}}}}}{{C`{{f{{Df{Dd}}}}}}}}}}{{{f{{l{Dh}}}}c}{{l{Dh}}}{{Ch{{f{Bf}}}{{C`{{f{Bf}}}}}}}}{{{f{Bh{l{c}}}}e}bn{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}Djg}{{l{i}}}Bn{}{{Ch{}{{C`{e}}}}}Bn}{{{f{{l{j}}}}{f{Cb}}}{{Af{Dl}}}}{{{f{{l{c}}}}g{f{Bh{Df{e}}}}}bn{}{{Cb{An{f{e}}}{{C`{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}g}{{l{i}}}Bn{}{{Ch{}{{C`{e}}}}}Bn}{{{f{{l{c}}}}Dn}E`n}{{{f{{l{c}}}}{f{{Df{Ad}}}}{f{Eb}}}{{Af{E`}}}n}{{{f{{l{c}}}}}{{Af{E`}}}n}`{{{f{{l{Dh}}}}}Ed}{{{f{{l{c}}}}}{{f{{l{c}}}}}Bn}{{{f{{l{c}}}}}{{f{Dj}}}Bn}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}BnBn{{Ch{{An{Cf}}AnAn}{{C`{{An{Ad}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eEf{}}00{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0``{{{f{{l{c}}}}e}{{l{g}}}n{{Cb{}{{C`{}}}}Cd}n}{{{f{{l{c}}}}{f{Dj}}}{{Af{Ad}}}n}{{{f{{l{c}}}}{f{Dj}}Eh}{{Af{Ad}}}n}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ej}{{{f{{l{c}}}}e}{{Af{Ad}}}EjAb}{{{f{{l{c}}}}}ElBn}{{{f{{l{c}}}}}{{`{{Bd{}{{B`{En}}}}}}}Bn}{{{f{{l{c}}}}}{{f{{Fb{F`}}}}}Bn}{{{f{Bh{l{c}}}}}{{f{Bh{Fb{F`}}}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Bn}0{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}`{{{f{Bh{l{c}}}}}b{Bnn}}`{{{f{{l{c}}}}}{{Af{{f{Df}}}}}n}{{{f{Bh{l{c}}}}{f{{l{c}}}}Fd}bBn}{{{f{Bh{l{c}}}}{f{{l{e}}}}Fd}bBnBn}{{{f{{l{c}}}}}{{`{{Ff{}{{B`{{f{Df}}}}}}}}}n}{{}{{l{c}}}Bn}{En{{f{c}}}{}}0{En{{f{Bhc}}}{}}0{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{Enb}{{{f{Bh{l{c}}}}}bBn}1{{{f{{l{c}}}}}{{l{c}}}Bn}{{{f{{l{c}}}}}{{f{Dj}}}Bn}{{{f{{l{c}}}}e}FhnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Fhn}01{{{f{Bh{l{c}}}}{f{{l{c}}}}}bn}{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Fh}}}{{Af{{l{c}}}}}{{Bn{}{{Fj{Bl}}{Fl{Bl}}}}}}{{{f{{l{c}}}}}{{An{En}}}Bn}`{{{f{{l{Al}}}}{f{BhFn}}}G`}{{{f{{l{c}}}}{f{BhFn}}}G`n}{{{f{{l{c}}}}e}bBn{{Ch{An}}}}{{{f{{l{j}}}}c}b{{Ch{{An{Cf}}}}}}{c{{l{e}}}Gb{{Bn{}{{Gd{c}}}}}}{cc{}}0{{{f{Bf}}c}{{l{e}}}Gf{{Bn{}{{Gd{}}}}Bn}}{{{f{{l{c}}}}e}{{l{c}}}{{Bn{}{{Gd{}}}}Bn}Gf}{{{f{Bf}}{Fb{F`}}}{{l{c}}}Bn}{{{f{Bf}}{Fb{F`}}Dj}{{l{c}}}Bn}{g{{Gh{ic}}}{}{}{{Gj{c}{{B`{e}}}}}{}}{c{{l{Al}}}{{Gf{}{{B`{{An{d}}}}}}}}{c{{l{e}}}{{Gf{}{{B`{An}}}}}n}{c{{l{e}}}{{Gf{}{{B`{{Gn{Fb{An{Gl}}}}}}}}}n}{{{f{Bf}}c}{{l{e}}}{{Bd{}{{B`{An}}}}}n}23{{{f{Bf}}c}{{l{e}}}{{Bd{}{{B`{}}}}}n}`{c{{l{e}}}{{H`{}{{B`{An}}}}}n}{{{f{Bf}}{f{Df}}}{{l{c}}}n}{{{f{Bf}}{f{{Df{An}}}}}{{l{c}}}n}{c{{l{e}}}{{Hb{}{{B`{An}}}}}n}{{{f{Bf}}Fb}{{l{c}}}n}{{{f{Bf}}Fb{An{Gl}}}{{l{c}}}n}{{{f{Bf}}En}{{l{c}}}n}0{{{f{{l{c}}}}En}{{l{c}}}Bn}{{{f{Bf}}En{f{Dj}}}Dl}{{{f{{l{c}}}}En}AnBn}{{{f{{l{c}}}}En}{{Af{Hd}}}n}{{{f{{l{c}}}}En}Hdn}{{{f{{l{j}}}}En}{{An{Ad}}}}{{{f{{l{c}}}}}{{An{Hf}}}Bn}{{{f{{l{c}}}}}dBn}{{{f{{l{c}}}}}HhBn}{{{f{{l{j}}}}}Ad}{{{f{{l{c}}}}}AnBn}0{{{f{{l{{Hj{c}}}}}}En}{{An{{f{Hl}}}}}Hn}09{{{f{{l{c}}}}dd}{{Af{Aj}}}n}{{{f{{l{c}}}}EndEn}AjEf}{{{f{{l{c}}}}{f{{l{c}}}}}Fhn}{{{f{{l{c}}}}e}FhnAb}018{{{f{{l{c}}}}{An{En}}}{{l{c}}}Bn}{{}En}0{{EnI`{An{Ib}}}{{l{c}}}n}{{{f{{l{j}}}}}{{f{Dj}}}}{{{f{{l{c}}}}}{{If{{Id{c}}}}}Bn}{ce{}{}}0{{{l{Ih}}{An{En}}En}{{Af{Ij}}}}{{{l{Ih}}{An{En}}En}Ij}{{{f{{l{c}}}}}en{}}{{{f{{l{c}}}}}{{`{IlIn{J`{}{{B`{}}}}FfHb}}}n}{{{l{c}}}AdBn}{{{f{{l{c}}}}}dBn}{{{f{{l{c}}}}}FhJb}000{{{f{{l{c}}}}}FhBn}02{{{f{{l{c}}}}}JdBn}{{{f{{l{c}}}}}{{`{{Jf{}{{B`{An}}}}}}}Bn}{{{f{{l{c}}}}}{{`{{Bd{}{{B`{{l{c}}}}}}}}}Bn}{{{f{{l{j}}}}}{{`{{Bd{}{{B`{Jh}}}}}}}}{{{f{{l{c}}}}}{{Jn{{Jj{F`}}{Jl{{f{F`}}}{{C`{{An{{f{Gl}}}}}}}}}}}Bn}`{{{f{{l{c}}}}}AnBn}{{{f{{l{c}}}}}{{An{En}}}Bn}{{{f{{l{c}}}}}{{K`{c}}}Bn}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}e}gn{}{}}{{{l{c}}e}gn{}{}}{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}{{{f{{l{c}}}}}EnBn}0{{{f{{l{c}}}}e}{{l{c}}}n{A`Kb}}00{{{f{{l{c}}}}En}{{l{c}}}Bn}{{{f{{l{c}}}}e}FhnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Fhn}01{{{f{{l{Al}}}}}{{An{d}}}}{{{f{{l{c}}}}}Ann}{{{f{{l{c}}}}}Kdn}{{{f{{l{c}}}}}{{An{Kf}}}n}{{{f{{l{Al}}}}}{{An{Kf}}}}{{{f{{l{c}}}}}{{An{Kf}}}Ef}{{{f{{l{c}}}}}KdEf}{{{f{Bh{l{c}}}}{Id{c}}}bBn}`{{{f{{l{c}}}}}{{Kh{c}}}Bn}{{{f{{l{c}}}}}{{f{{Kl{{Kj{c}}}}}}}Bn}{{{f{{l{c}}}}}{{An{{L`{Kn}}}}}Bn}{{{f{Bh{l{c}}}}}{{f{Bh{Kl{{Kj{c}}}}}}}Bn}{{{f{{l{c}}}}}{{Kl{{Kj{c}}}}}Bn};<{{{f{{l{c}}}}}{{An{Gn}}}n};{{{f{Bf}}{f{{Df{Dd}}}}EnEn}{{l{Al}}}}{{{f{Bf}}{f{Df}}}{{l{c}}}n}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}}EnBn}{{{f{{l{c}}}}}{{Af{En}}}n}{{{f{{l{c}}}}}{{f{Bf}}}Bn}{{{f{Bf}}c}{{l{Lb}}}{{Ld{{Df{Jh}}}}}}{{{f{Bf}}{Lf{Ib}}}{{l{Lh}}}}{{{f{Bf}}c}{{l{Dh}}}{{Ld{{Df{D`}}}}}}{{{f{Bf}}c}{{l{Db}}}{{Ld{{Df{{Fb{Dd}}}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Ld{{Df{d}}}}}}{{{f{Bf}}c}{{l{Lj}}}{{Ld{{Df{Ll}}}}}}{{{f{Bf}}c}{{l{Lh}}}{{Ld{{Df{Ib}}}}}}{{{f{Bf}}c}{{l{Ln}}}{{Ld{{Df{M`}}}}}}{{{f{Bf}}c}{{l{Ih}}}{{Ld{{Df{Mb}}}}}}{{{f{Bf}}c}{{l{Cl}}}{{Ld{{Df{I`}}}}}}{{{f{Bf}}c}{{l{Cj}}}{{Ld{{Df{Kf}}}}}}{{{f{Bf}}c}{{l{Dh}}}{{Ld{{Df{{An{D`}}}}}}}}{{{f{Bf}}c}{{l{Db}}}{{Ld{{Df{{An{{Fb{Dd}}}}}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Ld{{Df{{An{d}}}}}}}}{{{f{Bf}}c}{{l{Lj}}}{{Ld{{Df{{An{Ll}}}}}}}}{{{f{Bf}}c}{{l{Lh}}}{{Ld{{Df{{An{Ib}}}}}}}}{{{f{Bf}}c}{{l{Ln}}}{{Ld{{Df{{An{M`}}}}}}}}{{{f{Bf}}c}{{l{Lb}}}{{Ld{{Df{{An{Jh}}}}}}}}{{{f{Bf}}c}{{l{Ih}}}{{Ld{{Df{{An{Mb}}}}}}}}{{{f{Bf}}c}{{l{Cl}}}{{Ld{{Df{{An{I`}}}}}}}}{{{f{Bf}}c}{{l{Cj}}}{{Ld{{Df{{An{Kf}}}}}}}}{{{f{Bf}}{Lf{Jh}}}{{l{Lb}}}}{{{f{Bf}}{Lf{M`}}}{{l{Ln}}}}{{{f{Bf}}{Lf{Ll}}}{{l{Lj}}}}{{{f{Bf}}}{{l{{Hj{c}}}}}Hn}{{{f{{l{c}}}}EnEn}{{l{c}}}n}{{{f{Bf}}{Fb{c}}}{{l{{Hj{c}}}}}Hn}{{{f{Bf}}{Fb{c}}Gl}{{l{{Hj{c}}}}}Hn}{{{f{Bf}}Fb}{{l{c}}}n}{{{Kl{Md}}{Fb{F`}}HfHf}{{l{c}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Jb}{{{f{{l{c}}}}e}FhnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Fhn}10{{{f{{l{c}}}}}EnBn}``{{{f{{l{j}}}}}{{`{{Mf{}{{B`{{An{Ad}}}}}}}}}}{{{f{{l{Dh}}}}}{{`{{Mf{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{{l{Dh}}}}}{{`{{Mh{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{Bh{l{j}}}}}{{`{{Mh{}{{B`{{An{Ad}}}}}}}}}}{{{f{{l{c}}}}}Kdn}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}KfMj}{{Af{{An{Kf}}}}}Ef}{{{f{{l{c}}}}KfMj}{{Af{Kd}}}Ef}{{{f{Bf}}EnKf}{{Af{{l{Al}}}}}}{{{f{Bf}}EnKfKf}{{Af{{l{c}}}}}n}{{{f{Bf}}En}{{l{c}}}n}{{{f{Bf}}EnKfKf}{{l{c}}}n}{{{f{{l{c}}}}}{{l{c}}}Bn}{{{f{{l{c}}}}}{{f{Md}}}Bn}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{Bh{l{c}}}}{f{Bf}}}bBn}{{{f{{l{c}}}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cb}}Ml}{{Af{Ad}}}n}{{{f{{l{c}}}}Ene}{{Af{{l{c}}}}}Jb{{Ch{{f{Bh{l{c}}}}}{{C`{An}}}}}}{{{f{{l{c}}}}Kfdd{An{Ib}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}Endd{An{Ib}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}eAn}{{Af{{l{c}}}}}n{{Gf{}{{B`{Hf}}}}}}{{{f{{l{c}}}}eg}{{Af{{l{c}}}}}n{{Gf{}{{B`{Hf}}}}}{{Cb{An}{{C`{An}}}}}}{{{f{{l{c}}}}{f{Fh}}An}{{Af{{l{c}}}}}n}{{{f{Bh{l{j}}}}}b}{{{f{Bh{l{c}}}}d}bBn}{{{f{Bh{l{j}}}}Dj}b}{{{f{Bh{l{c}}}}Hf}bBn}{{{f{Bh{l{c}}}}Jd}bBn}{{{f{{l{c}}}}Jh}{{l{c}}}n}{{{f{{l{c}}}}JhAn}{{l{c}}}n}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}JhEn}{{l{c}}}Bn}0{{{f{{l{c}}}}d}{{l{c}}}n}{{{f{{l{c}}}}Dn}{{l{c}}}n}{{{f{{l{c}}}}Jh}{{Gn{{l{c}}{l{c}}}}}Bn}0{{{f{{l{c}}}}Dd}{{An{Kf}}}n}{{{f{{l{c}}}}Dd}KdEf}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}}Ann}{{{f{{l{Al}}}}}{{An{Hf}}}}{{{f{{l{c}}}}}Kdn}{{{f{{l{c}}}}{An{En}}}{{l{c}}}Bn}{{{f{{l{c}}}}{f{e}}}{{Af{{l{c}}}}}Bn{{Ld{{Df{Hf}}}}Mn}}{{{f{{l{c}}}}{f{E`}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Bn{}{{Fj{Bl}}{N`{Bl}}}}Bn}{{Ld{{Df{Hf}}}}Mn}}{{{f{{l{c}}}}{f{E`}}}{{l{c}}}{{Bn{}{{Fj{Bl}}{N`{Bl}}}}Bn}}`{{{f{{l{c}}}}dNb}{{Fb{{Fb{Nd}}}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Jb}{{{f{{l{Dh}}}}En}{{Af{Ad}}}}{{{f{Bh{l{j}}}}Dj}b}{{{f{{l{c}}}}}{{Af{Nf}}}n}{{{f{{l{j}}}}}{{Af{Nh}}}}{{{f{c}}}e{}{}}{{{f{{l{Db}}}}}Cn}{{{f{{l{c}}}}}{{Fb{An}}}n}{{{f{{l{c}}}}}{{Nj{Fb{Fb{An}}}}}n}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{}{}}{{{f{{l{c}}}}e}gn{}{}}{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}{{{f{{l{j}}}}c}{{Af{{l{j}}}}}{{Ch{Cf}{{C`{{Af{Ad}}}}}}}}{{{f{{l{j}}}}e}{{Af{{l{g}}}}}{}{{Ch{{An{Cf}}}{{C`{{Af{{An{c}}}}}}}}Cd}Bn}{{{f{{l{c}}}}i}{{Gh{{l{k}}g}}}Bn{}{}{{Ch{An}{{C`{{Gh{{An{e}}g}}}}}}Cd}Bn}{{{f{{l{c}}}}g}{{Gh{Cne}}}Bn{}{{Ch{{f{BhD`}}}{{C`{{Gh{be}}}}}}}}{{{f{{l{c}}}}i}{{Gh{{l{k}}g}}}Bn{}{}{{Ch{}{{C`{{Gh{eg}}}}}}}Bn}{c{{Gh{e}}}{}{}}0{{{f{Bf}}g}{{Gh{{l{i}}e}}}Gb{}{{Gf{}{{B`{{Gh{ce}}}}}}}{{Bn{}{{Gd{c}}}}Bn}}11{{{f{{l{j}}}}{f{{l{c}}}}e}{{Af{{l{j}}}}}Bn{{Ch{{An{Cf}}An}{{C`{{Af{{An{Ad}}}}}}}}}}{{{f{c}}}Nl{}}0{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Ad}}}{{Af{{f{{l{c}}}}}}}Bn}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}En}{}Bn}{{{f{{l{c}}}}Dd}{{An{Kf}}}n}{{{f{{l{c}}}}Dd}KdEf}{ce{}{}}0{{{f{Bf}}c}{{l{e}}}Gb{{Bn{}{{Gd{c}}}}Bn}}{{{f{{l{e}}}}c}{{l{e}}}Gb{{Bn{}{{Gd{c}}}}Bn}}{{{f{{l{c}}}}{Fb{F`}}}{{l{c}}}Bn}{{{l{c}}{f{Bf}}}{{l{c}}}Bn}{{{f{{Df{Nn}}}}e}c{}{{O`{{f{E`}}}{{C`{c}}}}}}{{{f{{l{c}}}}Jd}{{l{c}}}Bn}{{{f{{l{c}}}}}en{}}{{{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{}{}}{{{l{c}}e}gn{}{}}2301{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}452310453267453201453210{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Bn{{Ch{{An{Cf}}An}{{C`{{An{Ad}}}}}}}}{{{f{{l{c}}}}{f{Fh}}{f{{l{c}}}}}{{Af{{l{c}}}}}Bn}````{{{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}}e{}{}{}}{{{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}c}e{}{}{}}{{c{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}}e{}{}{}}{{{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}}g{}{}{}}{{{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}c}g{}{}{}}{{c{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}}g{}{}{}}{{{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}}e{}{}{}}65654654650654654````````{{{f{c}}h}b{}}000{{{f{BhOj}}}b}{{{f{Bh{Ol{c}}}}}b{OnMn}}{{{f{BhA@`}}}b}{{{f{BhA@b}}}b}{{{f{Bh{A@d{c}}}}}bn}{{{f{Bh{Ol{c}}}}{An{e}}}b{OnMn}{{Ld{c}}}}{{{f{BhOj}}{An{c}}}b{}}{{{f{BhOj}}c}b{}}{{{f{Bh{Ol{c}}}}e}b{OnMn}{{Ld{c}}}}{{{f{BhA@`}}d}b}5{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{{Ol{c}}}}}{{Ol{c}}}{OnMn}}{{{f{A@`}}}A@`}{{{f{A@b}}}A@b}{{{f{{A@d{c}}}}}{{A@d{c}}}{nA@f}}{{{f{c}}{f{Bhe}}}b{}{}}000{{{f{c}}}b{}}000{En{{f{c}}}{}}000{En{{f{Bhc}}}{}}000{Enb}000{Oj{{l{c}}}Bn}{{{Ol{{Df{Dd}}}}}Ed}{{{Ol{Bf}}}Cn}{A@hCn}{A@jEd}{A@`Fh}`{{{A@d{c}}}{{l{c}}}n}{cc{}}000{{{f{Bf}}e}A@l{}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}A@l{}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}{f{{Df{c}}}}}A@l{}}{{{f{Bf}}{f{{Df{{An{c}}}}}}}A@l{}}{{}En}000{ce{}{}}000`{{{f{Bf}}En}{{Ol{c}}}{OnMn}}{{{f{Bf}}En}A@`}{{{f{Bf}}En}A@b}{{{f{Bf}}En}{{A@d{c}}}n}{{{f{BhOj}}}b}{{{f{BhA@`}}}b}{{{f{BhA@b}}}b}{{{f{Bh{A@d{c}}}}}bn}{{{f{c}}}e{}{}}000{c{{Gh{e}}}{}{}}0000000{{{f{c}}}Nl{}}000;;;;````````{{{f{BhA@n}}{f{Gb}}}b}{{{f{BhA@n}}}b}{{{f{BhAA`}}}b}{{{f{BhAAb}}c}b{{Bd{}{{B`{{An{d}}}}}}Hb}}{{{f{Bh{AAd{c}}}}e}bn{{Bd{}{{B`{An}}}}Hb}}{{{f{Bh{AAd{c}}}}e}bn{{Bd{}{{B`{}}}}Hb}}{{{f{BhAAf}}}b}54{{{f{BhAAh}}}b}{{{f{BhAAj}}}b}{{{f{BhAAb}}}b}{{{f{BhAAl}}}b}{{{f{Bh{AAd{c}}}}}bn}{{{f{BhA@n}}{An{{f{Gb}}}}}b}{{{f{BhA@n}}{An{{f{Ad}}}}}{{Af{b}}}}{{{f{BhAAf}}{An{{f{Ad}}}}}{{Af{b}}}}{{{f{Bh{AAd{c}}}}{An{{f{Df}}}}}bn}{{{f{BhAAf}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@n}}{f{Ad}}}{{Af{b}}}}{{{f{BhAA`}}{f{Ad}}}{{Af{b}}}}{{{f{BhAAh}}{f{Ad}}}{{Af{b}}}}{{{f{BhAAj}}{f{Ad}}}{{Af{b}}}}{{{f{BhAAb}}{f{Ad}}}{{Af{b}}}}{{{f{BhAAl}}{f{Ad}}}{{Af{b}}}}{{{f{Bh{AAd{c}}}}{f{Ad}}}{{Af{b}}}n}{{{f{Bh{AAd{c}}}}{f{Df}}}bn}{{{f{BhAAh}}c}b{{Bd{}{{B`{{An{{f{Bf}}}}}}}}Hb}}{{{f{BhAAj}}c}b{{Bd{}{{B`{{An{{f{{Df{Dd}}}}}}}}}}Hb}}{{{f{BhAAh}}c}b{{Bd{}{{B`{{f{Bf}}}}}}}}{{{f{BhAAj}}c}b{{Bd{}{{B`{{f{{Df{Dd}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000`{{}A@n}{{}AA`}{En{{f{c}}}{}}000000{En{{f{Bhc}}}{}}000000{Enb}000000{{{f{AAh}}}d}{{{f{AAj}}}d}{{{f{AAb}}}d}{{{f{{AAd{c}}}}}dn}{{{f{AAf}}}d}{{{f{AAh}}}{{f{Md}}}}{{{f{AAj}}}{{f{Md}}}}{{{f{AAb}}}{{f{Md}}}}{{{f{{AAd{c}}}}}{{f{Md}}}n}{{{f{AAf}}}{{f{Md}}}}{{{f{BhA@n}}}Dl}{{{f{BhAA`}}}Dl}{{{f{BhAAl}}}Dl}{{{f{BhAAf}}}Dl}{cc{}}000000{{{f{Dj}}EnEn{f{Bf}}}{{Af{{AAn{AAf}}}}}}{{}En}000000{{{f{BhAAh}}}F`}{{{f{BhAAj}}}F`}{{{f{BhAAb}}}F`}{{{f{Bh{AAd{c}}}}}F`n}{{{f{BhAAf}}}F`}{ce{}{}}000000{{{f{Bf}}En{An{Dj}}}A@n}{{{f{Bf}}En{An{Dj}}}AA`}{{{f{Bf}}EnEn}AAh}{{{f{Bf}}EnEn}AAj}{{{f{Bf}}EnEn}AAb}{{{f{Bf}}En}AAl}{{{f{Bf}}EnEnDj}{{AAd{c}}}n}{{{f{Bf}}EnEnDjDj}{{AAd{c}}}n}{c{{Gh{e}}}{}{}}0000000000000{{{f{c}}}Nl{}}000000:::::::````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{Eh}}}Eh}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{{}Eh}{En{{f{c}}}{}}{En{{f{Bhc}}}{}}{Enb}{{{f{Eh}}{f{Eh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{Eh}}{f{BhFn}}}G`}{cc{}}{{{f{Eh}}{f{Bhc}}}bAB`}{{}En}{ce{}{}}{{{f{Eh}}}d}{{{f{c}}}e{}{}}{c{{Gh{e}}}{}{}}0{{{f{c}}}Nl{}}4``{{ABb{f{Bf}}}{{l{c}}}Bn}{{ABd{f{{l{c}}}}}{{l{c}}}Bn}10{{ABd{f{Bf}}Dj}{{l{c}}}Bn}0{{ABb{f{Bf}}}{{Gh{{l{c}}e}}}Bn{}}{{ABd{f{{l{c}}}}}{{Gh{{l{c}}e}}}Bn{}}10{{ABd{f{Bf}}Dj}{{Gh{{l{c}}e}}}Bn{}}0`{ABfABf}``{{ABh{f{Bf}}Dj}e{}{{ABj{c}}}}{{e{f{Bf}}Dj}ABj{}{{H`{}{{B`{c}}}}}}```{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{En{{f{c}}}{}}0{En{{f{Bhc}}}{}}0{Enb}0{cc{}}0{{}En}0{ce{}{}}000{{{f{ABl}}}ABn}{{{f{BhABn}}}{{An{c}}}{}}{{{f{Bh{AC`{c}}}}}{{An{e}}}Bd{}}1{{{f{Bh{AC`{c}}}}}{{An{e}}}Ff{}}`{{{f{ABn}}}{{Gn{En{An{En}}}}}}{{{f{{AC`{c}}}}}{{Gn{En{An{En}}}}}Bd}{c{{Gh{e}}}{}{}}000{{{f{c}}}Nl{}}088`````````````````````````{{{f{c}}h}b{}}0000{{}Fd}{{}Hh}{{FdFd}Fd}{{HhHh}Hh}{{{f{BhFd}}Fd}b}{{{f{BhHh}}Hh}b}3210{{{f{Fd}}}Ll}0{{{f{Hh}}}Dd}05432{{{f{c}}}{{f{e}}}{}{}}000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000{{{f{{Kj{c}}}}}{{Kj{c}}}Bn}{{{f{{Id{c}}}}}{{Id{c}}}Bn}{{{f{ACb}}}ACb}{{{f{Fd}}}Fd}{{{f{Hh}}}Hh}{{{f{c}}{f{Bhe}}}b{}{}}0000{{{f{c}}}b{}}0000000{{{f{BhACd}}}b}0{FdFd}{HhHh}{{{f{Fd}}Fd}d}{{{f{Hh}}Hh}d}{{}{{Kj{c}}}Bn}{{}{{Id{c}}}Bn}{{}Fd}{{}Hh}{En{{f{c}}}{}}{{{f{{Kh{c}}}}}{{f{e}}}Bn{}}111111{En{{f{Bhc}}}{}}000000{{FdFd}Fd}{{HhHh}Hh}{{}d}{{{f{Kn}}}{{An{Hf}}}}{{{Id{c}}Hf}{{Id{c}}}Bn}{{{f{{Id{c}}}}}{{An{Hf}}}Bn}{{{Id{c}}{An{Hf}}}{{Id{c}}}Bn}{Enb}000000<;5{{{f{Fd}}{f{Fd}}}d}{{{f{Hh}}{f{Hh}}}d}7{{{f{BhFd}}c}b{{Gf{}{{B`{Fd}}}}}}{{{f{BhHh}}c}b{{Gf{}{{B`{Hh}}}}}}{{{Id{c}}d}{{Id{c}}}Bn}{{{Id{c}}{An{d}}}{{Id{c}}}Bn}{{{f{{Id{c}}}}Fd}{{Id{c}}}Bn}{{{f{{Id{c}}}}Fd}{{Id{e}}}BnBn}{{{Id{c}}Hh}{{Id{c}}}Bn}{{{Id{c}}{An{Hh}}}{{Id{c}}}Bn}{{{f{{Id{c}}}}{f{BhFn}}}G`Bn}{{{f{ACb}}{f{BhFn}}}G`}{{{f{Fd}}{f{BhFn}}}G`}0000{{{f{Hh}}{f{BhFn}}}G`}0000{cc{}}000000{Ll{{An{Fd}}}}{Dd{{An{Hh}}}}{LlFd}0{DdHh}010{g{{Gh{ic}}}{}{}{{Gj{c}{{B`{e}}}}}{}}0{cFd{{Gf{}{{B`{Fd}}}}}}{cHh{{Gf{}{{B`{Hh}}}}}}{{{f{Bf}}}{{An{Fd}}}}{{{f{Bf}}}{{An{Hh}}}}{{{f{{Id{c}}}}}{{An{Hf}}}Bn}{{{f{{Id{c}}}}}dBn}{{{f{Hh}}}d}{{{f{Kn}}}Hh}{{{f{{Id{c}}}}}HhBn}0{{{f{{Id{c}}}}}{{An{f}}}Bn}0{{{f{Bh{Kj{c}}}}}{{f{Bh{Id{c}}}}}Bn}{{{f{Hh}}}Jd}{{}En}000000{{{f{BhFd}}Fd}b}{{{f{BhHh}}Hh}b}{{FdFd}Fd}{{HhHh}Hh}{{{f{Fd}}Fd}d}{{{f{Hh}}Hh}d}{ce{}{}}000000{Fdc{}}{Hhc{}}{{{f{Fd}}}d}{{{f{Hh}}}d}{{{f{{Id{c}}}}}dBn}21{{{f{{Id{c}}}}}JdBn}111{{{f{Fd}}}{{ACf{Fd}}}}{{{f{Hh}}}{{ACf{Hh}}}}{{{f{Fd}}}{{ACh{Fd}}}}{{{f{Hh}}}{{ACh{Hh}}}}{{}d}{{}{{f{{ACl{ACj}}}}}}{{{f{Kn}}}{{An{Kd}}}}{{{Id{c}}}{{Id{c}}}Bn}{{{f{{Id{c}}}}}{{An{Kd}}}Bn}{{{Id{c}}An}{{Id{c}}}Bn}{{{f{{Id{c}}}}{Id{c}}}{{ACn{c}}}Bn}4231{{{Id{c}}}{{Kj{c}}}Bn}{FdFd}{HhHh}{{{f{{Kj{c}}}}}{{L`{{Id{c}}}}}Bn}{{{f{BhFd}}Fd}b}{{{f{BhHh}}Hh}b}{{{f{BhFd}}Fdd}b}{{{f{BhHh}}Hhd}b}{{{f{Bh{Id{c}}}}{An{Hf}}}bBn}{{{f{Bh{Id{c}}}}d}bBn}{{{f{BhHh}}d}b}{{{f{Bh{Id{c}}}}Hh}bBn}{{{f{Bh{Id{c}}}}An}bBn}033{{{f{Bh{Id{c}}}}Jd}bBn}{{{f{BhHh}}Jd}b}{{{Id{c}}Jd}{{Id{c}}}Bn}{{{Id{c}}{An{Jd}}}{{Id{c}}}Bn}{{FdFd}Fd}{{HhHh}Hh}>=10{{{Kj{c}}}{{Id{c}}}Bn}{{{f{c}}}e{}{}}0000{{{f{BhFd}}Fd}b}{{{f{BhHh}}Hh}b}{c{{Gh{e}}}{}{}}0000000000000{{{f{{Kj{c}}}}}{{An{{L`{{Id{c}}}}}}}Bn}{{{f{{Kj{c}}}}}{{An{{If{{Id{c}}}}}}}Bn}{{{f{c}}}Nl{}}00000098{{{f{{Kj{c}}}}}{{f{{AD`{Kn}}}}}Bn}{ce{}{}}000000{ACdACd}0{{{f{{Kj{c}}}}}{{If{{Id{c}}}}}Bn}````{{{f{c}}h}b{}}{{{f{{ADb{c}}}}En}{{Gn{{ADb{c}}{ADb{c}}}}}Hn}{e{{ADb{c}}}Hn{{Gf{}{{B`{{An{{f{c}}}}}}}}}}{e{{ADb{c}}}Hn{{Gf{}{{B`{{f{c}}}}}}}}{{ADde}g{}{{Gf{}{{B`{c}}}}}{}}0{{{f{Hl}}}{{f{ADf}}}}{{{f{{ADb{c}}}}}{{f{ADf}}}Hn}{{{f{Bh{ADb{c}}}}}{{f{BhADf}}}Hn}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}`{{{f{{ADb{c}}}}En}dHn}{{{f{{ADb{c}}}}}{{ADb{c}}}{HnA@f}}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{{f{{ADb{c}}}}}{{f{ADd}}}Hn}{En{{f{c}}}{}}{En{{f{Bhc}}}{}}{Enb}{{{f{{f{Hl}}}}{f{{f{Hl}}}}}d}{{{f{Hl}}{f{Hl}}}d}{{{f{{ADb{c}}}}{f{BhFn}}}G`{HnADh}}{cc{}}{{EnADd}{{ADb{c}}}Hn}{{{f{{ADb{c}}}}En}{{An{{f{c}}}}}Hn}{{}ADd}{{{f{Gl}}{f{{ADb{c}}}}{f{{ADb{c}}}}}{{ADb{c}}}Hn}{{ADd{f{Gl}}cc}{{ADb{e}}}{}Hn}{{{f{Gl}}{f{{ADb{c}}}}e}{{ADb{c}}}Hn{}}{{{f{Gl}}c{f{{ADb{e}}}}}{{ADb{e}}}{}Hn}{{}En}{ce{}{}}{{{f{{ADb{c}}}}}eHn{}}{{{f{{ADb{c}}}}En}dHn}0{{{f{c}}En}d{}}{{{f{{ADb{c}}}}}{{ADn{{f{c}}{ADj{c}}ADl}}}Hn}{{{f{{ADb{c}}}}}{{ADn{egADl}}}Hn{}{}}{{{f{{ADb{c}}}}}EnHn}0`{db}{{{f{Bh{ADb{c}}}}{An{Gl}}}bHn}{{{f{Bh{ADb{c}}}}EnEn}bHn}{{{f{c}}EnEn}e{}{}}01{{{f{{ADb{c}}}}En}{{Gn{{AAn{Gb}}{AAn{Gb}}}}}Hn}0{{{f{Hl}}}{{AAn{Hl}}}}{{{f{{ADb{c}}}}}{{AAn{Gb}}}Hn}{{{f{c}}}e{}{}}{g{{Gh{{ADb{c}}e}}}Hn{}{{Gf{}{{B`{{Gh{{An{{f{c}}}}e}}}}}}}}{g{{Gh{{ADb{c}}e}}}Hn{}{{Gf{}{{B`{{Gh{{f{c}}e}}}}}}}}{{ADdg}{{Gh{ie}}}{}{}{{Gf{}{{B`{{Gh{ce}}}}}}}{}}0{c{{Gh{e}}}{}{}}0{{{f{c}}}Nl{}}{{{f{Hl}}}{{f{Bf}}}}{{}{{f{Bf}}}}{{{f{{ADb{c}}}}}{{An{{f{Gl}}}}}Hn}{{{f{{ADb{c}}}}En}{{f{c}}}Hn}{{{f{{ADb{c}}}}En}eHn{}}1{{{f{{ADb{c}}}}}{{f{{Kl{{Fb{c}}}}}}}Hn}{{{f{{ADb{c}}}}}eHn{}}{{{f{{ADb{c}}}}}{{ADj{c}}}Hn}{ce{}{}}{{{f{{ADb{c}}}}{An{Gl}}}{{AAn{Gb}}}Hn}{{{ADb{c}}{An{Gl}}}{{ADb{c}}}Hn}0`{{{f{Bh{AE`{c}}}}}bHn}0{{{f{Bh{AE`{c}}}}{An{c}}}bHn}{{{f{Bh{AE`{c}}}}{f{ADf}}}bHn}{{{f{Bh{AE`{c}}}}c}bHn}{{{f{Bh{AE`{c}}}}{f{ADf}}}{{Af{b}}}Hn}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{}{{AE`{c}}}Hn}{En{{f{c}}}{}}{En{{f{Bhc}}}{}}{Enb}{{{AE`{c}}}{{AEb{c}}}Hn}{cc{}}{{}En}{ce{}{}}{{{f{Bf}}En}{{AE`{c}}}Hn}{{{f{Bh{AE`{c}}}}}AdHn}{c{{Gh{e}}}{}{}}0{{{f{c}}}Nl{}}4````{{{f{BhAEd}}}b}{{{f{BhAEd}}{An{{f{ADf}}}}}b}{{{f{BhAEd}}{f{ADf}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}`?>={{{f{AEf}}{f{BhFn}}}G`}<{{{f{Bf}}En}{{AAn{AEd}}}}{{}AEh}{{}ADd}>={{}d}`{{AEjAEhADd}b}{{{f{BhAEd}}}Ad}==<{ce{}{}}``````````````````````````````````````````{{{f{c}}h}b{}}{{{f{{AEn{}{{AEl{c}}}}}}g}{{AEn{}{{AEl{c}}}}}{}{}{{Cb{{An{e}}}{{C`{{An{c}}}}}}Cd}}{{{f{AF`}}{f{Cb}}}AF`}{{{f{AF`}}{f{Cb}}}{{l{c}}}Bn}{{{f{{AEn{}{{AEl{c}}}}}}i{f{Bh{Df{g}}}}}b{}{}{}{{Cb{{An{e}}{f{g}}}{{C`{g}}}}}}{{{f{{AEn{}{{AEl{c}}}}}}g}{{AEn{}{{AEl{c}}}}}{}{}{{Cb{e}{{C`{c}}}}Cd}}{{{f{AFb}}Dn}E`}{{{f{AFb}}{f{{Df{Ad}}}}{f{Eb}}}{{Af{E`}}}}{{{f{AFd}}}{{Af{E`}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{AFf}}{f{Dj}}}{{Af{Ad}}}}0{{{f{AFf}}{f{Dj}}Eh}{{Af{Ad}}}}{{{f{AFh}}}AFh}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{En{{f{c}}}{}}{En{{f{Bhc}}}{}}{Enb}{{{f{AFh}}{f{AFh}}}d}{{{f{{AFj{}{{B`{c}}}}}}e}c{}{}}0{{{f{AFl}}}{{Af{Ad}}}}{{{f{AFl}}}{{Af{{Gn{Ad{AFn{Jh}}}}}}}}`{{{f{AG`}}c}{{Af{AG`}}}{}}{{{f{AGb}}{f{Fh}}}{{Af{{l{c}}}}}Bn}`{{{f{AFh}}{f{BhFn}}}G`}{cc{}}`{{{f{Bf}}cEn}AGd{}}{{{f{Bf}}En}AGf}`{{{f{AGh}}En}{{Af{Hd}}}}{{{f{AGh}}En}Hd}::{{{f{AFh}}{f{Bhc}}}bAB`}{{}En}{ce{}{}}{{{f{AGj}}}{{Af{Fh}}}}{{{f{AGl}}}{{Af{Fh}}}}??{{{f{AGn}}}{{An{c}}}{}}{{{f{AGn}}}{{An{Kf}}}}{{{f{AH`}}}{{An{c}}}{}}2{{{f{AGn}}}{{An{{Gn{cc}}}}}{}}{{{f{AFd}}}{{Af{En}}}}{{{f{AHb}}EnEn}{{l{c}}}Bn}{{{f{{AFj{}{{B`{c}}}}}}e}c{}{}}0{{{f{AFl}}}{{Af{{AFn{Jh}}}}}}{{{f{AH`}}KfMj}{{Af{{An{c}}}}}{}}{{{f{AHd}}}AHd}{{{f{AHf}}{f{Cb}}Ml}{{Af{Ad}}}}{{{f{AHh}}c{An{e}}}{{Af{AHh}}}{{Gf{}{{B`{Hf}}}}}{}}{{{f{AHh}}ci}{{Af{AHh}}}{{Gf{}{{B`{Hf}}}}}{}{}{{Cb{{An{e}}}{{C`{{An{g}}}}}}}}`{{{f{AHh}}{f{Fh}}{An{c}}}{{Af{AHh}}}{}}{{{f{AHj}}Jh}{{l{c}}}Bn}{{{f{AHl}}Jhc}{{l{e}}}{}Bn}`{{{f{AFb}}d}{{l{c}}}Bn}{{{f{AFb}}Dn}{{l{c}}}Bn}{{{f{AHn}}Dd}{{An{Kf}}}}{{{f{AGn}}}{{An{c}}}{}}{{{f{AI`}}{f{c}}}{{Af{AI`}}}Mn}{{{f{AIb}}{f{c}}}AIbMn}{{{f{AId}}}{{Fb{{f{{Df{Dd}}}}}}}}{{{f{c}}}e{}{}}{c{{Gh{e}}}{}{}}0{{{f{c}}}Nl{}}{{{f{AFd}}}{{Af{AFd}}}}8{ce{}{}}`{{{f{AIf}}{f{Fh}}{f{{l{c}}}}}{{Af{{l{c}}}}}Bn}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}BnBn{{Cb{ff}{{C`{}}}}}{{Cb{f}{{C`{}}}}}{{Cb{f}{{C`{}}}}}Bn}{{{l{c}}{l{e}}gik}{{l{m}}}BnBn{{Cb{}{{C`{}}}}}{{Cb{}{{C`{}}}}}{{Cb{}{{C`{}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}BnBnGb{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Gd{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}BnBn{{AIh{AnAn}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}g}bBnBn{{Ch{AnAn}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}CnBnBn{{Ch{{f{BhD`}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}BnBn{}{{Ch{}{{C`{g}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}BnBn{GbAIj}{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Gd{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}BnBnGb{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Gd{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}BnBnGb{{Ch{}{{C`{g}}}}}{{Bn{}{{Gd{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Af{Ad}}}BnBn{{Ch{ff}{{C`{{AAn{Gb}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}BnBn{{Ch{ff}{{C`{{AAn{Gb}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{Gh{{l{m}}i}}}BnBn{}{}{{Ch{AnAn}{{C`{{Gh{{An{g}}i}}}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}BnBnBn{{AIl{AnAnAn}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Gh{{l{m}}i}}}BnBnGbAIn{{Ch{ff}{{C`{{Gh{gi}}}}}}}{{Bn{}{{Gd{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Bf}}}{{Gh{{l{m}}i}}}BnBnGbAIn{{Ch{ff}{{C`{{Gh{gi}}}}}}}{{Bn{}{{Gd{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Gh{{l{c}}g}}}BnBnAIn{{Ch{ff}{{C`{{Gh{{AAn{Gb}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Gh{{l{o}}k}}}BnBnBn{}{}{{Ch{AnAnAn}{{C`{{Gh{{An{i}}k}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gh{{l{k}}g}}}Bn{}{}{{Ch{An}{{C`{{Gh{{An{e}}g}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gh{{l{k}}g}}}Bn{}{}{{Ch{}{{C`{{Gh{eg}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gh{{l{k}}g}}}Bn{GbAIj}AIn{{Ch{f}{{C`{{Gh{eg}}}}}}}{{Bn{}{{Gd{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Bn{{AJ`{An}}}Bn}{{{f{{l{c}}}}e}{{l{g}}}BnAJ`Bn}{{{f{{l{c}}}}g}{{l{i}}}BnGb{{Ch{f}{{C`{e}}}}}{{Bn{}{{Gd{e}}}}}}{{{l{c}}g}{{l{i}}}BnGb{{Ch{}{{C`{e}}}}}{{Bn{}{{Gd{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Bn{GbAIj}{{Ch{f}{{C`{e}}}}}{{Bn{}{{Gd{e}}}}}}0{{{f{{l{c}}}}}Enn}0{{JdJd}Jd}{{{f{E`}}Hf}{{Af{b}}}}{{{f{{AJb{Hf}}}}Hf}{{Af{b}}}}````{{{f{c}}h}b{}}{{{f{{l{c}}}}eAJdd}{{Fb{Hf}}}Bn{{Bd{}{{B`{An}}}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{AJd}}}AJd}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{{}AJd}{En{{f{c}}}{}}{En{{f{Bhc}}}{}}{Enb}{{{f{AJd}}{f{AJd}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{AJd}}{f{BhFn}}}G`}{cc{}}{{{f{AJd}}{f{Bhc}}}bAB`}{{}En}{ce{}{}}{{{f{{Df{f}}}}cHfe}{{Fb{Hf}}}{{Bd{}{{B`{An}}}}}{{Cb{fEnf}{{C`{d}}}}}}{{{f{c}}}e{}{}}{c{{Gh{e}}}{}{}}0{{{f{c}}}Nl{}}4`{{En{f{Bh{Fb{d}}}}}b}```{{{f{AJf}}EnEn}AJf}0{{En{f{{Df{Ad}}}}{f{BhEb}}}{{Af{{AJh{E`}}}}}}{{{f{{Df{Ad}}}}{f{{Df{d}}}}{f{{Df{d}}}}}{{Af{AJj}}}}{{{f{{Df{Ad}}}}{f{{Df{d}}}}{f{{Df{d}}}}}{{Af{{AJl{Jh}}}}}}{{{f{Bf}}{f{{Df{Ad}}}}{f{{Df{d}}}}{f{{Df{d}}}}}{{Af{AJn}}}}{{{f{Bf}}{f{{Df{Ad}}}}}{{Af{AJn}}}}{{{f{Ad}}}{{Af{F`}}}}{{{f{{Df{Ad}}}}}{{Af{AJj}}}}{{{f{{Df{Ad}}}}}{{Af{AJn}}}}0```{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{{{f{Dn}}}Dn}{{{f{Eb}}}Eb}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{c}}}b{}}00{{}Dn}{{}Eb}{En{{f{c}}}{}}0{En{{f{Bhc}}}{}}0``{Enb}0{{{f{Dn}}{f{Dn}}}d}{{{f{Eb}}{f{Eb}}}d}{{{f{c}}{f{e}}}d{}{}}00000{{{f{Dn}}{f{BhFn}}}G`}{{{f{Eb}}{f{BhFn}}}G`}{cc{}}{{{f{Eb}}}Dn}{{{f{Dn}}}Eb}2{{{f{Dn}}{f{Bhc}}}bAB`}{{{f{Eb}}{f{Bhc}}}bAB`}{{}En}0{ce{}{}}0````{{}Dn}{{}Eb}``{{{f{AJf}}EnEn}AJf}0{{{f{c}}}e{}{}}0{c{{Gh{e}}}{}{}}000{{{f{c}}}Nl{}}066{{Dnd}Dn}{{Ebd}Eb}1010{{Ebc}Eb{{Gf{}{{B`{d}}}}}}210{DnDn}{EbEb}`{AK`Jh}00{{}d}>>0`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}00000000000000000000000000000{{{f{Dl}}}d}{{{f{Ij}}{f{Ij}}}c{}}{{{f{Fh}}{f{Fh}}}c{}}{{FhFh}c{}}{{{f{Cn}}{f{Bf}}}c{}}{{CnCn}c{}}{{{f{Cn}}{f{Cn}}}c{}}{{{f{Ed}}{f{{Df{Dd}}}}}c{}}{{{f{Ed}}{f{Ed}}}c{}}{{EdEd}c{}}{{{f{Hd}}{f{Hd}}}Hd}{{{f{{l{c}}}}{f{Ad}}}{{Gh{AdAKb}}}{}}000000{{{f{Cn}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ed}}{f{Ad}}}{{Af{Ad}}}}{{{f{Fh}}{f{Ad}}}{{Af{Ad}}}}{{{f{Dl}}{f{Aj}}}Ad}{{{f{Fh}}{f{Aj}}}Ad}{{{f{Cn}}{f{Aj}}}Ad}{{{f{Ed}}{f{Aj}}}Ad}{{{f{{AEb{c}}}}{f{Aj}}}AdHn}{{{f{Fh}}}d}{{{f{Fh}}}{{An{d}}}}{{{f{Dl}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{f{Dl}}{f{Bf}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{{f{Dl}}c}Dl{{Cb{{An{Ad}}}{{C`{{An{Ad}}}}}}Cd}}{{{f{Fh}}c}Fh{{Cb{{An{d}}}{{C`{{An{d}}}}}}Cd}}{{{f{Cn}}c}Cn{{Cb{{An{{f{Bf}}}}}{{C`{{An{{AKd{Bf}}}}}}}}Cd}}{{{f{Ed}}c}Ed{{Cb{{An{{f{{Df{Dd}}}}}}}{{C`{{An{{AKd{{Df{Dd}}}}}}}}}}Cd}}{{{f{{AEb{c}}}}e}{{AEb{c}}}Hn{{Cb{{An{{f{c}}}}}{{C`{{An{c}}}}}}Cd}}{{{f{Dl}}c}Dl{{Ch{Cf}{{C`{Ad}}}}}}{{{f{Dl}}e}{{l{g}}}{}{{Ch{{An{Cf}}}{{C`{{An{c}}}}}}Cd}Bn}{{{f{AKf}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{AKh}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{Fh}}{f{Cb}}}Fh}{{{f{Cn}}{f{Cb}}}Cn}{{{f{Ed}}{f{Cb}}}Ed}{{{f{Fh}}{f{Cb}}}{{l{c}}}Bn}{{{f{Cn}}{f{Cb}}}{{l{c}}}Bn}{{{f{Ed}}{f{Cb}}}{{l{c}}}Bn}{{{f{Cn}}c}Cn{{Ch{{f{Bf}}}{{C`{{f{Bf}}}}}}}}{{{f{Ed}}c}Ed{{Ch{{f{{Df{Dd}}}}}{{C`{{f{{Df{Dd}}}}}}}}}}{{{f{Dl}}{f{Cb}}}{{Af{Dl}}}}{{{f{Dl}}e{f{Bh{Df{c}}}}}b{}{{Cb{{An{Ad}}{f{c}}}{{C`{c}}}}}}{{{f{Fh}}e{f{Bh{Df{c}}}}}b{}{{Cb{{An{d}}{f{c}}}{{C`{c}}}}}}{{{f{Cn}}e{f{Bh{Df{c}}}}}b{}{{Cb{{An{{f{Bf}}}}{f{c}}}{{C`{c}}}}}}{{{f{Ed}}e{f{Bh{Df{c}}}}}b{}{{Cb{{An{{f{{Df{Dd}}}}}}{f{c}}}{{C`{c}}}}}}{{{f{{AEb{c}}}}g{f{Bh{Df{e}}}}}bHn{}{{Cb{{An{{f{c}}}}{f{e}}}{{C`{e}}}}}}{{{f{Dl}}c}Dl{{Cb{Ad}{{C`{Ad}}}}Cd}}{{{f{Fh}}c}Fh{{Cb{d}{{C`{d}}}}Cd}}{{{f{Cn}}c}Cn{{Cb{{f{Bf}}}{{C`{{AKd{Bf}}}}}}Cd}}{{{f{Ed}}c}Ed{{Cb{{f{{Df{Dd}}}}}{{C`{{AKd{{Df{Dd}}}}}}}}Cd}}{{{f{{AEb{c}}}}e}{{AEb{c}}}Hn{{Cb{{f{c}}}{{C`{c}}}}Cd}}{{{f{Fh}}Dn}E`}{{{f{Cn}}Dn}E`}{{{f{Ed}}Dn}E`}{{{f{AJn}}Dn}E`}{{{f{Fh}}{f{{Df{Ad}}}}{f{Eb}}}{{Af{E`}}}}{{{f{Cn}}{f{{Df{Ad}}}}{f{Eb}}}{{Af{E`}}}}{{{f{Ed}}{f{{Df{Ad}}}}{f{Eb}}}{{Af{E`}}}}{{{f{AJn}}{f{{Df{Ad}}}}{f{Eb}}}{{Af{E`}}}}{{{f{Fh}}}{{Af{E`}}}}{{{f{Cn}}}{{Af{E`}}}}{{{f{Ed}}}{{Af{E`}}}}{{{f{{AEb{c}}}}}{{Af{E`}}}Hn}{eAKj{}{{Gf{}{{B`{c}}}}}}0{{ADde}AKl{}{{Gf{}{{B`{c}}}}}}0{{{f{Cn}}}Ed}{{{f{Hd}}}Hd}{{{f{Dj}}}{{f{Dj}}}}{{{f{Md}}}{{f{Dj}}}}{{{f{AKn}}}{{f{Dj}}}}{{{f{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}}}{{An{{f{{Df{c}}}}}}}A@f{ALf{ALh{c}}}{{Ff{}{{B`{c}}}}HbIlIn}}{{{f{Dl}}{f{{l{c}}}}{f{{l{e}}}}g}DlBnBn{{Ch{{An{Cf}}AnAn}{{C`{{An{Ad}}}}}}}}{{FhFh}c{}}{{{f{Fh}}{f{Fh}}}c{}}1010{{{f{c}}}{{f{e}}}{}{}}0000000000000000000000000000000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000000000000000000000000000000000{Dj{{AAn{Dj}}}}{{{f{ALj}}{f{ALj}}c}{{Af{ALj}}}ALl}{{{f{ALn}}{f{Dj}}}{{Af{Ad}}}}0{{{f{Hd}}{f{Dj}}}Hd}{{{f{Dj}}Dj}Dj}{{{f{Dl}}{f{Dj}}}{{Af{Ad}}}}{{{f{Fh}}{f{Dj}}}{{Af{Ad}}}}{{{f{Cn}}{f{Dj}}}{{Af{Ad}}}}{{{f{Ed}}{f{Dj}}}{{Af{Ad}}}}{{{f{AJn}}{f{Dj}}}{{Af{Ad}}}}{{{f{ALn}}{f{Dj}}Eh}{{Af{Ad}}}}{{{f{Ij}}{f{Dj}}Eh}{{Af{Ad}}}}{{{f{Dl}}{f{Dj}}Eh}{{Af{Ad}}}}{{{f{Fh}}{f{Dj}}Eh}{{Af{Ad}}}}{{{f{Cn}}{f{Dj}}Eh}{{Af{Ad}}}}{{{f{Ed}}{f{Dj}}Eh}{{Af{Ad}}}}{{{f{AJn}}{f{Dj}}Eh}{{Af{Ad}}}}`{{{f{{l{c}}}}{f{Ad}}}{{Gh{AdAKb}}}{}}0000{{{f{AKf}}{f{Ad}}}{{Af{Ad}}}}{{{f{AKh}}{f{Ad}}}{{Af{Ad}}}}{{{f{{AM`{ce}}}}}{{AM`{ce}}}BnBn}{{{f{AMb}}}AMb}{{{f{Hd}}}Hd}{{{f{AMd}}}AMd}{{{f{Dj}}}Dj}{{{f{AMf}}}AMf}{{{f{Md}}}Md}{{{f{AMh}}}AMh}{{{f{AMj}}}AMj}{{{f{AMl}}}AMl}{{{f{Lj}}}Lj}{{{f{Lh}}}Lh}{{{f{AMn}}}AMn}{{{f{AN`}}}AN`}{{{f{Ln}}}Ln}{{{f{Lb}}}Lb}{{{f{Cl}}}Cl}{{{f{Cj}}}Cj}{{{f{ANb}}}ANb}{{{f{ANd}}}ANd}{{{f{Dh}}}Dh}{{{f{Db}}}Db}{{{f{ANf}}}ANf}{{{f{Al}}}Al}{{{f{ANh}}}ANh}{{{f{ANj}}}ANj}{{{f{ANl}}}ANl}{{{f{ANn}}}ANn}{{{f{ADd}}}ADd}{{{f{AO`}}}AO`}{{{f{c}}{f{Bhe}}}b{}{}}00000000000000000000000000000{{{f{c}}}b{}}00000000000000000000000000000000000000000000000000000{{{f{BhMd}}Dj}b}{AObe{}{{AKj{c}}AIj}}0{{AObADd}e{}{{AKl{c}}AIj}}0{{{f{Dj}}}d}00{AOdDj}{{{f{Md}}}{{f{Dj}}}}{{}Hd}{{}AMd}{{}Dj}{{}ADd}{En{{f{c}}}{}}{{{f{{AM`{ce}}}}}{{f{g}}}BnBn{}}1111111111111111111111111111111111{En{{f{Bhc}}}{}}{{{f{Bh{AM`{ce}}}}}{{f{Bhg}}}BnBn{}}1111111111111111111111111111111111{{{f{Ij}}{f{Ij}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gh{AdAKb}}}{}}000000{Enb}0000000000000000000000000000000000{{{f{ALn}}}{{f{Dj}}}}{{{f{Ij}}}{{f{Dj}}}}{{{f{Hd}}}Dj}`{{{f{Hd}}{f{Hd}}}d}{{{f{AMd}}{f{AMd}}}d}{{{f{Dj}}{f{Dj}}}d}{{{f{Dj}}{f{ADd}}}d}{{{f{AMf}}{f{AMf}}}d}{{{f{Md}}{f{Md}}}d}{{{f{AMh}}{f{AMh}}}d}{{{f{ADd}}{f{ADd}}}d}{{{f{AO`}}{f{AO`}}}d}{{{f{Hd}}{f{Hd}}d}d}{{{f{Dl}}{f{Dl}}}Fh}{{{f{Fh}}{f{Fh}}}Fh}{{{f{Cn}}{f{Cn}}}Fh}{{{f{Cn}}{f{Bf}}}Fh}{{{f{Ed}}{f{{Df{Dd}}}}}Fh}{{{f{Ed}}{f{Ed}}}Fh}543201{{{f{c}}{f{e}}}d{}{}}00000000000000000000000{{{f{Dl}}}{{Af{{Gn{Ad{AFn{Jh}}}}}}}}{{{f{{AM`{ce}}}}}MdBnBn}{{{f{Fh}}d}{{Af{Fh}}}}{{{f{Ed}}{f{{Df{Dd}}}}}{{Af{Ed}}}}{{{f{Cn}}{f{Fh}}}{{Af{{l{Dh}}}}}}{{{f{Ed}}{f{Fh}}}{{Af{{l{Db}}}}}}{{{f{{AEb{c}}}}{f{Fh}}}{{Af{{l{{Hj{c}}}}}}}Hn}{{ALl{f{AOf}}{f{AOf}}}{{Af{AOf}}}}{{{f{Dl}}{f{BhFn}}}G`}{{{f{Cn}}{f{BhFn}}}G`}{{{f{Ed}}{f{BhFn}}}G`}{{{f{{AEb{c}}}}{f{BhFn}}}G`Hn}{{{f{AMb}}{f{BhFn}}}G`}{{{f{Hd}}{f{BhFn}}}G`}0{{{f{AMd}}{f{BhFn}}}G`}{{{f{Dj}}{f{BhFn}}}G`}0{{{f{AMf}}{f{BhFn}}}G`}{{{f{Md}}{f{BhFn}}}G`}{{{f{AMh}}{f{BhFn}}}G`}0{{{f{ADd}}{f{BhFn}}}{{Gh{bAOh}}}}{{{f{AO`}}{f{BhFn}}}{{Gh{bAOh}}}}{{{f{Dl}}c}b{{Ch{{An{Cf}}}}}}{cc{}}000000{dHd}{cHdAOj}{{{An{c}}}Hd{{AOl{Hd}}}}{{{f{{Df{Dd}}}}}Hd}{{{f{Bf}}}Hd}55{{{f{ADd}}}Dj}{HdDj}{{{f{Hd}}}Dj}88{{{f{AOn}}}Md}9{{{f{Hd}}}Md}:{{{f{AO`}}}AMh};;;;;;;;;;;;;;;;;;;;;{B@`ADd}{B@bADd}={{{f{ADd}}d}Dj}{eDl{{B@d{Ad}}}{{Gf{}{{B`{c}}}}}}{cDl{{Gf{}{{B`{{An{{AAn{Gb}}}}}}}}}}{cDl{{Gf{}{{B`{{An{Ad}}}}}}}}{cFh{{Gf{}{{B`{d}}}}}}{eCn{{Ld{Bf}}}{{Gf{}{{B`{{An{c}}}}}}}}{eCn{{`{Bf}}}{{Gf{}{{B`{c}}}}}}{eEd{{Ld{{Df{Dd}}}}}{{Gf{}{{B`{{An{c}}}}}}}}{eEd{{`{{Df{Dd}}}}}{{Gf{}{{B`{c}}}}}}{e{{AEb{c}}}Hn{{Gf{}{{B`{{An{c}}}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Bd{}{{B`{{An{d}}}}}}}}{{{f{Bf}}e}Cn{{Ld{Bf}}}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}Ed{{Ld{{Df{Dd}}}}}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}{{AEb{c}}}Hn{{Bd{}{{B`{{An{c}}}}}}}}<:98756{eAJn{{Ld{{Df{Dd}}}}}{{Gf{}{{B`{{An{c}}}}}}}}{eAJn{{`{{Df{Dd}}}}}{{Gf{}{{B`{c}}}}}}6{{{f{Bf}}c}{{l{Al}}}{{Bd{}{{B`{d}}}}}}{{{f{Bf}}e}Cn{{Ld{Bf}}}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}e}Ed{{Ld{{Df{Dd}}}}}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}e}{{AEb{c}}}Hn{{Bd{}{{B`{c}}}}}}{{B@fDj}Md}{cDl{{H`{}{{B`{{An{Ad}}}}}}}}{cFh{{H`{}{{B`{d}}}}}}{cFh{{H`{}{{B`{{An{d}}}}}}}}{eCn{{Ld{Bf}}IlIn}{{H`{}{{B`{{An{c}}}}}}}}{eCn{{`{Bf}}IlInB@h}{{H`{}{{B`{c}}}}}}{eEd{{Ld{{Df{Dd}}}}IlIn}{{H`{}{{B`{{An{c}}}}}}}}{eEd{{`{{Df{Dd}}}}IlInB@h}{{H`{}{{B`{c}}}}}}{{c{f{Bf}}Dj}Dl{{H`{}{{B`{{An{Ad}}}}}}}}{{{f{Bf}}{f{{Df{d}}}}}Fh}{{{f{Bf}}{f{{Df{c}}}}}Cn{{Ld{Bf}}}}{{{f{Bf}}{f{{Df{c}}}}}Ed{{Ld{{Df{Dd}}}}}}{{{f{Bf}}{f{{Df{c}}}}}{{AEb{c}}}Hn}{{{f{Bf}}{f{{Df{{An{d}}}}}}}Fh}{{{f{Bf}}{f{{Df{{An{c}}}}}}}Cn{{Ld{Bf}}}}{{{f{Bf}}{f{{Df{{An{c}}}}}}}Ed{{Ld{{Df{Dd}}}}}}{{{f{Bf}}{f{{Df{{An{c}}}}}}}{{AEb{c}}}Hn}{cFh{{Hb{}{{B`{{An{d}}}}}}}}{{{Fb{c}}ADd}{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}A@f{ALf{ALh{c}}}{{Ff{}{{B`{c}}}}HbIlIn}}{{{Fb{c}}ADd}{{AIj{}{{AL`{e}}{ALb{c}}{ALd{g}}}}}{ALf{ALh{e}}}A@f{{Ff{}{{B`{e}}}}HbIlIn}}{{EncADd}{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}A@f{ALf{ALh{c}}}{{Ff{}{{B`{c}}}}HbIlIn}}{{{f{Bf}}{f{Ad}}En}Dl}{{{f{Bf}}dEn}Fh}{{{f{Bf}}{f{Bf}}En}Cn}{{{f{Bf}}{f{{Df{Dd}}}}En}Ed}{{{f{Bf}}{f{{Df{Dd}}}}En}AJn}{{{f{Bf}}cEn}{{AEb{c}}}Hn}{{EnADd}{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}A@f{ALf{ALh{c}}}{{Ff{}{{B`{c}}}}HbIlIn}}{{{f{Bf}}En}Dl}{{{f{Bf}}En}Fh}{{{f{Bf}}En}Cn}{{{f{Bf}}En}Ed}{{{f{Bf}}En}AJn}{{{f{Bf}}En}{{AEb{c}}}Hn}{{{f{Bf}}En{f{Dj}}}Dl}{{{f{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}}En}{{An{c}}}A@f{ALf{ALh{c}}}{{Ff{}{{B`{c}}}}HbIlIn}}{{{f{Ij}}En}{{Af{Hd}}}}{{{f{ALn}}En}{{Af{Hd}}}}0{{{f{Dl}}En}{{Af{Hd}}}}{{{f{Fh}}En}{{Af{Hd}}}}{{{f{Cn}}En}{{Af{Hd}}}}{{{f{Ed}}En}{{Af{Hd}}}}{{{f{AJn}}En}{{Af{Hd}}}}{{{f{{AEb{c}}}}En}{{Af{Hd}}}Hn}{{{f{Ij}}En}Hd}{{{f{ALn}}En}Hd}0{{{f{Dl}}En}Hd}{{{f{Fh}}En}Hd}{{{f{Cn}}En}Hd}{{{f{Ed}}En}Hd}{{{f{AJn}}En}Hd}{{{f{{AEb{c}}}}En}HdHn}{{{f{Dl}}En}{{An{Ad}}}}{{}Dj}00000000000000000000000{{{f{Dl}}}Ad}{{{f{{AEb{c}}}}En}{{An{{f{Hl}}}}}Hn}0{{{f{Hd}}}{{An{{f{Bf}}}}}}{{{f{B@j}}En}Hd}{{{f{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}}En}{{An{c}}}A@f{ALf{ALh{c}}}{{Ff{}{{B`{c}}}}HbIlIn}}{{{f{Dl}}}En}{{{f{Cn}}}En}{{{f{AJn}}}En}{{{f{Dl}}dd}{{Af{Aj}}}}{{{f{Fh}}dd}{{Af{Aj}}}}{{{f{Cn}}dd}{{Af{Aj}}}}{{{f{Ed}}dd}{{Af{Aj}}}}{{{f{AJn}}dd}{{Af{Aj}}}}{{{f{{AEb{c}}}}dd}{{Af{Aj}}}Hn}{{{f{Dl}}{f{Dl}}}Fh}{{{f{Fh}}{f{Fh}}}Fh}{{{f{Cn}}{f{Cn}}}Fh}{{{f{Cn}}{f{Bf}}}Fh}{{{f{Ed}}{f{{Df{Dd}}}}}Fh}{{{f{Ed}}{f{Ed}}}Fh}543210{{{f{Hd}}{f{Bhc}}}bAB`}{{{f{AMd}}{f{Bhc}}}bAB`}{{{f{Dj}}{f{Bhc}}}bAB`}{{{f{Md}}{f{Bhc}}}bAB`}{{{f{AMh}}{f{Bhc}}}bAB`}{{{f{ADd}}{f{Bhc}}}bAB`}{{{f{AO`}}{f{Bhc}}}bAB`}{{{f{Hd}}{f{Bhc}}d}bAB`}{DjDj}{{}En}0000000000000000000000000000000000{{{f{Dl}}}{{f{Dj}}}}{{{f{Dj}}}{{An{{f{Dj}}}}}}{{{f{ADd}}}{{An{{f{ADd}}}}}}{ce{}{}}0000000000000000000000000000000000{{B@l{An{En}}En}{{Af{Ij}}}}{{B@l{An{En}}En}Ij}{{{f{Dl}}}c{}}{{{f{Fh}}}c{}}{{{f{Cn}}}c{}}{{{f{Ed}}}c{}}{{{f{AJn}}}c{}}{{{f{{AEb{c}}}}}eHn{}}{{B@nDj}{{Af{Kd}}}}{IjAd}{B@lAd}{Hd{{Af{Hd}}}}{{{f{Dj}}}d}00{{{f{Hd}}}d}111010111110101011110111101{{{f{ADd}}}d}{{{f{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}}}{{ADn{cgADl}}}A@f{ALf{ALh{c}}}{{Ff{}{{B`{c}}}}HbIlIn}}{{{f{Dl}}}{{`{{Bd{}{{B`{Jh}}}}}}}}{{{f{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}}}{{An{c}}}A@f{ALf{ALh{c}}}{{Ff{}{{B`{c}}}}HbIlIn}}{{{f{Dj}}}{{f{Dj}}}}{{{f{Dl}}{f{Dl}}}Fh}{{{f{Fh}}{f{Fh}}}Fh}{{{f{Cn}}{f{Cn}}}Fh}{{{f{Cn}}{f{Bf}}}Fh}{{{f{Ed}}{f{Ed}}}Fh}{{{f{Ed}}{f{{Df{Dd}}}}}Fh}542301{{{f{ALj}}{f{ALj}}}{{Af{{Gn{ALjALj}}}}}}{{DlDl}{{Af{{Gn{DlDl}}}}}}{{{f{Dj}}{f{Dj}}}{{Af{d}}}}{{{f{AMd}}}{{An{Dj}}}}{{{f{Fh}}}{{An{d}}}}{{{f{Fh}}}Kd}{{{f{Cn}}}Kd}{{{f{Ed}}}Kd}{{{f{Fh}}}{{An{Kf}}}}{{{f{AKf}}}{{An{I`}}}}{{{f{AKh}}}{{An{Kf}}}}{{{f{AKf}}}Kd}{{{f{AKh}}}Kd}{{{f{Dj}}{f{Dj}}}{{Af{Dj}}}}9876{{{f{Bf}}{f{{Df{Dd}}}}EnEn}Fh}{{{f{Ij}}{f{Ij}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gh{AdAKb}}}{}}000000{{{f{Cn}}}{{Af{En}}}}{{{f{Ed}}}{{Af{En}}}}{{{f{Md}}}{{f{B@f}}}}`{{}c{}}00{{{f{Bf}}c}Cn{{Ld{{Df{{An{{f{Bf}}}}}}}}}}{{{f{Bf}}c}Cn{{Ld{{Df{{AKd{Bf}}}}}}}}{{{f{Bf}}c}Cn{{Ld{{Df{{An{{AKd{Bf}}}}}}}}}}{{{f{Bf}}c}Cn{{Ld{{Df{{f{Bf}}}}}}}}{{{f{Bf}}c}Ed{{Ld{{Df{{AKd{{Df{Dd}}}}}}}}}}{{{f{Bf}}c}Ed{{Ld{{Df{{An{{AKd{{Df{Dd}}}}}}}}}}}}{{{f{Bf}}c}Ed{{Ld{{Df{{An{{f{{Df{Dd}}}}}}}}}}}}{{{f{Bf}}c}Ed{{Ld{{Df{{f{{Df{Dd}}}}}}}}}}{{{f{Bf}}{f{{Df{c}}}}}{{AEb{c}}}Hn}{{{f{Bf}}e}{{AEb{c}}}Hn{{Ld{{Df{{An{c}}}}}}}}{{{f{Bf}}Dj}Md}{{{f{Bf}}}{{AEb{c}}}Hn}{{{f{Dl}}EnEn}Dl}{{{f{Fh}}EnEn}Fh}{{{f{Cn}}EnEn}Cn}{{{f{Ed}}EnEn}Ed}{{{f{AJn}}EnEn}AJn}{{{f{{AEb{c}}}}EnEn}{{AEb{c}}}Hn}{{{f{Bf}}{Fb{c}}}{{AEb{c}}}Hn}{{{f{Bf}}{Fb{c}}Gl}{{AEb{c}}}Hn}{{{l{c}}}{{AM`{ec}}}BnBn}{{}AMf}{Fhc{}}{{{f{Fh}}}c{}}{{{f{Dl}}{f{Dl}}}Fh}{{{f{Fh}}{f{Fh}}}Fh}{{{f{Cn}}{f{Bf}}}Fh}{{{f{Cn}}{f{Cn}}}Fh}{{{f{Ed}}{f{Ed}}}Fh}{{{f{Ed}}{f{{Df{Dd}}}}}Fh}542310{{{f{Dl}}}{{Af{{AFn{Jh}}}}}}9{{{f{Dl}}}{{`{{Mf{}{{B`{{An{Ad}}}}}}}}}}{{{f{Cn}}}{{`{{Mf{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{BhDl}}}{{`{{Mh{}{{B`{{An{Ad}}}}}}}}}}{{{f{Cn}}}{{`{{Mh{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{Hd}}{f{Hd}}}{{An{BA`}}}}{{{f{AMh}}{f{AMh}}}{{An{BA`}}}}{{{f{{AM`{ce}}}}}{{f{{l{e}}}}}BnBn}{{{f{Ij}}}{{An{En}}}}{{{f{{AM`{ANhIh}}}}}{{An{En}}}}{{{f{AKf}}KfMj}{{Af{{An{I`}}}}}}{{{f{AKh}}KfMj}{{Af{{An{Kf}}}}}}{{{f{AKf}}KfMj}{{Af{Kd}}}}{{{f{AKh}}KfMj}{{Af{Kd}}}}{{{f{Bf}}EnKf}{{Af{Fh}}}}{{{f{{l{c}}}}{f{Ad}}}{{Gh{AdAKb}}}{}}000000{{{f{Dl}}}Dl}{{{f{Fh}}}Fh}{{{f{Cn}}}Cn}{{{f{Ed}}}Ed}{{{f{AJn}}}AJn}{{{f{{AEb{c}}}}}{{AEb{c}}}Hn}`{{{f{Ij}}}En}{{{f{{AM`{ANhIh}}}}}En}{{{f{Fh}}c{An{d}}}{{Af{Fh}}}{{Gf{}{{B`{Hf}}}}}}{{{f{Cn}}c{An{{f{Bf}}}}}{{Af{Cn}}}{{Gf{}{{B`{Hf}}}}}}{{{f{Ed}}c{An{{f{{Df{Dd}}}}}}}{{Af{Ed}}}{{Gf{}{{B`{Hf}}}}}}{{{f{Fh}}ce}{{Af{Fh}}}{{Gf{}{{B`{Hf}}}}}{{Cb{{An{d}}}{{C`{{An{d}}}}}}}}{{{f{Cn}}ce}{{Af{Cn}}}{{Gf{}{{B`{Hf}}}}}{{Cb{{An{{f{Bf}}}}}{{C`{{An{D`}}}}}}}}{{{f{Ed}}ce}{{Af{Ed}}}{{Gf{}{{B`{Hf}}}}}{{Cb{{An{{f{{Df{Dd}}}}}}}{{C`{{An{{Fb{Dd}}}}}}}}}}{{{f{Fh}}{f{Fh}}{An{d}}}{{Af{Fh}}}}{{{f{Cn}}{f{Fh}}{An{{f{Bf}}}}}{{Af{Cn}}}}{{{f{Ed}}{f{Fh}}{An{{f{{Df{Dd}}}}}}}{{Af{Ed}}}}{{{f{BhDl}}}b}{{{f{BhDl}}Dj}b}{{{f{BhMd}}B@f}b}{{{f{Dl}}Jh}Dl}{{{f{Fh}}Jh}Fh}{{{f{Cn}}Jh}Cn}{{{f{Ed}}Jh}Ed}{{{f{AJn}}Jh}AJn}{{{f{{AEb{c}}}}Jh}{{AEb{c}}}Hn}{{{f{Dl}}Jh{An{{f{Ad}}}}}Dl}{{{f{Fh}}Jh{An{d}}}Fh}{{{f{Cn}}Jh{An{{f{Bf}}}}}Cn}{{{f{Ed}}Jh{An{{f{{Df{Dd}}}}}}}Ed}{{{f{AJn}}Jh{An{{f{{Df{Dd}}}}}}}AJn}{{{f{{AEb{c}}}}Jh{An{{Hj{c}}}}}{{l{{Hj{c}}}}}Hn}{{{f{Fh}}d}Fh}{{{f{Cn}}d}Cn}{{{f{Ed}}d}{{l{Db}}}}{{{f{AJn}}d}AJn}{{{f{Fh}}Dn}{{l{Al}}}}{{{f{Cn}}Dn}{{l{Dh}}}}{{{f{Ed}}Dn}{{l{Db}}}}{{{f{AJn}}Dn}AJn}{{{f{AKf}}Dd}Kd}{{{f{AKh}}Dd}Kd}{{{f{Hd}}{f{Dj}}}{{An{Hd}}}}`{{{f{Ij}}{f{Ij}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gh{AdAKb}}}{}}000000{{{f{Fh}}}{{An{Hf}}}}{{{f{Fh}}}Kd}{{{f{Ed}}}Kd}{{{f{Cn}}{f{c}}}Cn{{Ld{{Df{Hf}}}}Mn}}{{{f{Cn}}{f{E`}}}Cn}{{{f{Ed}}{f{E`}}}Ed}{{{f{Ed}}{f{c}}}Ed{{Ld{{Df{Hf}}}}Mn}}{{{f{Dj}}AMf}ADd}{{{f{Md}}AMf}AOn}{AMhAO`}{{{f{Dj}}{f{Bf}}AMf}AOn}{AMh{{f{Bf}}}}{{{f{Cn}}En}{{Af{Ad}}}}{{{f{BhDl}}Dj}b}{{{f{ADd}}}{{f{ADd}}}}{{{f{Dl}}}{{Af{Nh}}}}{{{f{c}}}e{}{}}00000000000000000000000000000{{{f{Dj}}}Dj}{{{f{ADd}}}BAb}{{{f{Ij}}En}{{Af{{AKd{Ij}}}}}}{{{f{{AM`{ANhIh}}}}En}{{Af{{AKd{{AM`{ANhIh}}}}}}}}{{{f{c}}}D`{}}00{{{f{Ed}}}Cn}{{{f{Hd}}{f{Hd}}}d}{{{f{Dl}}c}{{Af{Dl}}}{{Ch{Cf}{{C`{{Af{Ad}}}}}}}}{{{f{Dl}}e}{{Af{{l{g}}}}}{}{{Ch{{An{Cf}}}{{C`{{Af{{An{c}}}}}}}}Cd}Bn}{g{{Gh{AKje}}}{}{}{{Gf{}{{B`{{Gh{ce}}}}}}}}0{{ADdg}{{Gh{AKle}}}{}{}{{Gf{}{{B`{{Gh{ce}}}}}}}}0{AOb{{Gh{eg}}}{}{{AKj{c}}AIj}{}}0{{AObADd}{{Gh{eg}}}{}{{AKl{c}}AIj}{}}0{{{f{Hd}}}{{Af{c}}}Kb}{c{{Gh{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000{{{f{Hd}}{f{Dj}}}{{Af{Hd}}}}{{{f{Dj}}AMf}{{Af{ADd}}}}{{{f{Dl}}{f{{l{c}}}}e}{{Af{Dl}}}Bn{{Ch{{An{Cf}}An}{{C`{{Af{{An{Ad}}}}}}}}}}{{{f{c}}}Nl{}}0000000000000000000000000000000000{{{f{ADd}}}ADd}{{{f{Fh}}}{{Af{Fh}}}}{{{f{Cn}}}{{Af{Cn}}}}{{{f{Ed}}}{{Af{Ed}}}}{{{f{{AEb{c}}}}}{{Af{{l{{Hj{c}}}}}}}Hn}{{{f{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}}En}cA@f{ALf{ALh{c}}}{{Ff{}{{B`{c}}}}HbIlIn}}0{{{f{Dj}}Hd}d}{{{f{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}}}gA@f{ALf{ALh{c}}}{{Ff{}{{B`{c}}}}HbIlIn}}{{{f{AKf}}Dd}Kd}{{{f{AKh}}Dd}Kd}{{{f{Fh}}Nb{f{Bh{Fb{Ib}}}}}{{Af{b}}}}{{{f{BAd}}Nb{f{Bh{Fb{Ib}}}}}{{Af{b}}}}{{{f{BAf}}Nb{f{Bh{Fb{Ib}}}}}{{Af{b}}}}{{{f{AOf}}Nb{f{Bh{Fb{Ib}}}}}{{Af{b}}}}{{{f{BAh}}Nb{f{Bh{Fb{Ib}}}}}{{Af{b}}}}{{{f{BAj}}Nb{f{Bh{Fb{Ib}}}}}{{Af{b}}}}{{{f{BAl}}Nb{f{Bh{Fb{Ib}}}}}{{Af{b}}}}{{{f{BAn}}Nb{f{Bh{Fb{Ib}}}}}{{Af{b}}}}{{{f{BB`}}Nb{f{Bh{Fb{Ib}}}}}{{Af{b}}}}{{{f{B@l}}Nb{f{Bh{Fb{Ib}}}}}{{Af{b}}}}{{{f{AKf}}Nb{f{Bh{Fb{Ib}}}}}{{Af{b}}}}{{{f{AKh}}Nb{f{Bh{Fb{Ib}}}}}{{Af{b}}}}{{{f{Cn}}Nb{f{Bh{Fb{Ib}}}}}{{Af{b}}}}{{{f{Ed}}Nb{f{Bh{Fb{Ib}}}}}{{Af{b}}}}{{{f{AJn}}Nb{f{Bh{Fb{Ib}}}}}{{Af{b}}}}{{{f{{AEb{c}}}}Nb{f{Bh{Fb{Ib}}}}}{{Af{b}}}Hn}{{{f{Fh}}Nb{f{Bh{Df{Ib}}}}}{{Af{b}}}}{{{f{BAd}}Nb{f{Bh{Df{Ib}}}}}{{Af{b}}}}{{{f{BAf}}Nb{f{Bh{Df{Ib}}}}}{{Af{b}}}}{{{f{AOf}}Nb{f{Bh{Df{Ib}}}}}{{Af{b}}}}{{{f{BAh}}Nb{f{Bh{Df{Ib}}}}}{{Af{b}}}}{{{f{BAj}}Nb{f{Bh{Df{Ib}}}}}{{Af{b}}}}{{{f{BAl}}Nb{f{Bh{Df{Ib}}}}}{{Af{b}}}}{{{f{BAn}}Nb{f{Bh{Df{Ib}}}}}{{Af{b}}}}{{{f{BB`}}Nb{f{Bh{Df{Ib}}}}}{{Af{b}}}}{{{f{B@l}}Nb{f{Bh{Df{Ib}}}}}{{Af{b}}}}{{{f{AKf}}Nb{f{Bh{Df{Ib}}}}}{{Af{b}}}}{{{f{AKh}}Nb{f{Bh{Df{Ib}}}}}{{Af{b}}}}{{{f{Cn}}Nb{f{Bh{Df{Ib}}}}}{{Af{b}}}}{{{f{Ed}}Nb{f{Bh{Df{Ib}}}}}{{Af{b}}}}{{{f{AJn}}Nb{f{Bh{Df{Ib}}}}}{{Af{b}}}}{{{f{{AEb{c}}}}Nb{f{Bh{Df{Ib}}}}}{{Af{b}}}Hn}{ce{}{}}0000000000000000000000000000000000{Enc{}}0{En{{BBb{ce}}}{}{}}{{{f{{Df{Nn}}}}e}c{}{{O`{{f{E`}}}{{C`{c}}}}}}{{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}{An{Gl}}}{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}A@f{ALf{ALh{c}}}{{Ff{}{{B`{c}}}}HbIlIn}}{{{f{Dj}}}Hd}{{{f{Dl}}{f{{l{c}}}}e}DlBn{{Ch{{An{Cf}}An}{{C`{{An{Ad}}}}}}}}```````````{{{f{c}}h}b{}}{{{f{ALj}}}d}{{ALjd}ALj}{{{f{BhBBd}}{An{{f{Bf}}}}}b}{{{f{BhALj}}{f{ALj}}}{{Af{b}}}}{{{f{BhBBd}}}b}{{{f{BhBBd}}{f{Bf}}}b}{{{f{ALj}}Dn}E`}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{ALj}}{f{ALj}}c}{{Af{ALj}}}ALl}{{{f{ALj}}{f{Dj}}Eh}{{Af{Ad}}}}{{{f{ALj}}}ALj}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{}BBf}{En{{f{c}}}{}}000{En{{f{Bhc}}}{}}000{{BBdc}ALj{{Gf{}{{B`{{An{{f{Bf}}}}}}}}}}{Enb}000{{{f{ALj}}}{{f{Dj}}}}{{{f{ALj}}{f{ALj}}}c{}}{{{f{ALj}}{f{Cn}}}c{}}{{{f{ALj}}{f{Bf}}}c{}}021{{ALl{f{AOf}}{f{AOf}}}{{Af{AOf}}}}{BBdALj}{BBf{{Kl{BBh}}}}{cc{}}000{{AOf{Kl{BBh}}dBBj}ALj}{{AOfBBj}ALj}{{{f{Cn}}{f{AOd}}BBj}{{Af{ALj}}}}{{{f{Bf}}dEnBBj}ALj}{{{f{ALj}}En}{{Af{Hd}}}}{{{f{ALj}}En}Hd}{{{f{ALj}}}{{f{{Kl{BBh}}}}}};=<;<={{}En}000{ce{}{}}0000{ALjAd}{{{f{ALj}}}d}0{{{f{ALj}}}BBl}{{{f{ALj}}}En}{{{f{ALj}}{f{Bf}}}c{}}{{{f{ALj}}{f{Cn}}}c{}}{{{f{ALj}}{f{ALj}}}c{}}021{{{f{ALj}}{f{ALj}}}{{Af{{Gn{ALjALj}}}}}}{{DlDl}{{Af{{Gn{DlDl}}}}}}{{{f{ALj}}}Kd}{{{f{BhBBf}}{f{{Kl{BBh}}}}}{{Af{b}}}}1{{{f{ALj}}}{{Af{En}}}}{{{f{ALj}}}{{f{Bf}}}}{{{f{Bf}}EnBBj}BBd}{{{Kl{BBh}}}BBf}{{{f{BhBBl}}}{{An{c}}}{}}:;9:;9<{{{f{ALj}}}{{f{AOf}}}}{{{f{BhBBd}}{f{Bf}}}{{Gn{Lld}}}}`{{{f{BBl}}}{{Gn{En{An{En}}}}}}{{{f{ALj}}d}ALj}{{{f{ALj}}Dn}ALj}`{{{f{ALj}}AMfd}F`}{{{f{ALj}}{f{AOd}}BBn}ALj}{{{f{ALj}}}{{Af{ALj}}}}{{{f{ALj}}}ALj}{{{f{c}}}e{}{}}{c{{Gh{e}}}{}{}}0000000{{{f{c}}}Nl{}}0004{{{f{ALj}}}d}{{{f{ALj}}}{{Af{BC`}}}}{ce{}{}}000``````{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{AOdBBh}{{{f{BBj}}}BBj}{{{f{BBh}}}BBh}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{c}}}b{}}00{{}BBj}{{}BBh}{En{{f{c}}}{}}0{En{{f{Bhc}}}{}}0{Enb}0{{{f{BBj}}{f{BBj}}}d}{{{f{BBh}}{f{Bf}}}{{An{Ll}}}}{{{f{BBj}}{f{BhFn}}}G`}{{{f{BBh}}{f{BhFn}}}G`}{cc{}}0{{{f{BBh}}Ll}{{f{Bf}}}}{{{f{BBh}}}{{f{AOd}}}}{{{f{BBh}}Ll}{{An{{f{Bf}}}}}}{{}En}0{ce{}{}}0{{{f{BBh}}}d}0{{{f{BBh}}}En}{{{f{BBh}}{f{BBh}}}d}{{{f{c}}}e{}{}}0{c{{Gh{e}}}{}{}}000{{{f{c}}}Nl{}}066`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{}BCb}{En{{f{c}}}{}}{En{{f{Bhc}}}{}}{{}b}{Enb}{{{f{BhBCb}}}b}2{cc{}}6{{}En}{ce{}{}}<<;{{}d}1```````660````````````````````````{{{f{BCd}}}{{f{Bf}}}}<<;;`99{{{f{BCd}}}f}9977`{{{f{BCf}}{f{BhFn}}}{{Gh{bAOh}}}}{{{f{BCd}}{f{BhFn}}}{{Gh{bAOh}}}}077{cBCd{{AOl{{AKd{Bf}}}}}}{{}{{Jl{{f{Bf}}BCf}{{C`{b}}}}}}8877{cAKbAIn}````{{{Jl{{f{Bf}}BCf}{{C`{b}}}}}b}{cAKbBCh}{{{f{c}}}D`{}}{c{{Gh{e}}}{}{}}000{{{f{c}}}Nl{}}0==``````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BCj}}}BCj}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{En{{f{c}}}{}}{En{{f{Bhc}}}{}}{Enb}{{{f{BhFn}}MbEn}G`}{cc{}}{{}BCl}{{}BCj}{{}{{An{En}}}}{{}D`}{{}d}{{}En}{ce{}{}}{{{An{BCl}}}b}{BCjb}{{{An{En}}}b}2{{{An{d}}}b}{{{f{c}}}e{}{}}{c{{Gh{e}}}{}{}}0{{{f{c}}}Nl{}}7```````````{{{f{c}}h}b{}}00{{{f{BhBC`}}{Fb{Ad}}{f{BCn}}}{{Af{b}}}}{{{f{BC`}}{f{Cb}}}{{Fb{Ad}}}}0{{{f{BC`}}{f{Fh}}}{{Af{BC`}}}}{{{f{BC`}}{f{{Df{B@f}}}}}{{Af{BC`}}}}0{{{f{BC`}}JhEn}BC`}{{BC`{f{Ad}}}c{}}{{{f{BC`}}{f{Ad}}}c{}}{{{f{BC`}}{f{BC`}}}c{}}{{{f{BhBC`}}}{{f{BhBC`}}}}{{{f{BhBC`}}{f{Bf}}e}{{Af{{f{BhBC`}}}}}BD`{{O`{{f{Ad}}}{{C`{c}}}}}}{{{f{BhBC`}}Ene}{{Af{{f{BhBC`}}}}}BD`{{O`{{f{Ad}}}{{C`{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000{{{f{BC`}}}{{`{{Bd{}{{B`{En}}}}}}}}{{{f{BC`}}}BC`}{{{f{BDb}}}BDb}{{{f{BDd}}}BDd}2{{{f{c}}{f{Bhe}}}b{}{}}00{{{f{c}}}b{}}0000{{{f{BC`}}{f{Bf}}}{{Af{{f{Ad}}}}}}{{{f{BC`}}e}{{Af{{Fb{{f{Ad}}}}}}}{{Ld{Bf}}}{{Gf{}{{B`{c}}}}}}{{}BDd}{{}BC`}{En{{f{c}}}{}}0000{En{{f{Bhc}}}{}}0000{{{f{BC`}}{f{BC`}}}c{}}{{{f{BC`}}{f{Ad}}}c{}}{{BC`{f{Ad}}}c{}}{Enb}0000{{{f{BC`}}{f{Bf}}}{{Af{BC`}}}}{{{f{BhBC`}}{f{Bf}}}{{Af{Ad}}}}{{{f{BC`}}{f{{Df{c}}}}}BC`{{Ld{Bf}}}}{{{f{BC`}}{f{{BDf{{f{Bf}}}}}}}BC`}{{{f{BC`}}{An{{f{{Df{c}}}}}}}{{Af{BC`}}}{{Ld{Bf}}}}{{{f{BC`}}}{{Fb{Dj}}}}<{{{f{BDh}}}BC`}{{{f{BCn}}}BC`}{{{f{BDd}}{f{BDd}}}d}{{{f{BC`}}{f{BC`}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{BC`}}}En}`{{{f{BC`}}e}{{Af{BC`}}}{{Ld{Bf}}}{{Gf{}{{B`{c}}}}}}{{{f{BC`}}{Fb{Ad}}}{{Af{BC`}}}}{{{f{BhBC`}}{f{BC`}}}{{Af{b}}}}{{{f{BC`}}}{{Fb{Md}}}}{{{f{BC`}}AFh}{{Af{BC`}}}}{{{f{BC`}}{f{Fh}}}{{Af{BC`}}}}{{{f{BDb}}{f{BhFn}}}G`}{{{f{BDd}}{f{BhFn}}}G`}{{{f{BC`}}{f{BhFn}}}G`}0{cc{}}0000{g{{Gh{ic}}}{}{}{{Gj{c}{{B`{e}}}}}{}}{cBC`{{Gf{}{{B`{Ad}}}}}}{{{f{{Df{BDj}}}}}{{Af{BC`}}}}{{{f{{Df{BDj}}}}{f{BCn}}}{{Af{BC`}}}}{{c{f{BCn}}}{{Af{BC`}}}{{Bd{}{{B`{{f{BDj}}}}}}}}{{{f{BC`}}En}{{An{{Fb{Hd}}}}}}{{{f{BC`}}{f{Bf}}}{{An{En}}}}{{{f{BC`}}}{{Fb{{f{Bf}}}}}}{{{f{BC`}}}{{Fb{B@f}}}}{{{f{BC`}}}{{f{{Df{Ad}}}}}}{{{f{BhBC`}}}{{f{Bh{Fb{Ad}}}}}}{{{f{BC`}}En}{{Af{BDj}}}}{{{f{BC`}}En{f{BhBDj}}}{{Af{b}}}}{{{f{BC`}}En{f{BhBDj}}}b}{{{f{BC`}}}{{An{{Af{Dj}}}}}}`{{{f{BC`}}e}{{Af{BDl}}}{{Ld{Bf}}}{{Gf{}{{B`{c}}}}}}0{{{f{BC`}}{Fb{Ad}}dd}{{Af{BDl}}}}{{{f{BDd}}{f{Bhc}}}bAB`}{{{f{BhBC`}}{An{Nb}}}{{Af{BAh}}}}{{{f{BC`}}{An{En}}}BC`}{{{f{BC`}}}En}{{{f{BC`}}{f{{Df{Ad}}}}}{{Af{BC`}}}}{{{f{BhBC`}}{f{{Df{Ad}}}}}{{Af{{f{BhBC`}}}}}}{{{f{BhBC`}}{f{{Df{Ad}}}}}{{f{BhBC`}}}}{{{f{BC`}}En}{{f{c}}}{}}{{{f{BC`}}{Lf{En}}}{{f{c}}}{}}{{{f{BC`}}{BDn{En}}}{{f{c}}}{}}{{{f{BC`}}{BE`{En}}}{{f{c}}}{}}{{{f{BC`}}{BEb{En}}}{{f{c}}}{}}{{{f{BC`}}{BEd{En}}}{{f{c}}}{}}{{{f{BC`}}BEf}{{f{c}}}{}}{{{f{BC`}}{f{Bf}}}{{f{c}}}{}}{{}En}0000{{{f{BhBC`}}Enc}{{Af{{f{BhBC`}}}}}BD`}{ce{}{}}000000{{{f{BC`}}}{{Af{Fh}}}}{{{f{BC`}}}d}1{{{f{BC`}}}{{Jj{Ad}}}}{{{f{BC`}}}{{`{{Bd{}{{B`{BC`}}}}}}}}{{{f{BC`}}AMfd}BEh}{{{f{BC`}}}BEj}{{{f{BC`}}}En}{{{f{BC`}}}{{Af{{An{Ad}}}}}}{{{f{BC`}}BDb}{{Af{{An{Ad}}}}}}1{{{f{BC`}}{f{BC`}}}c{}}{{{f{BC`}}{f{Ad}}}c{}}{{BC`{f{Ad}}}c{}}55{{{Fb{c}}}{{Af{BC`}}}BD`}{{{Fb{Ad}}}BC`}{{{Fb{Ad}}}{{Af{BC`}}}}{{{f{BhBEh}}}{{An{c}}}{}}{{{f{BhBEj}}}{{An{c}}}{}}{{{f{BC`}}}BC`}{{{f{BC`}}cd}{{Af{{Fb{BC`}}}}}{{BEl{D`}}}}0{{BC`e}{{Af{c}}}{}{{Cb{BC`}{{C`{{Af{c}}}}}}}}{{{f{BhBC`}}e}{{Af{c}}}{}{{Cb{{f{BhBC`}}}{{C`{{Af{c}}}}}}}}{{BC`gc}{{Af{e}}}{}{}{{Cb{BC`c}{{C`{{Af{e}}}}}}}}{{{f{BhBC`}}}{{An{Ad}}}}{{{f{BC`}}{f{BC`}}}d}><={{{f{BhBC`}}{f{Bf}}{f{Bf}}}{{Af{{f{BhBC`}}}}}}{{{f{BhBC`}}{f{Bf}}c}{{Af{{f{BhBC`}}}}}BD`}{{{f{BhBC`}}Enc}{{Af{{f{BhBC`}}}}}BD`}19`{{{f{BC`}}{f{Ad}}dd{An{Ib}}}{{Af{BC`}}}}0{{{f{BC`}}Endd{An{Ib}}}{{Af{BC`}}}}{{{f{BC`}}}BCn}{{{f{BC`}}{f{BC`}}}{{Af{b}}}}{{{f{BC`}}e}{{Af{BC`}}}{{Ld{Bf}}}{{Gf{}{{B`{c}}}}}}{{{f{BC`}}En}{{An{{f{Ad}}}}}}{{{f{BC`}}c}{{Af{BC`}}}{{BEn{En}}}}2{{{f{BC`}}c}{{Af{{Fb{Ad}}}}}{{BEl{B@f}}}}{{{f{BC`}}e{f{BF`}}}{{Af{BC`}}}{{Ld{Bf}}}{{Gf{}{{B`{c}}}}}}{{{f{BC`}}e{f{BCn}}}{{Af{BC`}}}{{Ld{Bf}}}{{Gf{}{{B`{c}}}}}}{{{f{BhBC`}}{f{{Df{c}}}}}{{Af{b}}}{{Ld{Bf}}}}{{{f{BC`}}}{{Gn{EnEn}}}}{{{f{BC`}}Jh}BC`}{{{f{BC`}}}d}{{{f{BhBC`}}}b}{{{f{BEh}}}{{Gn{En{An{En}}}}}}{{{f{BEj}}}{{Gn{En{An{En}}}}}}{{{f{BC`}}JhEn}BC`}00{{{f{BC`}}cEb}{{Af{BC`}}}{{BEl{B@f}}}}{{{f{BhBC`}}cEb}{{Af{{f{BhBC`}}}}}{{BEl{B@f}}}}{{{f{BC`}}Jh}{{Gn{BC`BC`}}}}0{{{f{BhBC`}}}{{`{{Bd{}{{B`{BC`}}}}}}}}{{BC`End}{{Fb{BC`}}}}{{{f{BC`}}{f{Ad}}}c{}}{{{f{BC`}}{f{BC`}}}c{}}{{BC`{f{Ad}}}c{}}{{{f{BC`}}BDb}{{Af{{An{Ad}}}}}}{{{f{BC`}}{An{En}}}BC`}{{{f{BC`}}{f{E`}}}{{Af{BC`}}}}{{{f{BC`}}{f{E`}}}BC`}{{{f{BC`}}{f{E`}}d}BC`}{{{f{BC`}}BFb}{{Af{Nh}}}}{{{f{c}}}e{}{}}00{{{f{c}}}D`{}}{{{f{BhBC`}}{An{{f{Bf}}}}{An{{Nj{D`{Fb{D`}}}}}}}{{Af{BC`}}}}{{{f{BhBC`}}{f{Bf}}e}{{Af{{f{BhBC`}}}}}BD`{{O`{{f{Ad}}}{{C`{{Af{c}}}}}}}}{{{f{BhBC`}}Ene}{{Af{{f{BhBC`}}}}}BD`{{O`{{f{Ad}}}{{C`{{Af{c}}}}}}}}{c{{Gh{e}}}{}{}}000{BFd{{Af{BC`}}}}{{{Gn{BFf{f{{Df{AOn}}}}}}}{{Af{BC`}}}}2{{c{f{BCn}}}{{Af{BC`}}}{{Bd{}{{B`{{Af{{f{BDj}}}}}}}}}}{{{f{BC`}}{f{Bf}}}{{Af{En}}}}44444{{{f{c}}}Nl{}}0000{{{f{BC`}}{An{{f{{Df{D`}}}}}}BDd{An{{Gn{JhEn}}}}}{{Af{BC`}}}}{{{f{BC`}}d{An{{f{{Df{D`}}}}}}BDd{An{{Gn{JhEn}}}}}{{Af{BC`}}}}1{{{f{BC`}}ce}{{Af{BC`}}}{{BEl{B@f}}}{{BEl{B@f}}}}{{{f{BC`}}BFh}{{Af{BC`}}}}{{{f{BC`}}{f{BC`}}}{{Af{BC`}}}}{{{f{BhBC`}}{f{BC`}}}{{Af{{f{BhBC`}}}}}}{ce{}{}}0000{{{f{BC`}}}En}{{{f{BhBC`}}c}{{Af{{f{BhBC`}}}}}BD`}{{{f{BhBC`}}c{f{BCn}}}{{Af{{f{BhBC`}}}}}BD`}{{{f{BhBC`}}Ad}{{f{BhBC`}}}}{{{f{BC`}}{f{Bf}}{An{Hf}}}{{Af{BC`}}}}{{{f{BhBC`}}{f{Bf}}{An{Hf}}}{{f{BhBC`}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BFh}}}BFh}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{}BFh}{En{{f{c}}}{}}{En{{f{Bhc}}}{}}{Enb}{{{f{BFh}}{f{BFh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BFh}}{f{BhFn}}}G`}{cc{}}{{{f{BFh}}{f{Bhc}}}bAB`}`{{}En}{ce{}{}}``{{{f{c}}}e{}{}}{c{{Gh{e}}}{}{}}0{{{f{c}}}Nl{}}``3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BDl}}}{{Af{BC`}}}}`{{{f{BFj}}}{{f{{Df{BFl}}}}}}{{{f{BDl}}c}{{Af{BC`}}}{{Ch{BC`}{{C`{{Af{BC`}}}}}}IlIn}}{{{f{Aj}}}Dl}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000000{{{f{BFj}}}BFj}{{{f{Aj}}}Aj}{{{f{BDl}}}BDl}{{{f{BFn}}}BFn}{{{f{c}}{f{Bhe}}}b{}{}}000{{{f{c}}}b{}}0000;{{}BFj}{{}Aj}{En{{f{c}}}{}}000{{{f{BG`}}}{{f{c}}}{}}1111{En{{f{Bhc}}}{}}0000000`{{BGbe}{}{}{{BGd{c}}}}{Enb}000{{{f{BhBFj}}}b}1111{{{f{BFj}}{f{BFj}}}d}{{{f{Aj}}{f{Aj}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BGf}}}Hf}{{{f{BFj}}}{{f{{Df{Hf}}}}}}{{{f{BDl}}}{{Af{BC`}}}}{{{f{BhBFj}}}{{f{Bh{Fb{Hf}}}}}}{{{f{BFj}}{f{BhFn}}}G`}{{{f{Aj}}{f{BhFn}}}G`}{{{f{BDl}}{f{BhFn}}}G`}{{{f{BFn}}{f{BhFn}}}G`}0{{{f{Bf}}BFn}D`}{cc{}}000{{{Fb{{Fb{BGh}}}}}BFj}1{{{Fb{BGh}}}BFj}{{{Fb{{Gn{{Fb{Hf}}{Fb{BFl}}}}}}}BFj}3{BFjAj}44{g{{Gh{ic}}}{}{}{{Gj{c}{{B`{e}}}}}{}}{cBFj{{Gf{}{{B`{BGh}}}}}}{cBFj{{H`{}{{B`{BGh}}}}}}{{{f{Aj}}En}BGf}{{{f{BDl}}}{{f{Aj}}}}{{{f{BhBDl}}}{{f{BhAj}}}}{{{f{Aj}}}E`}{{{f{BGj}}dd}{{Af{Aj}}}}0{{{f{BDl}}}{{Af{BC`}}}}{{{f{BhAj}}}{{f{BhBFj}}}}{{}En}0000000{ce{}{}}0000000{AjBFj}1{{{f{BFj}}}c{}}{BFjc{}}310{{{f{BGf}}}d}{{{f{Aj}}}d}{{{f{BFj}}}d}{{{f{BFj}}}{{BGn{{BGl{{Jj{Hf}}}}{Jj{BFl}}}}}}{{{f{Aj}}}BH`}{{{f{BDl}}}{{Fb{Ad}}}}{{{f{BDl}}{An{{Gn{JhEn}}}}}{{Fb{Ad}}}}={{{f{BGf}}}En}{{{f{Aj}}}En}?????{{{Fb{Hf}}{Fb{BFl}}d}BFj}{{{f{BC`}}{Fb{Ad}}Aj{An{{Fb{D`}}}}}BDl}{{{f{BhBH`}}}{{An{c}}}{}}{{{f{BhBH`}}En}{{An{c}}}{}}{{{f{BDl}}c}{{Af{BC`}}}{{Cb{BC`}{{C`{{Af{BC`}}}}}}IlIn}}{{{f{c}}}{}{}}{{{f{Aj}}}BGb}{{{f{BDl}}KfMj}{{Af{BC`}}}}{{BDle}BDl{{Ld{Bf}}}{{Gf{}{{B`{c}}}}}}{{{f{Aj}}JhEn}BG`}{{{f{BhBFj}}}b}{{{f{BhAj}}}b}{{{f{BDl}}Dd}{{Af{BC`}}}}{{{f{BDl}}}{{Af{BC`}}}}{Aj{{Fb{Hf}}}}0{BDlAj}{{{f{BhBDl}}}Aj}{{{f{c}}}e{}{}}000{{{f{c}}}D`{}}{c{{Gh{e}}}{}{}}000000000000000{{{f{c}}}Nl{}}0000000{AjAj}{{{f{Aj}}}{{f{BFj}}}}{{{f{Aj}}}{{f{BHb}}}};{ce{}{}}0000000`````{{{f{BFj}}c}Ad{{Cb{{Gn{Hf{f{BFl}}}}}{{C`{An}}}}IlIn}}{{{f{BFj}}c}Ad{{Cb{{Gn{Hf{f{BFl}}}}}{{C`{}}}}IlIn}}{{{f{{Df{{BHd{Hf}}}}}}c}Ad{{Cb{{BHd{Hf}}}{{C`{An}}}}IlIn}}{{{f{{Df{{BHd{Hf}}}}}}c}Ad{{Cb{{BHd{Hf}}}{{C`{}}}}IlIn}}{{{f{{Df{c}}}}eBHf}{{AJb{c}}}{BHhBHj}{{Bd{}{{B`{{Gn{HfHf}}}}}}Hb}}{{{f{{Df{c}}}}{f{Gl}}eBHf}{{AJb{c}}}{BHhBHj}{{Bd{}{{B`{{Gn{HfHf}}}}}}Hb}}{{{f{{l{c}}}}HfHf}{{l{c}}}Bn}{{{f{BHb}}{f{{Df{F`}}}}}d}{{{f{BHl}}{f{Aj}}}Ad}{{BHnBHn}BHn}0`{{{f{BI`}}{f{BC`}}{f{Aj}}}{{Af{Ad}}}}{{{f{BI`}}}{{Af{{f{Bf}}}}}}```````````````````````{{{f{c}}h}b{}}00{{{f{BhBIb}}Hd}{{An{b}}}}{{{f{BhBId}}{f{Hd}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bhc}}}{{f{Bhe}}}{}{}}00{{{f{BIb}}}BIb}{{{f{BId}}}BId}{{{f{BDj}}}BDj}{{{f{c}}{f{Bhe}}}b{}{}}00{{{f{c}}}b{}}00{{{f{{Df{c}}}}}Dj{{B@d{Dj}}}}{{}BDj}{En{{f{c}}}{}}00{En{{f{Bhc}}}{}}00{Enb}00{{{f{BDj}}{f{BDj}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BDj}}{f{BhFn}}}G`}{{{Gn{{f{Dj}}En}}}BIb}{cc{}}{{{Gn{{f{Dj}}En}}}BId}11{{eEn}BCn{{AOl{Dj}}}{{Bd{}{{B`{{Fb{{Gn{D`c}}}}}}}}}}{{}En}00{ce{}{}}00{BIbAd}{BIdAd}{{{f{Dj}}En}BIb}{{{f{Dj}}En}BId}{{{Fb{Hd}}}BDj}{{{f{BhBIb}}En}Ad}{{{f{BhBId}}En}Ad}{{{f{{Df{BDj}}}}{An{En}}}{{Af{BCn}}}}0{{{f{{Df{BDj}}}}{An{En}}}{{Af{{Fb{Dj}}}}}}{{{f{c}}}e{}{}}00{c{{Gh{e}}}{}{}}00000{{{f{c}}}Nl{}}00<<<{{{f{{Df{BC`}}}}}{{Af{BC`}}}}{{{f{{Df{BC`}}}}d}{{Af{BC`}}}}`````{{IbIb}Ib}{{{f{{Df{BC`}}}}{An{Nb}}}{{Af{{Gn{{Fb{BAh}}Nb}}}}}}{{{f{{AJl{Jh}}}}Nb{f{Bh{Fb{Ib}}}}}b}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{{}BIf}{En{{f{c}}}{}}0{En{{f{Bhc}}}{}}0{Enb}0{{{f{BIf}}}Ib}{{{f{BIh}}{f{BhFn}}}G`}{cc{}}0{{{f{BIh}}{f{Bhc}}}bAB`}``{{}En}0{ce{}{}}0{{{f{Bh{BIj{BIhce}}}}HfIb{f{BC`}}gi}b{}BIl{{Cb{}{{C`{c}}}}}{{Ch{{f{Bhc}}}}}}{c{{Gh{e}}}{}{}}000{{{f{c}}}Nl{}}0{{{f{BIn}}Nb{f{Bh{Fb{Ib}}}}}{{Af{b}}}}0{{{f{BIn}}Nb{f{Bh{Df{Ib}}}}}{{Af{b}}}}055{{{f{BhBIf}}{f{{Df{Dd}}}}}b}{{{f{BhBIf}}M`}b}{{{f{BhBIf}}Jh}b}{{{f{BhBIf}}Ll}b}{{{f{BhBIf}}Ib}b}```````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}0000000000{{{f{{Kl{ce}}}}}{{f{e}}}MnBJ`}{{{f{{Kl{c}}}}}BJb{BJdMn}}{{{f{{Kl{ce}}}}}{}MnBJ`}{{{f{{Kl{c}}}}}M`BJf}{{{f{{Kl{ce}}}}}{{f{c}}}MnBJ`}{{{Kl{{Df{{BJh{c}}}}e}}}{{Kl{{Df{c}}e}}}{}BJ`}{{{Kl{{BJh{c}}e}}}{{Kl{ce}}}{}BJ`}{{{f{c}}}{{f{e}}}{}{}}0030000000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000000000{{{f{ALj}}{f{ALj}}c}{{Af{ALj}}}ALl}{{{f{{Kl{c}}}}}{{An{{f{AIn}}}}}{AInMn}}`{{{f{BJj}}{f{Ad}}}{{Af{Ad}}}}{{{f{BJj}}c}{{Af{Ad}}}Ab}{{{f{Nn}}}Nn}{{{f{BJl}}}BJl}{{{f{{Kl{ce}}}}}{{Kl{ce}}}Mn{BJ`A@f}}{{{f{Ml}}}Ml}{{{f{BFb}}}BFb}{{{f{AOn}}}AOn}{{{f{BDh}}}BDh}{{{f{Mj}}}Mj}{{{f{BJn}}}BJn}{{{f{BK`}}}BK`}{{{f{BKb}}}BKb}{{{f{c}}{f{Bhe}}}b{}{}}0000000000{{{f{c}}}b{}}00000000000000000{{{f{{Kl{ce}}}}{f{{Kl{ce}}}}}BA`{BKdMn}BJ`}{AObe{}{{AKj{c}}AIj}}0{{AObADd}e{}{{AKl{c}}AIj}}0{{{f{c}}{f{e}}}BA`{}{}}{{AKbBCd}AKb}{AKbAKb}{{{f{Gb}}{f{ADd}}}{{AAn{Gb}}}}{{{f{AOn}}}{{f{ADd}}}}```{{}b}{cbBJ`}{{}{{Kl{c}}}BKf}{{}{{Kl{{Df{c}}}}}{}}{{}{{Kl{Bf}}}}{{}{{Kl{BKh}}}}{{}Ml}{{}BFb}{{}AOn}{{}BDh}{{}Mj}`{En{{f{c}}}{}}00{{{f{{Kl{ce}}}}}{{f{c}}}MnBJ`}1111111111{En{{f{Bhc}}}{}}000000000000{{{f{{Kl{c}}}}}{{f{Bf}}}{AInMn}}`{{{Kl{ADfc}}}{{Gh{{Kl{ec}}{Kl{ADfc}}}}}BJ`{ADfIlIn}}{{{Kl{ADfc}}}{{Kl{ec}}}BJ`{ADfIlIn}}{{{f{{Kl{ce}}}}}{{BKj{ce}}}Mn{A@fBJ`}}{Enb}000{{{f{Bh{Kl{ce}}}}}bMnBJ`}111111111{{{f{Nn}}{f{Nn}}}d}{{{f{{Kl{ce}}}}{f{{Kl{ce}}}}}d{BKlMn}BJ`}{{{f{{Kl{BKn}}}}{f{BKn}}}d}{{{f{{Kl{Gb}}}}{f{Gb}}}d}{{{f{Ml}}{f{Ml}}}d}{{{f{BFb}}{f{BFb}}}d}{{{f{AOn}}{f{AOn}}}d}{{{f{BDh}}{f{BDh}}}d}{{{f{Mj}}{f{Mj}}}d}{{{f{BKb}}{f{BKb}}}d}{{{f{c}}{f{e}}}d{}{}}00000000000000000000{BJl{{Gn{LlLl}}}}`{{BDhc}BDh{{Cb{En{f{AOn}}}{{C`{d}}}}}}{{ALl{f{AOf}}{f{AOf}}}{{Af{AOf}}}}{{{f{Bh{Kl{ACj}}}}}{{Gh{bBL`}}}}{{{f{AKb}}{f{BhFn}}}{{Gh{bAOh}}}}0{{{f{Nn}}{f{BhFn}}}{{Gh{bAOh}}}}{{{f{BJl}}{f{BhFn}}}{{Gh{bAOh}}}}{{{f{{Kl{ce}}}}{f{BhFn}}}{{Gh{bAOh}}}MnBJ`}{{{f{{Kl{ce}}}}{f{BhFn}}}{{Gh{bAOh}}}{BChMn}BJ`}{{{f{{Kl{ce}}}}{f{BhFn}}}{{Gh{bAOh}}}{ADhMn}BJ`}{{{f{Ml}}{f{BhFn}}}G`}{{{f{BFb}}{f{BhFn}}}G`}{{{f{AOn}}{f{BhFn}}}{{Gh{bAOh}}}}{{{f{BDh}}{f{BhFn}}}{{Gh{bAOh}}}}{{{f{Mj}}{f{BhFn}}}{{Gh{bAOh}}}}{{{f{BJn}}{f{BhFn}}}{{Gh{bAOh}}}}{{{f{BK`}}{f{BhFn}}}{{Gh{bAOh}}}}{{{f{BKb}}{f{BhFn}}}{{Gh{bAOh}}}}`{BLbAKb}{BLdAKb}{BL`AKb}{BLfAKb}{cc{}}{LlNn}11{{{f{BKh}}}{{Kl{BKh}}}}{D`{{Kl{Bf}}}}{{{AAn{ce}}}{{Kl{ce}}}MnBJ`}{{{Fb{ce}}}{{Kl{{Df{c}}e}}}{}{BJ`A@f}}{{{f{BLh}}}{{Kl{BLh}}}}6{{{f{Bf}}}{{Kl{Bf}}}}{{{AKd{c}}}{{Kl{c}}}{BLjMn}}{BLl{{Kl{BLn}}}}{{{f{{Df{c}}}}}{{Kl{{Df{c}}}}}A@f}{{{Kl{Bf}}}{{Kl{{Df{Dd}}}}}}{{{f{BLn}}}{{Kl{BLn}}}}{BM`{{Kl{BKh}}}}{BMbc{}}{BMd{{Kl{BLh}}}}{{{BHd{c}}}{{Kl{{Df{c}}}}}{}}{c{{Kl{c}}}{}}{cc{}}000{{{Fb{AOn}}}BDh}11111{{c{An{Gl}}}BMf{}}{{{BMh{Jh}}{BMh{Dd}}{An{Gl}}}BMj}{{{BMh{Jh}}{BMh{Dd}}{An{Gl}}}BMl}{g{{Gh{ic}}}{}{}{{Gj{c}{{B`{e}}}}}{}}{e{{Kl{{Df{c}}}}}{}{{Gf{}{{B`{c}}}}}}{{gEn}{{BMn{Jh}}}Ld{{Gf{}{{B`{{An{c}}}}}}}{{Gf{}{{B`{{An{e}}}}}}}}0{e{{BMn{Jh}}}{{Gf{}{{B`{{An{d}}}}}}}{{Gf{}{{B`{{An{c}}}}}}}}{{gADd}{{BMn{Jh}}}BHj{{Gf{}{{B`{{An{c}}}}}}}{{Gf{}{{B`{{An{e}}}}}}}}2{e{{Kl{{Df{c}}}}}Il{{H`{}{{B`{c}}}}}}{{}{{Kl{c}}}Mn}{c{{Kl{ec}}}BJ`Mn}{{{f{Bf}}}{{Gh{BN`}}}}{{{f{Bf}}c}BNb{}}{{{f{{Kl{ce}}}}{f{{Kl{ce}}}}}d{BNdMn}BJ`}{{{f{Bh{Kl{ce}}}}}{{An{{f{Bhc}}}}}MnBJ`}{{{f{Bh{Kl{ce}}}}}{{f{Bhc}}}MnBJ`}{{{f{BDh}}}{{Fb{{f{Bf}}}}}}{{{f{BDh}}}{{Fb{{Gn{{f{Bf}}c}}}}}{}}{{{f{F`}}En}Hd}5{{{f{{Kl{ce}}}}{f{Bhg}}}b{BNfMn}BJ`AB`}{{{f{BFb}}{f{Bhc}}}bAB`}{{{f{AOn}}{f{Bhc}}}bAB`}{{{f{Mj}}{f{Bhc}}}bAB`}{{{f{BKb}}{f{Bhc}}}bAB`}{{{f{Nn}}}Ll}{{}b}{cb{A@fBJ`}}{{{f{BDh}}{f{Bf}}}{{An{En}}}}{{{f{{Df{Ll}}}}}{{`{{Bd{}{{B`{En}}}}}}}}{{}En}000000000000`{{{f{BhBJl}}}{{f{BhIb}}}}`{ce{}{}}000000000000{{{Kl{ce}}}{{An{c}}}{}BJ`}{{{Kl{ce}}}{}MnBJ`}{{{Kl{ce}}}{{Gn{e}}}MnBJ`}{{{Kl{BNh}}}Ad}{{{f{BDh}}}d}{{{f{BJl}}}d}{{{f{Nn}}}d}`{{{f{{Kl{ACj}}}}}d}{{{f{c}}}d{}}1{{{f{{Kl{ce}}}}{f{{Kl{ce}}}}}d{BNdMn}BJ`}{{{f{BDh}}}En}`1{{{f{ALj}}{f{ALj}}}{{Af{{Gn{ALjALj}}}}}}{{DlDl}{{Af{{Gn{DlDl}}}}}}{{{f{Bh{Kl{ce}}}}}{{f{Bhc}}}{BNjMn}{BJ`A@f}}{{{f{BNl}}}Kd}0{{{f{BNn}}}Kd}```11`{{{f{{Kl{ce}}}}{f{{Kl{ce}}}}}d{BKlMn}BJ`}{{BO`En}{{An{En}}}}{{{f{Bf}}c}BOb{}}{c{{Kl{c}}}{}}{{cADdd}AOn{{AOl{D`}}}}{e{{Kl{c}}}{}{{O`{{f{{BKj{c}}}}}{{C`{c}}}}}}{{ce}{{Kl{ce}}}{}BJ`}{{}{{Kl{{BJh{c}}}}}{}}{c{{Kl{{BJh{e}}c}}}BJ`{}}{En{{Kl{{Df{{BJh{c}}}}}}}{}}{{Enc}{{Kl{{Df{{BJh{e}}}}c}}}BJ`{}}3210`{{}Nn}{{}BJl}{{{f{{Kl{ce}}}}{f{{Kl{ce}}}}}{{An{BA`}}}{BNdMn}BJ`}{c{{BOd{{Kl{c}}}}}{}}{{ce}{{BOd{{Kl{ce}}}}}{}BJ`}`````{{{f{BNl}}}Kd}0{{{f{{Kl{c}}}}{f{BhBOf}}}b{AInMn}}{{{f{{Kl{ce}}}}{f{{Kl{ce}}}}}dMnBJ`}{{{f{BNn}}KfMj}{{Af{Kd}}}}{{{f{Bh{Kl{ACj}}}}{f{Bh{Df{Dd}}}}}{{Gh{EnBL`}}}}{{{f{Bh{Kl{ACj}}}}BOh}{{Gh{bBL`}}}}{{{f{Bh{Kl{ACj}}}}{f{Bh{Fb{Dd}}}}}{{Gh{EnBL`}}}}{{{f{Bh{Kl{ACj}}}}{f{BhD`}}}{{Gh{EnBL`}}}}{{{f{Bh{Kl{ACj}}}}{f{Bh{Df{BOj}}}}}{{Gh{EnBL`}}}}`{{{f{Bh{Kl{ACj}}}}BOl}{{Gh{IbBL`}}}}`{{{f{AJf}}EnEn}AJf}0{{{f{{Kl{c}}}}}{{An{{f{AIn}}}}}{AInMn}}{{{f{BOn}}Dd}Kd}{{LlLl}BJl}`{{{f{{Kl{ce}}}}}EnMnBJ`}>>{{{f{Nn}}}{{An{Ll}}}}{{{f{c}}}e{}{}}0000000000{{{f{c}}}D`{}}0{AOb{{Gh{eg}}}{}{{AKj{c}}AIj}{}}0{{AObADd}{{Gh{eg}}}{}{{AKl{c}}AIj}{}}0{c{{Gh{e}}}{}{}}000{{{Kl{{Df{c}}e}}}{{Gh{{Kl{{BHd{c}}e}}}}}{}BJ`}1111111111111111111111{{BO`En}{{Gh{EnAKb}}}}{c{{Gh{{Kl{c}}C@`}}}{}}{{ce}{{Gh{{Kl{ce}}C@`}}}{}BJ`}{{}{{Gh{{Kl{{BJh{c}}}}C@`}}}{}}{c{{Gh{{Kl{{BJh{e}}c}}C@`}}}BJ`{}}10{c{{Gh{{BOd{{Kl{c}}}}C@`}}}{}}{{ce}{{Gh{{BOd{{Kl{ce}}}}C@`}}}{}BJ`}{{{f{BDh}}{f{{Df{En}}}}}{{Gh{BDhAKb}}}}{{{Kl{ce}}}{{Gh{c{Kl{ce}}}}}{}BJ`}{{{f{c}}}Nl{}}000000000000{{{Kl{ce}}}cA@fBJ`}`{{{f{BOn}}Dd}Kd}{ce{}{}}000000000000{{{f{{Kl{ce}}}}}EnMnBJ`}``{{AOn{C@b{D`D`}}}AOn}{{BDh{C@b{D`D`}}}BDh}{{{f{Bh{Kl{ACj}}}}{f{{Df{Dd}}}}}{{Gh{EnBL`}}}}{{{f{Bh{Kl{ACj}}}}{f{{Df{C@d}}}}}{{Gh{EnBL`}}}}```````{{c{An{Gl}}}BMf{}}{{{BMh{Jh}}{BMh{Dd}}{An{Gl}}}BMj}{{{BMh{Jh}}{BMh{Dd}}{An{Gl}}}BMl}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{En{{f{c}}}{}}{En{{f{Bhc}}}{}}{Enb}{{C@f{An{{f{ADd}}}}}{{Gh{{BMn{Jh}}AKb}}}}{cc{}}{{}En}{ce{}{}}{{{f{C@f}}}d}{EnC@f}{{{f{C@f}}}{{f{{Df{Jh}}}}}}{{{f{BhC@f}}{f{Gb}}}b}{{{f{BhC@f}}}b}{{{f{BhC@f}}{f{{Df{{AAn{Gb}}}}}}}b}1{{{f{BhC@f}}{An{{f{Gb}}}}}b}{C@f{{C@h{Jh}}}}{c{{Gh{e}}}{}{}}0{{{f{c}}}Nl{}}:`{{{f{c}}h}b{}}{{{f{C@j}}}{{f{ADf}}}}{{{f{BhC@j}}}{{AAn{Gb}}}}{{{f{BhC@j}}}{{f{BhADf}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{C@j}}}C@j}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{{f{C@j}}}{{f{ADd}}}}{{}C@j}{En{{f{c}}}{}}{En{{f{Bhc}}}{}}{Enb}{{{f{BhC@j}}En}b}{{{f{C@j}}{f{BhFn}}}{{Gh{bAOh}}}}{cc{}}{{}En}{ce{}{}}{{{f{C@j}}}En}{EnC@j}{{{f{BhC@j}}}b}70{{{f{c}}}e{}{}}{c{{Gh{e}}}{}{}}0{{{f{c}}}Nl{}}{{{f{C@j}}}{{An{{f{C@l}}}}}}7```````{{{f{AJf}}EnEn}AJf}0`{{}b}0{{}d}``{{eEnEn}{{C@n{Jh}}}{{Ld{Bf}}}{{Bd{}{{B`{c}}}}}}{{eEnEn}{{AJl{Jh}}}{{Ld{{Df{Dd}}}}}{{Bd{}{{B`{c}}}}}}{Ibb}`{{{f{c}}h}b{}}{{{f{Kd}}}Hd}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{Kd}}}Kd}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{En{{f{c}}}{}}{En{{f{Bhc}}}{}}{Enb}{{{f{Kd}}}{{f{Dj}}}}{cc{}}{{}En}{ce{}{}}{{Kd{f{Bf}}}Ad}{{DjHd}Kd}`{{{f{c}}}e{}{}}{c{{Gh{e}}}{}{}}0{{{f{c}}}Nl{}}{{{f{BhKd}}Hd}b}{{{f{Kd}}}{{f{Hd}}}}7{{{An{Kf}}Dj}Kd}``````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BCn}}}BCn}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{{f{BCn}}{f{Bf}}}d}{{}BCn}{En{{f{c}}}{}}{En{{f{Bhc}}}{}}{Enb}{{{f{c}}{f{c}}}{{Af{b}}}CA`}{{{f{BCn}}{f{BCn}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BCn}}{f{BhFn}}}G`}{{{f{{Df{Ad}}}}}BCn}{cc{}}{{{f{BDh}}}BCn}{{{f{BDj}}}BCn}{CAbBCn}{{{f{CAb}}}BCn}{BDhBCn}{g{{Gh{ic}}}{}{}{{Gj{c}{{B`{e}}}}}{}}{eBCn{{AOl{Md}}}{{Gf{}{{B`{c}}}}}}{{{f{BCn}}{f{Bf}}}{{An{{f{Dj}}}}}}{{{f{BCn}}En}{{An{{Gn{{f{B@f}}{f{Dj}}}}}}}}{{{f{BhBCn}}En}{{An{{Gn{{f{BhB@f}}{f{BhDj}}}}}}}}{{{f{BCn}}{f{Bf}}}{{An{Md}}}}{{{f{BCn}}{f{Bf}}}{{An{{Gn{En{f{B@f}}{f{Dj}}}}}}}}{{{f{CAd}}}{{Fb{{f{Bf}}}}}}{{{f{BCn}}}{{Fb{{f{Bf}}}}}}{{{f{{CA`{}{{CAf{c}}}}}}}{{Fb{{Gn{{f{Bf}}c}}}}}{ADhBKl}}{{{f{BCn}}}{{Fb{{Gn{{f{Bf}}c}}}}}{}}{{{f{BCn}}{f{Bhc}}}bAB`}{{{f{CAd}}{f{Bf}}}{{An{En}}}}{{{f{BCn}}{f{Bf}}}{{An{En}}}}{{}En}{{{f{BhBCn}}EnB@fDj}{{Af{{An{Dj}}}}}}{ce{}{}}{BCnc{}}{{{f{BCn}}}d}{{{f{BCn}}}{{`{{Bd{}{{B`{{Gn{{f{B@f}}{f{Dj}}}}}}}}}}}}{{{f{BCn}}}{{`{{J`{}{{B`{{f{Dj}}}}}}}}}}{{{f{BhBCn}}}{{`{{J`{}{{B`{{f{BhDj}}}}}}}}}}{{{f{BCn}}}{{`{{J`{}{{B`{Md}}}}}}}}{{{f{BCn}}}{{`{{J`{}{{B`{{f{B@f}}}}}}}}}}{{{f{BCn}}}En}{{{f{BhBCn}}BCn}b}{{{f{BhBCn}}{f{BCn}}}b}{{}BCn}{{{f{BCn}}EnB@fDj}{{Af{BCn}}}}{{{f{BhBCn}}{f{Bf}}}{{An{Dj}}}}{{{f{BhBCn}}{f{Bf}}B@f}{{An{B@f}}}}{{{f{BhBCn}}En}b}{{{f{BhBCn}}{f{Bf}}Dj}{{An{Dj}}}}{{{f{BhBCn}}EnDj}{{An{Dj}}}}4{{{f{BhBCn}}En}{{An{{Gn{B@fDj}}}}}}{{{f{BCn}}AMf}BDh}{{{f{c}}}e{}{}}{{{f{BhBCn}}{f{BCn}}}{{Af{d}}}}{c{{Gh{e}}}{}{}}{{{f{BCn}}{f{Bf}}}{{Af{{f{Dj}}}}}}{{{f{BCn}}En}{{Af{{Gn{{f{B@f}}{f{Dj}}}}}}}}{{{f{BCn}}{f{Bf}}}{{Af{Md}}}}{{{f{BCn}}{f{Bf}}}{{Af{{Gn{En{f{B@f}}{f{Dj}}}}}}}}{{{f{BhBCn}}{f{Bf}}}{{Af{{f{BhDj}}}}}}{{{f{CAd}}{f{Bf}}}{{Af{En}}}}6{{{f{c}}}Nl{}}{ce{}{}}{EnBCn}{{{f{BhBCn}}B@fDj}{{An{Dj}}}}`````````````````{{{f{c}}h}b{}}0{{{f{Bf}}{Fb{F`}}{f{ADd}}}{{Af{Ad}}}}{{{f{Bf}}{Fb{F`}}{f{ADd}}{An{{f{CAh}}}}}{{Af{Ad}}}}{{AdAd}c{}}{{Adc}e{A`Kb}{}}{{{f{Ad}}c}e{A`Kb}{}}{{{f{Ad}}{f{Ad}}}c{}}`{{{f{BhAd}}{f{Ad}}}{{Af{{f{BhAd}}}}}}{{{f{BNh}}Dn}E`}0{{{f{BNh}}}{{Af{E`}}}}0`{{{f{Ad}}En}{{f{F`}}}}{{{f{BNh}}}{{f{ADf}}}}{{{f{BhBNh}}}{{f{BhADf}}}}0{{{f{Ad}}}Dl}{{{f{BhBNh}}}{{f{Bh{l{c}}}}}Bn}{{{f{BNh}}}{{f{{l{c}}}}}Bn}{{{f{Ad}}}{{f{BNh}}}}{{{f{BhBNh}}}{{Af{En}}}}0{{{f{BhAd}}}{{Af{En}}}}{{{f{Ad}}}{{Af{{f{Ed}}}}}}{{{f{Ad}}}{{Af{{f{AJn}}}}}}{{{f{BNh}}{f{Ad}}}{{Af{Ad}}}}00000{{{f{Ad}}}{{Af{{f{Fh}}}}}}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{BNh}}{f{Dj}}Eh}{{Af{Ad}}}}{{{f{Ad}}{f{Dj}}}{{Af{Ad}}}}0{{{f{Ad}}{f{Dj}}Eh}{{Af{Ad}}}}{{{f{Ad}}}{{Af{{f{ALj}}}}}}77{{{f{Ad}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ad}}c}{{Af{Ad}}}Ab}{{{f{BNh}}}El}{{{f{Ad}}}{{`{{Bd{}{{B`{En}}}}}}}}{{{f{BNh}}}{{f{{Fb{F`}}}}}}{{{f{BhBNh}}}{{f{Bh{Fb{F`}}}}}}{{{f{BhAd}}}{{f{Bh{Fb{F`}}}}}}{{{f{Ad}}}Ad}{{{f{Jd}}}Jd}1{{{f{BNh}}}{{Kl{BNh}}}}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{c}}}b{}}00{{{f{BhAd}}}b}{{{f{Ad}}}{{Af{{f{Ij}}}}}}{{}Ad}{En{{f{c}}}{}}00{{{f{Ad}}}{{f{c}}}{}}1{En{{f{Bhc}}}{}}000{{{f{Ad}}{f{Ad}}}c{}}{{AdAd}c{}}{{{f{Ad}}c}e{A`Kb}{}}{{Adc}e{A`Kb}{}}{{{f{Ad}}{f{Ad}}}{{Af{Kf}}}}{Enb}000{{{f{BNh}}}Ad}0{{{f{BNh}}}{{f{Dj}}}}0{{{f{Jd}}{f{Jd}}}d}{{{f{Ad}}{f{Ad}}}d}{{{f{Ad}}{f{Bf}}}{{Af{Fh}}}}{{{f{Ad}}c}{{Af{Fh}}}AOj}{{{f{Ad}}{f{Ad}}}{{Af{Fh}}}}{{{f{Ad}}{f{Bf}}}c{}}1{{{f{Ad}}c}eAOj{}}55{{{f{c}}{f{e}}}d{}{}}00{{{f{Ad}}}En}{{{f{Ad}}}{{Af{Ad}}}}{{{f{BhAd}}{f{Ad}}}{{Af{{f{BhAd}}}}}}{{{f{Ad}}HdEn}{{Af{Ad}}}}{{{f{Ad}}}{{Af{{f{AKf}}}}}}{{{f{Ad}}}{{Af{{f{AKh}}}}}}{{{f{BNh}}}{{AKd{Md}}}}0{{{f{Ad}}AFh}{{Af{Ad}}}}{{{f{BNh}}{f{Fh}}}{{Af{Ad}}}}{{{f{Jd}}{f{BhFn}}}G`}{{{f{Ad}}{f{BhFn}}}G`}0{{{f{Ad}}}D`}{cc{}}000{{{l{c}}}AdBn}{{{f{Bf}}{f{{Df{Hd}}}}d}{{Af{Ad}}}}{{{f{Bf}}{f{{Df{Hd}}}}{f{Dj}}d}{{Af{Ad}}}}{{{f{Bf}}F`}{{Af{Ad}}}}{{{f{Bf}}{Fb{F`}}}{{Af{Ad}}}}{{{f{Bf}}{Fb{F`}}{f{Dj}}}Ad}{g{{Gh{ic}}}{}{}{{Gj{c}{{B`{e}}}}}{}}{cAd{{Gf{}{{B`{{An{Kf}}}}}}}}{cAd{{Gf{}{{B`{Ll}}}}}}{cAd{{Gf{}{{B`{{An{d}}}}}}}}{cAd{{Gf{}{{B`{d}}}}}}{cAd{{Gf{}{{B`{{f{Kf}}}}}}}}{cAd{{Gf{}{{B`{{f{d}}}}}}}}{cAd{{Gf{}{{B`{{f{Bf}}}}}}}}{cAd{{Gf{}{{B`{D`}}}}}}{cAd{{Gf{}{{B`{Kf}}}}}}{cAd{{Gf{}{{B`{{An{Ll}}}}}}}}{cAd{{Gf{}{{B`{I`}}}}}}{cAd{{Gf{}{{B`{{An{I`}}}}}}}}{cAd{{Gf{}{{B`{{f{Jh}}}}}}}}{cAd{{Gf{}{{B`{Jh}}}}}}{cAd{{Gf{}{{B`{{An{Jh}}}}}}}}{cAd{{Gf{}{{B`{{f{M`}}}}}}}}{cAd{{Gf{}{{B`{M`}}}}}}{cAd{{Gf{}{{B`{{An{M`}}}}}}}}{cAd{{Gf{}{{B`{{f{Ib}}}}}}}}{cAd{{Gf{}{{B`{Ib}}}}}}{cAd{{Gf{}{{B`{{An{Ib}}}}}}}}{cAd{{Gf{}{{B`{{f{Ll}}}}}}}}{cAd{{Gf{}{{B`{{f{I`}}}}}}}}{{{f{Bf}}{Fb{Kf}}}Ad}{{{f{Bf}}{Fb{M`}}}Ad}{{{f{Bf}}{Fb{Jh}}}Ad}{{{f{Bf}}{Fb{Mb}}}Ad}{{{f{Bf}}{Fb{I`}}}Ad}{{{f{Bf}}{Fb{Ib}}}Ad}{{{f{Bf}}{Fb{Ll}}}Ad}{{{f{Bf}}En{f{Dj}}}Ad}{{{f{Ad}}EnEn}Ad}{{{f{BNh}}En}{{Af{Hd}}}}{{{f{Ad}}}En}{{{f{Ad}}}Hh}{{{f{Ad}}}Ad}{{{f{BNh}}}{{An{{L`{Kn}}}}}}0{{{f{BNh}}En}{{An{{f{Hl}}}}}}0{{{f{BNh}}EnEn}{{An{{f{Hl}}}}}}0{{{f{BNh}}En}Hd}0{{{f{Ad}}{f{Bf}}}{{Af{Fh}}}}{{{f{Ad}}{f{Ad}}}{{Af{Fh}}}}{{{f{Ad}}c}{{Af{Fh}}}AOj}01{{{f{Ad}}{f{Bf}}}c{}}{{{f{BNh}}}d}{{{f{Jd}}{f{Bhc}}}bAB`}{{{f{Ad}}{An{En}}}Ad}{{{f{Ad}}}{{Af{{f{BAl}}}}}}{{{f{Ad}}}{{Af{{f{BAn}}}}}}{{{f{Ad}}}{{Af{{f{BB`}}}}}}{{{f{Ad}}}{{Af{{f{BAj}}}}}}{{{f{Ad}}}{{Af{{f{E`}}}}}}`{{{f{Ad}}}{{Af{Dl}}}}{{}En}000{ce{}{}}000{AdBC`}1{BD`Ad}{AdAd}=={{{f{Ad}}}{{Af{Fh}}}}000{{{f{BNh}}}Fh}0{{}d}00{{{f{Ad}}}Jd}{{{f{Ad}}}CAj}{{{f{Ad}}}{{`{{Bd{}{{B`{Ad}}}}}}}}{{{f{BNh}}}En}{{{f{Ad}}}En}{{{f{BNh}}En}Ad}0{{{f{Ad}}}{{Af{{f{Dl}}}}}}{{{f{Ad}}{f{Bf}}}c{}}{{{f{Ad}}{f{Ad}}}{{Af{Fh}}}}{{{f{Ad}}c}{{Af{Fh}}}AOj}201{{{f{Ad}}}{{Af{{An{c}}}}}Kb}{{{f{BNh}}}{{Af{Kd}}}}0{{{f{BNh}}}{{An{Kf}}}}0{{{f{Ad}}}Kd}1122322{{{f{Ad}}c}e{A`Kb}{}}{{AdAd}c{}}{{{f{Ad}}{f{Ad}}}c{}}{{Adc}e{A`Kb}{}}>>={{{f{BNh}}}{{Af{En}}}}0{{{f{BNh}}}{{f{Bf}}}}{{{f{Bf}}c}Ad{{Ld{{Df{{An{{f{Bf}}}}}}}}}}{{{f{Bf}}c}Ad{{Ld{{Df{Ll}}}}}}{{{f{Bf}}c}Ad{{Ld{{Df{Ib}}}}}}{{{f{Bf}}c}Ad{{Ld{{Df{M`}}}}}}{{{f{Bf}}c}Ad{{Ld{{Df{Jh}}}}}}{{{f{Bf}}c}Ad{{Ld{{Df{Mb}}}}}}{{{f{Bf}}c}Ad{{Ld{{Df{I`}}}}}}{{{f{Bf}}c}Ad{{Ld{{Df{Kf}}}}}}{{{f{Bf}}c}Ad{{Ld{{Df{{An{D`}}}}}}}}{{{f{Bf}}c}Ad{{Ld{{Df{{f{Bf}}}}}}}}{{{f{Bf}}c}Ad{{Ld{{Df{{An{{Fb{Dd}}}}}}}}}}{{{f{Bf}}c}Ad{{Ld{{Df{{An{d}}}}}}}}{{{f{Bf}}c}Ad{{Ld{{Df{{An{Ll}}}}}}}}{{{f{Bf}}c}Ad{{Ld{{Df{{An{Ib}}}}}}}}{{{f{Bf}}c}Ad{{Ld{{Df{{An{M`}}}}}}}}{{{f{Bf}}c}Ad{{Ld{{Df{{An{Jh}}}}}}}}{{{f{Bf}}c}Ad{{Ld{{Df{{An{Mb}}}}}}}}{{{f{Bf}}{f{Ad}}}Ad}{{{f{Bf}}c}Ad{{Ld{{Df{{An{I`}}}}}}}}{{{f{Bf}}c}Ad{{Ld{{Df{D`}}}}}}{{{f{Bf}}c}AdBD`}{{{f{Bf}}c}Ad{{Ld{{Df{{An{Kf}}}}}}}}{{{f{Bf}}c}Ad{{Ld{{Df{d}}}}}}{{{f{Bf}}{Lf{Jh}}}Ad}{{{f{Bf}}c}Ad{{Ld{{Df{{An{{AKd{{Df{Dd}}}}}}}}}}}}{{{f{Bf}}{Lf{M`}}}Ad}{{{f{Bf}}c}Ad{{Ld{{Df{{AKd{{Df{Dd}}}}}}}}}}{{{f{Bf}}{Lf{Ib}}}Ad}{{{f{Bf}}c}Ad{{Ld{{Df{{An{{f{{Df{Dd}}}}}}}}}}}}{{{f{Bf}}{Lf{Ll}}}Ad}{{{f{Bf}}c}Ad{{Ld{{Df{{f{{Df{Dd}}}}}}}}}}{{{f{Bf}}c}Ad{{Ld{{Df{Ad}}}}}}{{{f{Bf}}c}Ad{{Ld{{Df{{An{{AKd{Bf}}}}}}}}}}{{{f{Bf}}c}Ad{{Ld{{Df{{An{Ad}}}}}}}}{{{f{Bf}}c}Ad{{Ld{{Df{{AKd{Bf}}}}}}}}{{{f{Bf}}c}Ad{{Ld{{Df{{Fb{Dd}}}}}}}}{{{f{Bf}}c}Ad{{Ld{{Df{Hd}}}}}}{{{f{Bf}}{f{Dj}}}Ad}{{{f{BNh}}EnEn}Ad}{{{f{Bf}}En}Ad}{{{f{BhCAj}}}{{An{c}}}{}}{{{f{Ad}}{f{Bf}}}{{Af{Fh}}}}{{{f{Ad}}c}{{Af{Fh}}}AOj}{{{f{Ad}}{f{Ad}}}{{Af{Fh}}}}{{{f{Ad}}c}eAOj{}}{{{f{Ad}}{f{Bf}}}c{}}2{{{f{Ad}}}{{Af{{f{`}}}}}}{{{f{BNh}}}En}`{{{f{Ad}}}CAl}{{{f{Ad}}}{{Af{Kd}}}}{{{f{BNh}}KfMj}{{Af{Kd}}}}0{{{f{BNh}}}Ad}{{{f{Ad}}{f{Ad}}}c{}}{{Adc}e{A`Kb}{}}{{{f{Ad}}c}e{A`Kb}{}}{{{f{BhBNh}}{f{Bf}}}b}{{{f{BhAd}}{f{Bf}}}{{f{BhAd}}}}{{{f{Ad}}{f{{Df{Jh}}}}}{{Af{Ad}}}}6{JdJd}{{{f{BNh}}{f{Cb}}Ml}{{Af{Ad}}}}0{{{f{Ad}}Kfdd{An{Ib}}}{{Af{Ad}}}}{{{f{Ad}}Endd{An{Ib}}}{{Af{Ad}}}}{{{f{Ad}}En}Ad}{{{f{BhAd}}Jd}b}{{{f{BNh}}Jh}Ad}{{{f{BhBNh}}}b}0{{{f{BhAd}}}b}{{{f{Ad}}{An{Ib}}}Ad}{{{f{CAj}}}{{Gn{En{An{En}}}}}}{{{f{BNh}}JhEn}Ad}{{{f{Ad}}JhEn}Ad}{{{f{Ad}}Dn}{{Af{Ad}}}}{{{f{BNh}}Dn}{{Af{Ad}}}}0{{{f{BNh}}Jh}{{Gn{AdAd}}}}{{{f{Ad}}Jh}{{Gn{AdAd}}}}{{{f{BNh}}Dd}{{An{Kf}}}}0{{{f{BNh}}Dd}{{Af{Kd}}}}0{{{f{Ad}}}{{Af{{f{Cn}}}}}}{{{f{Ad}}En}{{Af{{AKd{Bf}}}}}}{{{f{Ad}}{f{Dj}}}{{Af{Ad}}}}{{Adc}e{A`Kb}{}}{{{f{Ad}}c}e{A`Kb}{}}{{AdAd}c{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}}{{Af{c}}}Kb}{{{f{BNh}}}{{Af{Kd}}}}0{{{f{Ad}}}{{Af{Kd}}}}{{{f{Ad}}{An{En}}}Ad}{{{f{BNh}}{f{E`}}}{{Af{Ad}}}}{{{f{BNh}}{f{{Df{Hf}}}}}{{Af{Ad}}}}{{{f{BNh}}{f{{Df{Hf}}}}}Ad}{{{f{BNh}}{f{E`}}}Ad}{{{f{Ad}}{f{{Df{Hf}}}}}Ad}{{{f{Ad}}EnAMf}F`}{{{f{Ad}}}{{Af{Ad}}}}{{{f{c}}}e{}{}}0{{{f{Ad}}}{{AKd{Ad}}}}{{{f{c}}}D`{}}{{AdAd}{{Af{Ad}}}}{c{{Gh{e}}}{}{}}00{{{Gn{{f{Bf}}{Fb{F`}}}}}{{Af{Ad}}}}{{{Gn{{f{AOn}}F`}}}{{Af{Ad}}}}{{{Gn{{f{Bf}}F`}}}{{Af{Ad}}}}3{{{Gn{{f{AOn}}{Fb{F`}}}}}{{Af{Ad}}}}44445{{{f{BhAd}}{Id{c}}}dBn}6{{{f{c}}}Nl{}}000{{{f{Ad}}}{{Af{{f{BAf}}}}}}{{{f{Ad}}}{{Af{{f{AOf}}}}}}{{{f{Ad}}}{{Af{{f{BAh}}}}}}{{{f{Ad}}}{{Af{{f{BAd}}}}}}{{{f{BNh}}}{{Af{Ad}}}}0{{{f{Ad}}}{{Af{Ad}}}}{{{f{BNh}}}{{Af{{f{{l{c}}}}}}}Bn}{{{f{BNh}}Dd}{{An{Kf}}}}0{{{f{BNh}}Dd}{{Af{Kd}}}}0{ce{}{}}000{{Ad{f{Bf}}}Ad}{{{f{Ad}}c}Ad{A`Kb}}{{{f{Ad}}{f{Fh}}{f{Ad}}}{{Af{Ad}}}}``{{{f{c}}h}b{}}{{{f{Cf}}}{{f{Ad}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{Cf}}}Cf}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{{f{Cf}}}Ad}{En{{f{c}}}{}}{En{{f{Bhc}}}{}}{Enb}{cc{}}{{}En}{ce{}{}}{{{CAn{Ad}}}Cf}{{{f{BhCf}}{f{BhF`}}}b}{{{f{c}}}e{}{}}{c{{Gh{e}}}{}{}}0{{{f{c}}}Nl{}}5{{{f{BhCf}}{f{BhF`}}e}c{}{{Cb{{f{Cf}}}{{C`{c}}}}}}````{{{CB`{}{{C`{c}}}}{f{Ad}}}c{}}{{{f{CBb}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Ah}}}}{f{Ad}}}{{Af{Ad}}}}0`2100210021002100``{{{f{BJj}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Ej}}}}{f{Ad}}}{{Af{Ad}}}}0{{{f{BJj}}c}{{Af{Ad}}}Ab}{{{f{{l{Ej}}}}c}{{Af{Ad}}}Ab}0```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{CBd}}}CBd}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{{}CBd}{En{{f{c}}}{}}{En{{f{Bhc}}}{}}{Enb}{{{f{CBd}}{f{CBd}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CBd}}{f{BhFn}}}G`}{cc{}}{{{f{CBd}}{f{Bhc}}}bAB`}{{}En}{ce{}{}}{{{f{c}}}e{}{}}{c{{Gh{e}}}{}{}}0{{{f{c}}}Nl{}}3``````````{{{f{c}}h}b{}}05{{{Fb{BC`}}}{{Af{BC`}}}}{c{{Af{BC`}}}{{Gf{}{{B`{BC`}}}}}}{cBC`{{Gf{}{{B`{BC`}}}}}}{c{{An{BC`}}}{{Gf{}{{B`{BC`}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{Gn{{AKd{{l{c}}}}{AKd{{l{e}}}}}}}BnBn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{Gn{{AKd{{l{c}}}}{AKd{{l{e}}}}{AKd{{l{g}}}}}}}BnBnBn}{{{f{BhCBf}}}d}{c{{Af{Dj}}}{{Gf{}{{B`{{f{Hd}}}}}}}}{c{{Af{{Gn{DjEn}}}}}{{Gf{}{{B`{{f{Hd}}}}}}}}`{{{f{{l{c}}}}{f{{l{e}}}}}{{An{Gl}}}BnBn}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{CBh}}}{{`{{Bd{}{{B`{En}}}}}}}}{{{f{CBj}}}CBj}{{{f{{CBl{ec}}}}}{{CBl{ec}}}A@f{A@f{Bd{}{{B`{c}}}}}}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{c}}}b{}}00{{{f{{l{c}}}}{f{{l{c}}}}}{{Gn{{AKd{{l{c}}}}{AKd{{l{c}}}}}}}Bn}{{{f{Ad}}{f{Ad}}}{{Gn{AdAd}}}}{CBfe{}{{CBn{c}}}}{CBfe{}{{CC`{c}}}}{c{{Af{BC`}}}{{Gf{}{{B`{{f{BC`}}}}}}}}{cBC`{{Gf{}{{B`{{f{BC`}}}}}}}}{{{f{BhCBf}}{f{c}}}dBKl}{{}CBj}{En{{f{c}}}{}}{{{f{{CCb{c}}}}}{{f{e}}}{}{}}{{{f{{AJh{c}}}}}{{f{e}}}{}{}}222{En{{f{Bhc}}}{}}{{{f{Bh{AJh{c}}}}}{{f{Bhe}}}{}{}}111{Enb}000{cBCn{{Gf{}{{B`{Dj}}}}}}{c{{Af{Dj}}}{{Gf{}{{B`{{f{Dj}}}}}}}}{{{f{{CCb{Ad}}}}{f{{CCb{Ad}}}}}d}{{{f{CBj}}{f{CBj}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{CBj}}{f{BhFn}}}G`}{{{f{BhCBf}}cg}{{An{c}}}{}{}{{Ch{ce}{{C`{c}}}}}}{cc{}}000{g{{Gh{ic}}}{}{}{{Gj{c}{{B`{e}}}}}{}}{c{{AJh{Fh}}}{{Gf{}{{B`{d}}}}}}{c{{AJh{{l{e}}}}}{{Gf{}{{B`{}}}}}n}{eCC`{}{{Gf{}{{B`{c}}}}}}12{c{{AJh{{l{e}}}}}{{H`{}{{B`{}}}}}n}{c{{AJh{{l{e}}}}}{{Hb{}{{B`{}}}}}n}{c{{AJh{Fh}}}{{Hb{}{{B`{d}}}}}}{{{f{Dj}}{f{Dj}}}{{An{Dj}}}}{{{f{Dj}}{f{Dj}}CBj}{{An{Dj}}}}{{{f{AMh}}{f{AMh}}}AMh}{{{f{Ad}}{f{Ad}}}{{Af{b}}}}{{{f{{CCb{Ad}}}}{f{Bhc}}}bAB`}{{{f{CBj}}{f{Bhc}}}bAB`}`{{}En}000{ce{}{}}000{{{AJh{c}}}c{}}1{BEl{{Fb{c}}}{}}{c{{Fb{D`}}}{}}{c{{Fb{{CCf{CCd}}}}}{}}{{{f{CBh}}}{{`{{Bd{}{{B`{CBh}}}}}}}}{{{f{CBh}}}En}{MbHd}1{c{{AJh{c}}}{}}{{eEn}{{CBl{ec}}}{}{{Bd{}{{B`{c}}}}}}{{{f{Bh{CBl{ec}}}}}An{}{{Bd{}{{B`{c}}}}}}{{{f{Bh{CBl{ec}}}}}An{}{{Bd{}{{B`{c}}}}Ff}}`{{{f{{CBl{ec}}}}}{{Gn{En{An{En}}}}}{}{{Bd{}{{B`{c}}}}}}{{{f{CBh}}JhEn}CBh}{{{f{{Df{c}}}}JhEn}{{f{{Df{c}}}}}{}}{{{f{c}}En}{{Fb{c}}}CBh}0{{{f{CBh}}Jh}{{Gn{CBhCBh}}}}{{{f{BC`}}End}{{Fb{BC`}}}}{{{f{c}}}e{}{}}0{{CBfEn}{{CBl{CBfc}}}{}}{c{{Gh{e}}}{}{}}000{{{f{Dj}}{f{Dj}}}{{Af{Dj}}}}1111{{{f{c}}}Nl{}}000{ce{}{}}000{{{f{Dj}}e}c{}{{Cb{{f{BhCf}}}{{C`{c}}}}}}{{{f{{Df{{Fb{c}}}}}}}{{Gn{En{Fb{En}}}}}{}}{{{f{BC`}}}{{`{{Bd{}{{B`{BC`}}}}}}}}{{{f{{Df{c}}}}}{{AJb{Hf}}}{{Ld{{Df{Nn}}}}IlIn}}{{{f{{Df{e}}}}}{{Fb{c}}}{IlInCd}{{Ld{{Df{c}}}}}}{{{f{Ad}}}{{Fb{Ad}}}}","D":"JDj","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",5474],[5,"ListType",1539],[5,"ChunkedArray",40],[10,"PolarsNumericType",1539],[10,"Num",5475],[10,"ToPrimitive",5476],[5,"Series",4824],[8,"PolarsResult",4052,5477],[10,"NumOpsDispatchInner",5262,5478],[6,"GroupsProxy",3646,5479],[5,"BooleanType",1539],[6,"Option",5480],[17,"Item"],[8,"ArrayBox",5238],[10,"Iterator",5481],[1,"str"],[0,"mut"],[17,"IsNested"],[5,"FalseT",1539],[10,"PolarsDataType",1539],[17,"Output"],[10,"Fn",5482],[10,"Copy",5483],[5,"AmortSeries",5238],[10,"FnMut",5482],[5,"Float64Type",1539],[5,"Float32Type",1539],[8,"StringChunked",1539],[5,"String",5484],[5,"BinaryType",1539],[1,"u8"],[1,"slice"],[5,"StringType",1539],[6,"DataType",1539,5485],[8,"ListChunked",1539],[5,"SortOptions",1453],[8,"IdxCa",1539,5486],[5,"SortMultipleOptions",1453],[8,"BinaryChunked",1539],[10,"PolarsIntegerType",1539],[6,"CastOptions",732],[10,"NumOpsDispatchCheckedInner",5287,5487],[8,"ChunkLenIter",40],[1,"usize"],[8,"ArrayRef",4052,5488],[5,"Vec",5489],[5,"MetadataProperties",821],[10,"DoubleEndedIterator",5490],[8,"BooleanChunked",1539],[17,"HasViews"],[17,"IsObject"],[5,"Formatter",5491],[8,"Result",5491],[10,"Array",5488],[17,"Array"],[10,"IntoIterator",5492],[6,"Result",5493],[10,"FallibleIterator",5494],[5,"Bitmap",5495],[1,"tuple"],[10,"IntoParallelIterator",5496],[10,"TrustedLen",5497],[6,"AnyValue",1539,5498],[8,"IdxSize",4052,5499],[5,"MetadataFlags",821],[5,"ObjectType",1539],[10,"PolarsObjectSafe",1111],[10,"PolarsObject",1111],[1,"f32"],[1,"u64"],[5,"Metadata",821],[5,"RwLockWriteGuard",5500],[5,"Int128Type",1539],[8,"DecimalChunked",1539,5501],[10,"Send",5483],[10,"Sync",5483],[10,"ExactSizeIterator",5502],[10,"PolarsFloatType",1539],[6,"IsSorted",4824,5503],[10,"PolarsIterator",782],[1,"i64"],[5,"Iter",5504],[1,"fn"],[5,"Map",5505],[6,"ChunkedArrayLayout",40],[10,"NumCast",5476],[5,"Scalar",4717],[1,"f64"],[6,"MetadataReadGuard",821,5506],[5,"IMMetadata",821,5507],[5,"Arc",4052,5508],[10,"MetadataTrait",821,5509],[5,"RwLockReadGuard",5500],[5,"Int64Type",1539],[10,"AsRef",5510],[5,"Range",5511],[5,"UInt64Type",1539],[5,"UInt32Type",1539],[1,"u32"],[5,"Int32Type",1539],[1,"i32"],[1,"i128"],[5,"Field",1539,5512],[10,"ParallelIterator",5496],[10,"IndexedParallelIterator",5496],[6,"QuantileInterpolOptions",4052,5513],[5,"RollingOptionsFixedWindow",4052,5514],[10,"Sized",5483],[17,"IsStruct"],[5,"RandomState",5515],[5,"BytesHash",5516],[8,"ArrayView1",5517],[8,"Array2",5517],[6,"Either",5518],[5,"TypeId",5519],[5,"NullableIdxSize",4052,5499],[10,"FnOnce",5482],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",442,5520],[10,"ChunkedBuilder",470],[5,"BinViewChunkedBuilder",470,5521],[10,"ViewType",5522],[5,"BooleanChunkedBuilder",470,5523],[5,"NullChunkedBuilder",470,5524],[5,"PrimitiveChunkedBuilder",470,5525],[10,"Clone",5526],[8,"StringChunkedBuilder",470,5521],[8,"BinaryChunkedBuilder",470,5521],[10,"NewChunkedArray",470],[5,"AnonymousListBuilder",578,5527],[5,"AnonymousOwnedListBuilder",578,5527],[5,"ListBooleanChunkedBuilder",578,5528],[5,"ListPrimitiveChunkedBuilder",578,5529],[10,"ListBuilderTrait",578],[5,"ListStringChunkedBuilder",578,5530],[5,"ListBinaryChunkedBuilder",578,5530],[5,"ListNullChunkedBuilder",578,5531],[5,"Box",5532],[10,"Hasher",5533],[10,"ChunkedCollectInferIterExt",762],[10,"ChunkedCollectIterExt",762],[10,"Canonical",776],[10,"ChunkedCollectParIterExt",778],[10,"FromParIterWithDtype",778],[5,"BooleanArray",5534],[5,"BoolIterNoNull",782],[5,"SomeIterator",782],[5,"MetadataEnv",821,5535],[10,"MetadataCollectable",821,5536],[5,"Iter",5537],[5,"IterNames",5537],[5,"File",5538],[5,"Mutex",5539],[6,"MetadataMerge",821],[5,"RwLock",5500],[5,"ObjectArray",1111],[6,"ArrowDataType",1539,5540],[10,"Any",5519],[10,"Debug",5491],[8,"ObjectValueIter",1111],[5,"BitmapIter",5541],[6,"ZipValidity",5542],[5,"ObjectChunkedBuilder",1188],[8,"ObjectChunked",1539],[10,"AnonymousObjectBuilder",1211],[5,"ObjectRegistry",1211],[8,"ObjectConverter",1211],[8,"BuilderConstructor",1211],[17,"FuncRet"],[10,"ChunkApply",1239],[10,"ChunkApplyKernel",1239],[10,"ChunkSort",1239],[10,"ChunkUnique",1239],[10,"ChunkCast",1239],[6,"FillNullStrategy",1239],[10,"ChunkCompare",1239],[10,"ChunkExplode",1239],[5,"OffsetsBuffer",5543],[10,"ChunkFillNullValue",1239],[10,"ChunkFilter",1239],[10,"ChunkFull",1239],[10,"ChunkFullNull",1239],[10,"ChunkAnyValue",1239],[10,"IsFirstDistinct",1239],[10,"IsLastDistinct",1239],[10,"ChunkAgg",1239],[10,"ChunkQuantile",1239],[10,"ChunkExpandAtIndex",1239],[10,"ChunkReverse",1239],[10,"ChunkRollApply",1239],[10,"ChunkSet",1239],[10,"ChunkShift",1239],[10,"ChunkShiftFill",1239],[10,"ChunkVar",1239],[10,"ChunkTake",1239],[10,"ChunkTakeUnchecked",1239],[10,"ChunkBytes",1239],[10,"ChunkZip",1239],[10,"BinaryFnMut",1365],[10,"StaticArray",1539,5544],[10,"TernaryFnMut",1365],[10,"Error",5545],[10,"UnaryFnMut",1365],[5,"PrimitiveArray",5546],[6,"SearchSortedSide",1406],[10,"SlicedArray",4052,5547],[5,"NoNull",5323],[5,"RowsEncoded",5548],[5,"BinaryArray",5549],[8,"BinaryOffsetChunked",1539],[5,"NaiveDateTime",5550],[6,"PolarsError",4052,5477],[6,"Cow",5551],[8,"Float32Chunked",1539],[8,"Float64Chunked",1539],[10,"ArrayFromIter",1539,5552],[10,"ArrayFromIterDtype",1539,5552],[10,"AsRefDataType",1539,5485],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",5553],[10,"From",5510],[5,"CategoricalChunked",3006,5554],[10,"CategoricalMergeOperation",3006,5555],[10,"LogicalType",1539,5556],[5,"Logical",1539,5556],[5,"OwnedObject",1539,5498],[6,"UnknownKind",1539,5485],[5,"CompatLevel",1539,5485],[6,"TimeUnit",1539,5557],[5,"UInt8Type",1539],[5,"UInt16Type",1539],[5,"Int8Type",1539],[5,"Int16Type",1539],[5,"DateType",1539],[5,"TimeType",1539],[5,"BinaryOffsetType",1539],[5,"DecimalType",1539],[5,"DatetimeType",1539],[5,"DurationType",1539],[5,"CategoricalType",1539],[6,"ArrowTimeUnit",1539],[10,"ArrayCollectIterExt",4052,5552],[8,"Utf8ViewArray",5522],[8,"UInt32Chunked",1539],[5,"Error",5491],[10,"NumericNative",1539],[10,"Into",5510],[5,"ArrowField",4052],[6,"PrimitiveType",5558],[6,"IntegerType",5559],[10,"Borrow",5560],[8,"SmartString",1539],[10,"NoOption",5561],[10,"GetAnyValue",1539,5498],[8,"Int128Chunked",1539],[10,"IntoScalar",1539,5562],[6,"Ordering",5563],[6,"PhysicalType",5559],[8,"UInt8Chunked",1539],[8,"UInt16Chunked",1539],[8,"UInt64Chunked",1539],[8,"Int8Chunked",1539],[8,"Int16Chunked",1539],[8,"Int32Chunked",1539],[8,"Int64Chunked",1539],[8,"PlIdHashMap",1539,5486],[5,"CategoricalChunkedBuilder",3006,5564],[5,"GlobalRevMapMerger",3006,5555],[6,"RevMapping",3147,5565],[6,"CategoricalOrdering",3147,5565],[5,"CatIter",3006,5554],[1,"u128"],[5,"DataFrame",3343],[5,"StringCacheHolder",3202,5566],[5,"ErrString",3231,5477],[6,"PolarsWarning",3231,5567],[10,"Display",5491],[6,"FloatFmt",3311],[1,"char"],[5,"Schema",4743],[10,"IntoSeries",4824,5568],[6,"NullStrategy",3343],[6,"UniqueKeepStrategy",3343],[8,"PlHashSet",1539,5569],[5,"ArrowSchema",4052,5570],[5,"Row",3905],[5,"GroupBy",3646],[5,"RangeInclusive",5511],[5,"RangeFrom",5511],[5,"RangeTo",5511],[5,"RangeToInclusive",5511],[5,"RangeFull",5511],[5,"RecordBatchIter",3343],[5,"PhysRecordBatchIter",3343],[10,"IntoVec",5323],[10,"RangeBounds",5511],[8,"SchemaRef",4743],[6,"IndexOrder",4052,5571],[5,"StructArray",5572],[8,"RecordBatch",5573],[5,"UnpivotArgs",3616],[5,"GroupsIdx",3646,5479],[8,"IdxVec",5574],[6,"GroupByMethod",3646],[5,"SlicedGroups",3646,5479],[5,"GroupsProxyParIter",3646,5479],[10,"UnindexedConsumer",5575],[6,"GroupsIndicator",3646,5479],[8,"IdxItem",3646,5479],[10,"IntoGroupsProxy",3646,5576],[5,"Copied",5577],[5,"Zip",5578],[5,"GroupsProxyIter",3646,5479],[8,"GroupsSlice",3646,5479],[1,"array"],[8,"DynArgs",4052,5579],[10,"IsFloat",5580],[10,"NativeType",5581],[10,"AggList",3889,5582],[10,"TakeExtremum",3889],[10,"PhysicalAggExpr",3902],[6,"AnyValueBuffer",3905,5583],[6,"AnyValueBufferTrusted",3905,5583],[5,"IdHasher",4004,5584],[5,"IdxHash",4004,5584],[5,"HashMap",5585],[10,"BuildHasher",5533],[10,"VecHash",4004,5586],[10,"Allocator",5587],[5,"BorrowedFd",5588],[10,"AsFd",5588],[10,"AsRawFd",5589],[20,"MaybeUninit",5590],[10,"NumOpsDispatchChecked",4052,5487],[5,"ChunkId",4052,5499],[5,"RollingVarParams",4052,5579],[5,"RollingQuantileParams",4052,5579],[6,"NonExistent",4052,5591],[10,"Ord",5563],[10,"Default",5592],[5,"CStr",5593],[5,"Weak",5508],[10,"PartialEq",5563],[10,"Scalar",5594],[5,"Error",5595],[5,"Utf8Error",5596],[5,"TryReserveError",5597],[6,"Error",5598],[5,"Path",5599],[10,"ToOwned",5551],[5,"OsString",5600],[5,"OsStr",5600],[5,"CString",5601],[1,"never"],[5,"PathBuf",5599],[10,"FromData",4639,5602],[5,"Buffer",5603],[10,"FromDataUtf8",4639,5602],[10,"FromDataBinary",4639,5602],[5,"ListArray",5604],[6,"Ambiguous",4052,5591],[10,"NamedFromOwned",4052,5605],[10,"PartialOrd",5563],[10,"Hash",5533],[10,"SeriesTrait",4824,5503],[10,"CloneToUninit",5526],[10,"ChunkAggSeries",4052,5606],[10,"QuantileAggSeries",4052,5607],[10,"IndexToUsize",4052,5608],[10,"NamedFrom",4052,5605],[5,"Pin",5609],[5,"Request",5545],[5,"BorrowedCursor",5610],[5,"IoSliceMut",5611],[6,"SeekFrom",5611],[10,"VarAggSeries",4052,5612],[5,"AllocError",5587],[5,"BTreeMap",5613],[5,"IoSlice",5611],[5,"AnonymousBuilder",4645,5614],[5,"Offsets",5543],[5,"MutableNullArray",4668,5615],[5,"MutableBitmap",5616],[5,"Utf8Array",5617],[10,"SchemaNamesAndDtypes",4743],[8,"ArrowSchemaRef",5570],[10,"IndexOfSchema",4743],[17,"DataType"],[8,"Metadata",5540],[5,"SeriesIter",4824,5618],[8,"SeriesPhysIter",4824,5618],[5,"Rc",5619],[10,"LhsNumOps",5262,5478],[10,"NumOpsDispatch",5262,5478],[6,"NullBehavior",5295],[10,"CustomIterTools",5323,5620],[10,"Container",5323],[5,"SuperTypeOptions",5323,5621],[5,"TrustMyLength",5323,5497],[10,"FromIteratorReversed",5622],[10,"FromTrustedLenIterator",5323,5620],[5,"Wrap",5323],[5,"LazyCompact",5623],[5,"SmartString",5624],[8,"FillNullLimit",1239],[10,"InitHashMaps",1539],[10,"InitHashMaps2",1539],[5,"TrueT",1539],[15,"IO",3296],[15,"Context",3296],[15,"Count",3886],[15,"Slice",3887],[10,"ListFromIter",4052],[10,"Utf8FromIter",4712],[10,"BinaryFromIter",4712],[6,"BitRepr",4824]],"r":[[0,5584],[4,5566],[13,5566],[16,5566],[32,5566],[442,5520],[470,5521],[471,5521],[472,5523],[475,5524],[476,5525],[477,5521],[578,5527],[579,5527],[580,5530],[581,5528],[583,5531],[584,5529],[585,5530],[826,5507],[832,5536],[833,5535],[837,5506],[838,5509],[1157,5625],[1437,5547],[1453,5547],[1540,5498],[1542,5552],[1543,5552],[1544,5552],[1545,5540],[1547,5485],[1563,5554],[1566,5554],[1567,5564],[1568,5555],[1569,5565],[1571,5485],[1572,5485],[1573,5485],[1574,5485],[1585,5501],[1595,5512],[1596,5512],[1611,5498],[1613,5555],[1617,5486],[1618,5608],[1619,5486],[1620,5486],[1621,5569],[1622,5486],[1647,5562],[1661,5556],[1662,5556],[1680,5498],[1684,5569],[1685,5569],[1686,5486],[1687,5569],[1688,5569],[1694,5565],[1697,5544],[1709,5557],[1710,5485],[1737,5485],[1934,5555],[1951,5556],[2081,5485],[2601,5555],[2602,5555],[2614,5485],[2700,5554],[2738,5554],[3006,5554],[3007,5554],[3008,5564],[3009,5555],[3010,5565],[3012,5555],[3016,5565],[3033,5555],[3099,5555],[3100,5555],[3118,5554],[3122,5554],[3147,5565],[3152,5565],[3202,5566],[3208,5566],[3211,5566],[3219,5566],[3221,5565],[3226,5565],[3227,5566],[3228,5566],[3229,5566],[3230,5566],[3237,5477],[3244,5477],[3245,5477],[3246,5567],[3260,5477],[3268,5477],[3275,5567],[3280,5477],[3281,5477],[3282,5477],[3283,5477],[3284,5477],[3285,5567],[3286,5477],[3300,5626],[3301,5626],[3302,5626],[3303,4004],[3646,5479],[3652,5479],[3653,5479],[3654,5479],[3655,5479],[3656,5479],[3657,5479],[3660,5479],[3662,5576],[3674,5479],[3889,5582],[3907,5583],[3908,5583],[4003,5627],[4004,5584],[4005,5584],[4006,5584],[4007,5586],[4010,5586],[4011,5586],[4052,5591],[4053,5508],[4054,5520],[4055,5552],[4056,5488],[4058,5570],[4059,5521],[4060,5523],[4062,5554],[4063,5554],[4064,5564],[4065,5555],[4066,5565],[4067,5606],[4068,5499],[4069,40],[4070,470],[4071,762],[4072,762],[4076,3343],[4078,5579],[4082,5602],[4083,5602],[4084,5602],[4086,5555],[4089,5608],[4090,5499],[4091,5571],[4092,5608],[4093,5568],[4094,5323],[4096,5628],[4097,5628],[4098,5628],[4101,5478],[4103,5530],[4104,5528],[4105,578],[4106,5629],[4107,5529],[4108,5530],[4112,5605],[4113,5605],[4115,470],[4117,5591],[4121,5499],[4122,5499],[4123,5478],[4124,5487],[4128,5477],[4129,782],[4130,1111],[4131,5477],[4132,5525],[4133,5607],[4134,5513],[4137,5565],[4138,5514],[4139,5579],[4140,5579],[4143,4717],[4146,4824],[4147,5503],[4149,5547],[4151,5566],[4153,5521],[4155,3343],[4156,3616],[4157,5612],[4158,5586],[4204,5555],[4257,5629],[4260,0],[4273,5629],[4302,0],[4438,5608],[4481,5629],[4483,5555],[4484,5555],[4510,5629],[4516,5477],[4517,5477],[4518,5477],[4519,5477],[4531,5554],[4533,5629],[4539,5554],[4613,5629],[4639,5602],[4640,5602],[4641,5602],[4645,5614],[4668,5615],[4699,5565],[4704,5565],[4705,5547],[4708,5566],[4709,5566],[4710,5566],[4711,5566],[4712,5630],[4713,5630],[4826,5503],[4827,1239],[4830,5568],[4831,5503],[4832,5503],[4837,5618],[4838,5618],[4839,5503],[5262,5478],[5263,5478],[5264,5478],[5270,5478],[5287,5487],[5288,5487],[5325,5620],[5326,5620],[5327,5620],[5330,5621],[5331,5497],[5343,5631],[5344,5631],[5386,5632],[5387,5621],[5412,5621],[5413,5621],[5415,5633],[5434,5621],[5455,5621],[5468,5633]],"b":[[49,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[50,"impl-Add-for-%26ChunkedArray%3CT%3E"],[51,"impl-Add-for-ChunkedArray%3CT%3E"],[52,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[65,"impl-ChunkedArray%3CFloat64Type%3E"],[66,"impl-ChunkedArray%3CFloat32Type%3E"],[72,"impl-ChunkedArray%3CBinaryType%3E"],[73,"impl-ChunkedArray%3CStringType%3E"],[74,"impl-ChunkedArray%3CT%3E"],[102,"impl-ChunkedArray%3CT%3E"],[103,"impl-Container-for-ChunkedArray%3CT%3E"],[122,"impl-Div-for-%26ChunkedArray%3CT%3E"],[123,"impl-Div-for-ChunkedArray%3CT%3E"],[124,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[125,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[132,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[133,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[134,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[135,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[141,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[142,"impl-Debug-for-ChunkedArray%3CT%3E"],[153,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[154,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[155,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[157,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[158,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[186,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[187,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[188,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[189,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[221,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[222,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[223,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[224,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[225,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[226,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[227,"impl-ChunkedArray%3CT%3E"],[228,"impl-Container-for-ChunkedArray%3CT%3E"],[233,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[234,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[235,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[236,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[237,"impl-ChunkedArray%3CBooleanType%3E"],[238,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[240,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[241,"impl-ChunkedArray%3CBooleanType%3E"],[251,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[252,"impl-ChunkedArray%3CBooleanType%3E"],[255,"impl-ChunkedArray%3CBooleanType%3E"],[256,"impl-ChunkedArray%3CT%3E"],[257,"impl-Mul-for-ChunkedArray%3CT%3E"],[258,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[259,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[260,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[265,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[266,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[267,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[268,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[269,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[270,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[271,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[272,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[273,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[274,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[275,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[276,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[277,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[278,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[279,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[280,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[281,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[282,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[283,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[284,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[285,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[286,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[287,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[288,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[296,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[297,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[298,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[299,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[303,"impl-ChunkedArray%3CListType%3E"],[304,"impl-ChunkedArray%3CStringType%3E"],[305,"impl-ChunkedArray%3CStringType%3E"],[306,"impl-ChunkedArray%3CListType%3E"],[317,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[318,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[319,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[320,"impl-Rem-for-ChunkedArray%3CT%3E"],[339,"impl-Container-for-ChunkedArray%3CT%3E"],[340,"impl-ChunkedArray%3CT%3E"],[343,"impl-Container-for-ChunkedArray%3CT%3E"],[344,"impl-ChunkedArray%3CT%3E"],[347,"impl-Sub-for-ChunkedArray%3CT%3E"],[348,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[349,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[350,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[352,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[353,"impl-ChunkedArray%3CBooleanType%3E"],[356,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[357,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[358,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[359,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[365,"impl-ChunkedArray%3CT%3E"],[366,"impl-ChunkedArray%3CListType%3E"],[371,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[372,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[373,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[374,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[375,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[376,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[404,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[405,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[406,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[407,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[408,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[409,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[410,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[411,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[412,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[413,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[414,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[415,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[416,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[417,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[418,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[419,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[420,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[421,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[422,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[423,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[424,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[425,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[426,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[427,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[428,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[429,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[436,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[437,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[438,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[439,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[526,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[527,"impl-BinViewChunkedBuilder%3Cstr%3E"],[859,"impl-Flags-for-MetadataProperties"],[860,"impl-MetadataProperties"],[861,"impl-Flags-for-MetadataFlags"],[862,"impl-MetadataFlags"],[928,"impl-Metadata%3CT%3E"],[929,"impl-MetadataTrait-for-Metadata%3CT%3E"],[954,"impl-UpperHex-for-MetadataProperties"],[955,"impl-LowerHex-for-MetadataProperties"],[956,"impl-Octal-for-MetadataProperties"],[957,"impl-Binary-for-MetadataProperties"],[958,"impl-Debug-for-MetadataProperties"],[959,"impl-Debug-for-MetadataFlags"],[960,"impl-LowerHex-for-MetadataFlags"],[961,"impl-UpperHex-for-MetadataFlags"],[962,"impl-Octal-for-MetadataFlags"],[963,"impl-Binary-for-MetadataFlags"],[973,"impl-Flags-for-MetadataProperties"],[974,"impl-MetadataProperties"],[975,"impl-MetadataFlags"],[976,"impl-Flags-for-MetadataFlags"],[989,"impl-MetadataTrait-for-Metadata%3CT%3E"],[990,"impl-Metadata%3CT%3E"],[1033,"impl-Metadata%3CT%3E"],[1034,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1038,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1039,"impl-Metadata%3CT%3E"],[1117,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1118,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1152,"impl-ObjectArray%3CT%3E"],[1153,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1168,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1169,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1179,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1180,"impl-ObjectArray%3CT%3E"],[1182,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1183,"impl-ObjectArray%3CT%3E"],[1185,"impl-Array-for-ObjectArray%3CT%3E"],[1186,"impl-ObjectArray%3CT%3E"],[1189,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1190,"impl-ObjectChunkedBuilder%3CT%3E"],[1192,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1193,"impl-ObjectChunkedBuilder%3CT%3E"],[1776,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1777,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1778,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1779,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1780,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1781,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1782,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1783,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1857,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1858,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1859,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1860,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1861,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[1862,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[2208,"impl-PartialEq-for-DataType"],[2209,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2218,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2219,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2220,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2221,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2224,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2225,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2226,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2227,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2265,"impl-Debug-for-AnyValue%3C\'a%3E"],[2266,"impl-Display-for-AnyValue%3C\'_%3E"],[2268,"impl-Debug-for-DataType"],[2269,"impl-Display-for-DataType"],[2272,"impl-Debug-for-TimeUnit"],[2273,"impl-Display-for-TimeUnit"],[2284,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2285,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2286,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2287,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2288,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2291,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2292,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2293,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2296,"impl-From%3C%26Field%3E-for-Field"],[2298,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2322,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2323,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2326,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2327,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[2328,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2330,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2331,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2332,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2333,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2339,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2340,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2342,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2343,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2344,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2345,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2346,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2347,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2355,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[2356,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[2357,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2358,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2359,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2360,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2449,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2450,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2451,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2452,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2455,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2456,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2457,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2458,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2591,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2592,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2593,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2594,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2597,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2598,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2599,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2600,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2635,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2636,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2637,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2638,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2639,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2640,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2641,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2642,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2643,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2644,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2657,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2658,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2661,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2662,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2663,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2664,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2667,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2668,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2669,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2670,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2750,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2751,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2752,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2753,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[3053,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3054,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3055,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3056,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3057,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3058,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3073,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3074,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3075,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3076,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3077,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3078,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3093,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3094,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3095,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3096,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3097,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3098,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3109,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3110,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3111,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3112,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3113,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3114,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3270,"impl-Debug-for-ErrString"],[3271,"impl-Display-for-ErrString"],[3364,"impl-Add%3C%26Series%3E-for-DataFrame"],[3365,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[3366,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[3409,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3410,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3411,"impl-Div%3C%26Series%3E-for-DataFrame"],[3443,"impl-Debug-for-DataFrame"],[3444,"impl-Display-for-DataFrame"],[3476,"impl-Index%3Cusize%3E-for-DataFrame"],[3477,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3478,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3479,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3480,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3481,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3482,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3483,"impl-Index%3C%26str%3E-for-DataFrame"],[3501,"impl-Container-for-DataFrame"],[3502,"impl-DataFrame"],[3508,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3509,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3510,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3511,"impl-Container-for-DataFrame"],[3512,"impl-DataFrame"],[3526,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3527,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3528,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3554,"impl-Container-for-DataFrame"],[3555,"impl-DataFrame"],[3559,"impl-Container-for-DataFrame"],[3560,"impl-DataFrame"],[3563,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3564,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3565,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3583,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3584,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BField%5D)%3E-for-DataFrame"],[3763,"impl-Display-for-GroupByMethod"],[3764,"impl-Debug-for-GroupByMethod"],[3770,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3772,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3773,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3807,"impl-IntoIterator-for-%26GroupsIdx"],[3808,"impl-IntoIterator-for-GroupsIdx"],[3810,"impl-IntoParallelIterator-for-%26GroupsIdx"],[3811,"impl-IntoParallelIterator-for-GroupsIdx"],[4175,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[4176,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4264,"impl-Default-for-Arc%3CT%3E"],[4265,"impl-Default-for-Arc%3C%5BT%5D%3E"],[4266,"impl-Default-for-Arc%3Cstr%3E"],[4267,"impl-Default-for-Arc%3CCStr%3E"],[4321,"impl-PartialEq-for-Arc%3CT,+A%3E"],[4322,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[4323,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[4356,"impl-Debug-for-PolarsError"],[4357,"impl-Display-for-PolarsError"],[4360,"impl-Pointer-for-Arc%3CT,+A%3E"],[4361,"impl-Display-for-Arc%3CT,+A%3E"],[4362,"impl-Debug-for-Arc%3CT,+A%3E"],[4372,"impl-From%3CUtf8Error%3E-for-PolarsError"],[4373,"impl-From%3CTryReserveError%3E-for-PolarsError"],[4374,"impl-From%3CError%3E-for-PolarsError"],[4375,"impl-From%3CError%3E-for-PolarsError"],[4380,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[4381,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[4382,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[4383,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[4384,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[4386,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[4387,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[4388,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[4389,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[4390,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[4391,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[4392,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[4394,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[4395,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[4396,"impl-From%3CT%3E-for-Arc%3CT%3E"],[4766,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[4768,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[4769,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[4770,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[4771,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[4772,"impl-From%3CArrowSchema%3E-for-Schema"],[4845,"impl-Add-for-Series"],[4846,"impl-Add%3CT%3E-for-Series"],[4847,"impl-Add%3CT%3E-for-%26Series"],[4848,"impl-Add-for-%26Series"],[4919,"impl-Div-for-%26Series"],[4920,"impl-Div-for-Series"],[4921,"impl-Div%3CT%3E-for-%26Series"],[4922,"impl-Div%3CT%3E-for-Series"],[4934,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4935,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4936,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4937,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4938,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4939,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4956,"impl-Display-for-Series"],[4957,"impl-Debug-for-Series"],[4970,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[4971,"impl-FromIterator%3Cu32%3E-for-Series"],[4972,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[4973,"impl-FromIterator%3Cbool%3E-for-Series"],[4974,"impl-FromIterator%3C%26f64%3E-for-Series"],[4975,"impl-FromIterator%3C%26bool%3E-for-Series"],[4976,"impl-FromIterator%3C%26str%3E-for-Series"],[4977,"impl-FromIterator%3CString%3E-for-Series"],[4978,"impl-FromIterator%3Cf64%3E-for-Series"],[4979,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[4980,"impl-FromIterator%3Cf32%3E-for-Series"],[4981,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[4982,"impl-FromIterator%3C%26i64%3E-for-Series"],[4983,"impl-FromIterator%3Ci64%3E-for-Series"],[4984,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[4985,"impl-FromIterator%3C%26i32%3E-for-Series"],[4986,"impl-FromIterator%3Ci32%3E-for-Series"],[4987,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[4988,"impl-FromIterator%3C%26u64%3E-for-Series"],[4989,"impl-FromIterator%3Cu64%3E-for-Series"],[4990,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[4991,"impl-FromIterator%3C%26u32%3E-for-Series"],[4992,"impl-FromIterator%3C%26f32%3E-for-Series"],[4993,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[4994,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[4995,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[4996,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[4997,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[4998,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[4999,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[5014,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5015,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5016,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5017,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5018,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5019,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5061,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5062,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5063,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5064,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5065,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5066,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5080,"impl-Mul%3CT%3E-for-%26Series"],[5081,"impl-Mul-for-Series"],[5082,"impl-Mul-for-%26Series"],[5083,"impl-Mul%3CT%3E-for-Series"],[5090,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[5091,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[5092,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[5093,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[5094,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[5095,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[5096,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[5097,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[5098,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[5099,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[5100,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[5101,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[5102,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[5103,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[5104,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[5105,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[5106,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[5107,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[5108,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[5109,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[5110,"impl-NamedFrom%3CT,+T%3E-for-Series"],[5111,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[5112,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[5113,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[5114,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[5115,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[5116,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[5117,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[5118,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[5119,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[5120,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[5121,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[5122,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[5123,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[5124,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[5125,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[5126,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[5131,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5132,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5133,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5134,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5135,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5136,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5145,"impl-Rem-for-%26Series"],[5146,"impl-Rem%3CT%3E-for-Series"],[5147,"impl-Rem%3CT%3E-for-%26Series"],[5179,"impl-Sub%3CT%3E-for-Series"],[5180,"impl-Sub%3CT%3E-for-%26Series"],[5181,"impl-Sub-for-Series"],[5182,"impl-Sub-for-%26Series"],[5203,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5204,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5205,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5207,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5404,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5405,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5407,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5408,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5410,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5411,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"]],"c":"OjAAAAEAAAAAAAwAEAAAAGMOrw7sDu8O8A7xDvIO8w74DvsOAA8BDyYP","e":"OzAAAAEAAD0QEQIAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAIAIgAHACsADAA/AAAAQgACAEYABQBOAAMAUwAAAFUACwBjAAMAaAAAAGsAAwBwAAEAdgANAIUAAwCKAAEAjQAFAJUAAQCZAAYAogADAKgAAwCtAAUAtAABALkABQDBAAIAyAAEAM4AAwDVAAIA2gABAN0ABgDlAAAA6gAMAPwAAwACAQYACgEbACkBAwAuAQAAMAEEADYBAQA8AQAAPgEEAEQBAABJAQUAUQEBAFQBAABWAQIAWgEJAGoBAQBwAQAAdAEJAH8BCACJAQAAiwEFAJMBAACVASMAugEpAOgBAgDuAScAHAIFACYCAAAoAiYAUQJMAKUCDAC5AiQA4QIPAPICAQD1AhkAEgMJAB4DAQAiAwEAJQMVADwDCQBHAwoAXAMAAF4DAABkAyEAigMSAJ8DAAChAwkArQMDALMDAQC3Aw0AzgMAANEDAADUAwEA2gMHAOMDBwD4AwEA/AMAAP8DAwAHBAUADgQEABoECwAtBAQANAQNAEQEBgBOBAgAWAQBAFwEFgB0BAcAfQQAAIAEAACCBAIAiAQQAJoEAACcBAAAnwQDAKQEAgCoBAEAqwQHALQEAAC2BAUAvgQBAMEEAADDBAEAxgQDAMsEAwDQBAIA1AQDANoEAADdBAAA5QQAAOoEAADtBAEA8gQBAPUEAAD4BAAAAgUAAAsFAgARBQcAGwUCACAFAQAjBQAAJQUBACsFAQAuBQEANQUBADsFAAA+BQAAQQUAAEMFAABFBQAARwUAAEwFBABTBQEAVgUHAF8FAQBiBQAAZgUAAGgFAwBtBQEAcAUFAHwFFwCVBQEAmQUEAJ8FAwCmBQcAsQUSAMYFCwDTBQEA1gUDAOYFCQD8BQ0ADAYCABAGBQAYBgAAGgYNACsGAAAtBgAAMgYBADUGAAA3BgIAOwYAAD0GAABABgAAQwYAAEUGAQBIBgAASgYCAE4GDABcBgAAXgYBAGEGAABjBgEAZgYAAGgGAQBrBgAAbQYBAHAGAwB3BgAAewYBAH8GAACCBgAAhAYAAIYGAwCLBgAAjgYIAJgGAQCbBgQAogYBAKYGAACoBgAArQYCALEGAQC0BgAAtgYBALkGAAC7BgEAvgYAAMAGAQDDBgAAxQYBAMgGAADKBgAAzQY7AA8HBAAWBwkAIQcEACcHCAAxBwAAMwdfAJQHhQAbCAcAJAh2AJwIAACeCEcA7QgEAPQIAgD5CAAA+wgAAP0IAAATCQEAFgkXADIJJABZCQYAYgkeAIcJQADKCQAA7gkKAPsJAAD9CQEAAAoBAAMKAAAICgUADwoAABIKAgAXCgMAHAoAAB4KHQA9CgkASAoNAFcKHgB3CgcAgAoaAJwKFQCzCgsAwAoAAMUKAADHCgAAzAodAOwKBADyClEARQsqAHELTAC/CwQAxQsBAMgLAgDMCwQA0gskAP4LAgACDAkAEAwDABUMFwAvDAEAMgwEADgMDQBHDAUATgwAAFAMGABqDAEAcAwCAHUMAQB5DAkAhAwEAIoMAQCPDAAAkQwCAJUMAQCYDAAAmgwBAKAMBACmDAQArAwQAL4MCgDLDAMA0QwEANcMJgD/DAUABg0JABMNAAAWDQoAIg0FAC0NFgBGDRMAYw0BAGcNAgBrDQAAbQ0AAHINAwB7DQAAig0AAI0NAQCVDQwAqA0BAK4NAACxDQAAtQ0DAL0NAQDHDQIAzw0AANINAADYDQAA4Q0CAOUNAADoDQAA6g0EAPUNAwD8DQYABQ4JABAOAAAWDgQAIg4OADIOAgA2DgAAOA4JAEMOAQBGDgMASw4DAFAOCQBbDgcAZA4BAGcOHQCGDigAsA4GALsOAAC9DgEAwA4AAMMOAwDJDgAAzg4HAN4ODQDtDgEA9A4DAPkOAQD9DgIAAg8AAAQPHwAnDwwANg8FAD0PBwBGDxYAXw8OAG8PDwCADwAAgw8DAIoPBgCUDw4ApQ8BAKgPEQC8DwQAxA8FAMwPCQDXDwIA3A8HAOUPCwDyDwMA9w8WAA8QBwAYEAUAHxAWADkQEQBMEAAAThABAFIQHABxEAIAdRAkAJsQBgClEAEArRAiANMQAwDYEAkA4xAdAAMRFQAaEQAAKhEAADIRAAA4EQAAOxEAAEIRAABFEQAAShECAE4RBQBWEREAeBEDAH0RAgCBEQEAhBEBAJ8RAgClEQQArBEAAK8RBwC5EQAAuxEBAMARLQD2EQAA+BEMAAYSAAAIEgwAGhIJACYSBgAuEgAAMBIdAE8SAABREgsAXhIAAGASAQBpEhAAexIAAH0SDACMEgcAlRIKAKESBgCuEgAAsBIBALMSAQC3EgEAyxIAAM0SAADPEgAA0xIDANkSBQDgEgQA5hIFAO4SBAD4EgAA/hICAAYTBQANEwkAGhMDAB8TAAAjEwIAJxMEAC4TEgBFEwMAShMAAEwTAABPEwIAXBMDAGQTAABnEwEAahMfAI0TAACPEwEAlxMAAJkTAQCcEwAAnhMAAKQTAQCnEwMArxMDALsTAwDAEwAAwhMAAMYTAADIEwIA0RMAANkTAwDfEwAA4xMjAAoUAwAPFAEAFBQBABoUAgAfFAAAIRQAACUUAgAsFAEALxQAADEUAQA0FAAAOhQAADwUAwBMFAEATxQOAF8UBABrFAAAcBQDAHUUAAB4FAsAhRQAAIcUAACJFAQAjxQaAK0UAgCyFBAAxBQBAMcUCgDTFAYA3BQAAN8UAADiFBEA9RQCAPoUEAANFQoAHBUJACcVCAA0FQkAPxUFAEcVAABJFQEATBUDAFEVCwBeFQQA"}],\
["polars_io",{"t":"KFFKKKNNECNNNNNNNNNNCCNNNNNNNNNONNNNNNNNCMMNNNNNNCONNNNCCCOCMMMOCCCCCCONNNNNNNNONNCNNMGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNOHNNNNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNHCONONNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNNNNNNNNNNNNNNNNNNNNCONNNNNNNNNNNNNNNNOOHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNOEONNNNNNNNNNNNNNNNNONOOONNNNNNOOOOOOOOOOCOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPFPPFPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNOOOFNNNNNNNNNNHNNNNHHNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNJJFNNNNNNHNHNNNNNNNNNFGFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKPGNNNNNNHNNNNNNNNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNNOONNNNHONNNNNNNNNNNNNNOOOOOONONNNNNNNNONNPFPPGFFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNFPFPFPPGFFIPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHJHHHHHHKFNNNNNNNNHNNMNNNNHNNHFFKKNNHNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNKKEMMMMNNNEJJJJSCHHEHHHHCSSSSS","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriteDataFrameToFile","__clone_box","__clone_box","async_glob","avro","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","cloud","csv","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","enabled","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","file_cache","finish","finish","fmt","fmt","from","from","hash","hash","hive","hive_start_idx","init","init","into","into","ipc","json","mmap","name","ndjson","new","new","next_record_batch","offset","parquet","partition","path_utils","pl_async","predicates","prelude","schema","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_parse_dates","type_id","type_id","utils","vzip","vzip","write_df_to_file","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","Deflate","Snappy","Snappy","__clone_box","arrow_schema","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","hash","init","init","init","into","into","into","new","new","schema","set_rechunk","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","PolarsObjectStore","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bucket","build_object_store","clone","clone_into","clone_to_uninit","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","download","drop","drop","drop","drop","eq","execute","expansion","flush","fmt","fmt","from","from","from","from_url","get","get_range","get_ranges","glob","head","init","init","init","into","into","into","new","new","new","new_with_object_store","object_path_from_str","options","prefix","queue","scheme","sync_update","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write","write_varint","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","Bucket","Checksum","Client","Client","Client","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","DisableTagging","Encryption","Endpoint","Endpoint","FederatedTokenFile","File","Gcp","GoogleConfigKey","Hf","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","SkipSignature","Token","Token","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","__clone_box","__clone_box","__clone_box","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_aws","build_azure","build_gcp","build_http","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","file_cache_ttl","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_str","from_str","from_str","from_untyped_config","hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","max_retries","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_aws","with_azure","with_gcp","with_max_retries","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_with_predicate","batched","batched_borrowed","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","chunk_size","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","columns","comment_prefix","count_rows","decimal_comma","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","dtype_overwrite","encoding","eol_char","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_parse_options","has_header","hash","hash","hash","hash","hash","ignore_errors","infer_file_schema","infer_schema_length","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_reader_with_file_handle","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","next_batches","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","sample_size","schema","schema_inference","schema_overwrite","separator","serialize","serialize","serialize","serialize","serialize","skip_rows","skip_rows_after_header","to_owned","to_owned","to_owned","to_owned","to_owned","truncate_ragged_lines","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_parse_dates","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_with_inference_result","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_sample_size","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","dtype","from","from","from","from","init","init","init","init","init_buffers","into","into","into","into","into_series","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","buf","time_unit","time_zone","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","__clone_box","__clone_box","batch_size","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","date_format","datetime_format","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","float_precision","float_scientific","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","include_bom","include_bom","include_header","include_header","init","init","init","init","init","into","into","into","into","into","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","serialize","serialize","serialize_options","time_format","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_float_scientific","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","FILE_CACHE","FILE_CACHE_PREFIX","FileCacheEntry","borrow","borrow_mut","deref","deref_mut","drop","from","get_env_file_cache_ttl","init","init_entries_from_uri_list","into","try_from","try_into","try_open_assume_latest","try_open_check_latest","type_id","update_ttl","uri","vzip","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","LZ4","ZSTD","__clone_box","__clone_box","__clone_box","__clone_box","arrow_schema","batched","batched_async","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","compression","count_rows","data","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","finish","finish","finish","finish_with_scan_ops","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_uri","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","maintain_order","memory_map","memory_mapped","metadata","new","new","new","new","new","new_async","schema","schema","serialize","serialize","serialize","set_rechunk","set_rechunk","to_owned","to_owned","to_owned","to_owned","to_writer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_columns","with_columns","with_compat_level","with_compat_level","with_compression","with_compression","with_compression","with_extension","with_hive_partition_columns","with_include_file_path","with_n_rows","with_n_rows","with_predicate","with_projection","with_projection","with_projection","with_row_index","with_row_index","with_row_index","with_row_limit","write_batch","write_df_to_file","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","from","from","hash","infer_schema_len","init","init","init","init","init","into","into","into","into","into","maintain_order","new","new","new","serialize","set_rechunk","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_ignore_errors","with_json_format","with_json_format","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","Mapped","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","deref","deref_mut","drop","ensure_not_mapped","from","from","init","into","into_mem_slice","to_bytes","to_file","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","_split_at_unchecked","arced","arr_from_iter","arr_from_iter","arr_from_iter_with_dtype","arr_from_iter_with_dtype","as_any","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","boxed","check_bound","clone","clone_into","clone_to_uninit","count","data_type","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fields","finish","fmt","from","from","from","from","from_path","full_null","get_fields","infer_schema_len","init","init","into","into","into_data","into_iter","iter","len","low_memory","new","new","new_empty","new_null","propagate_nulls","set_validity","slice","slice","slice_typed","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","split_at_boxed","split_at_boxed_unchecked","take_validity","to_boxed","to_owned","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_with_dtype","try_arr_from_iter_with_dtype","try_from","try_from","try_into","try_into","try_new","type_id","type_id","validity","validity","values","values_iter","vzip","vzip","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_predicate","with_projection","with_rechunk","with_row_index","with_schema","with_schema_overwrite","with_validity","with_validity","with_validity_typed","metadata","read","write","FileMetaData","FileMetaDataRef","ParquetStatistics","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","column_order","column_orders","created_by","deref","deref","deref_mut","deref_mut","deserialize","distinct_count","drop","drop","eq","fmt","fmt","from","from","from","init","init","into","into","into_thrift","key_value_metadata","key_value_metadata","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","try_from","try_from_thrift","try_into","try_into","type_id","type_id","version","vzip","vzip","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","RowGroups","__clone_box","__clone_box","batched","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_schema","check_schema","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","finishes_this_batch","fmt","fmt","from","from","from","from","from","from_uri","get_metadata","get_metadata","hash","hash","init","init","init","init","init","into","into","into","into","into","is_finished","iter","limit_reached","low_memory","materialize_empty_df","new","new","next_batches","num_rows","num_rows","parallel","read_parallel","read_parallel","schema","schema","schema","serialize","serialize","set_low_memory","set_rechunk","set_rechunk","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_statistics","use_statistics","use_statistics","vzip","vzip","vzip","vzip","vzip","with_columns","with_hive_partition_columns","with_hive_partition_columns","with_include_file_path","with_include_file_path","with_n_rows","with_n_rows","with_predicate","with_predicate","with_projection","with_projection","with_row_index","with_row_index","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","StatisticsOptions","Uncompressed","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","batched","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","compression","data_page_size","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distinct_count","drop","drop","drop","drop","drop","drop","drop","drop","empty","encode_and_compress","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","full","get_writer","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","is_empty","is_full","maintain_order","max_value","min_value","new","null_count","row_group_size","serialize","serialize","serialize","serialize","serialize","serialize","set_parallel","statistics","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_writer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_new","try_new","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_df_to_file","write_row_groups","write_partitioned_dataset","POLARS_TEMP_DIR_BASE_PATH","expand_paths","expand_paths_hive","expanded_from_single_directory","get_glob_start_idx","is_cloud_url","resolve_homedir","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","spawn_blocking","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","__clone_box","__clone_box","apply_predicate","as_stats_evaluator","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","column_stats","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","dtype","evaluate_io","field_name","fmt","fmt","from","from","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","init","into","into","new","new","null_count","num_rows","schema","serialize","serialize","should_read","take_indices","to_max","to_min","to_min_max","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_schema","SerReader","SerWriter","cloud","finish","finish","new","new","set_rechunk","set_rechunk","set_rechunk","write_partitioned_dataset","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","URL_ENCODE_CHAR_SET","compression","get_reader_bytes","get_sequential_row_statistics","is_compressed","materialize_projection","maybe_decompress_bytes","overwrite_schema","is_compressed","magic","GZIP","ZLIB0","ZLIB1","ZLIB2","ZSTD"],"q":[[0,"polars_io"],[86,"polars_io::avro"],[154,"polars_io::cloud"],[227,"polars_io::cloud::options"],[417,"polars_io::csv"],[419,"polars_io::csv::read"],[679,"polars_io::csv::read::buffer"],[753,"polars_io::csv::read::buffer::Buffer"],[756,"polars_io::csv::read::schema_inference"],[783,"polars_io::csv::write"],[929,"polars_io::file_cache"],[950,"polars_io::ipc"],[1192,"polars_io::json"],[1290,"polars_io::mmap"],[1313,"polars_io::ndjson"],[1315,"polars_io::ndjson::core"],[1419,"polars_io::parquet"],[1422,"polars_io::parquet::metadata"],[1475,"polars_io::parquet::read"],[1618,"polars_io::parquet::write"],[1848,"polars_io::partition"],[1849,"polars_io::path_utils"],[1856,"polars_io::pl_async"],[1878,"polars_io::predicates"],[1945,"polars_io::prelude"],[1956,"polars_io::utils"],[1968,"polars_io::utils::compression"],[1970,"polars_io::utils::compression::magic"],[1975,"dyn_clone::sealed"],[1976,"polars_io::options"],[1977,"core::result"],[1978,"serde::de"],[1979,"polars_io::shared"],[1980,"polars_core::frame"],[1981,"polars_error"],[1982,"core::fmt"],[1983,"core::hash"],[1984,"std::io"],[1985,"polars_arrow::record_batch"],[1986,"core::option"],[1987,"serde::ser"],[1988,"core::any"],[1989,"polars_io::avro::read"],[1990,"polars_arrow::datatypes::schema"],[1991,"polars_io::avro::write"],[1992,"polars_core::schema"],[1993,"alloc::string"],[1994,"alloc::vec"],[1995,"polars_io::cloud::glob"],[1996,"object_store"],[1997,"alloc::sync"],[1998,"polars_io::cloud::polars_object_store"],[1999,"object_store::path"],[2000,"tokio::io::async_write"],[2001,"core::marker"],[2002,"polars_io::cloud::adaptors"],[2003,"std::io::error"],[2004,"crossterm::command"],[2005,"url"],[2006,"bytes::bytes"],[2007,"core::ops::range"],[2008,"core::ops::function"],[2009,"parquet_format_safe::thrift::varint::decode"],[2010,"object_store::aws::builder"],[2011,"object_store::azure::builder"],[2012,"object_store::gcp::builder"],[2013,"core::convert"],[2014,"core::iter::traits::collect"],[2015,"polars_io::csv::read::reader"],[2016,"alloc::boxed"],[2017,"polars_io::csv::read::read_impl::batched"],[2018,"polars_io::csv::read::options"],[2019,"std::path"],[2020,"std::fs"],[2021,"polars_core::datatypes::dtype"],[2022,"polars_core::series"],[2023,"polars_utils::aliases"],[2024,"polars_io::csv::write::writer"],[2025,"polars_io::csv::write::options"],[2026,"core::num::nonzero"],[2027,"polars_io::file_cache::entry"],[2028,"polars_io::ipc::ipc_stream"],[2029,"polars_io::ipc::write"],[2030,"futures_io::if_std"],[2031,"polars_io::ipc::ipc_file"],[2032,"polars_io::ipc::ipc_reader_async"],[2033,"polars_arrow::io::ipc::read::file"],[2034,"polars_utils::mmap"],[2035,"polars_arrow::array::struct_"],[2036,"polars_arrow::array"],[2037,"polars_arrow::datatypes"],[2038,"polars_arrow::datatypes::field"],[2039,"polars_arrow::array::struct_::mutable"],[2040,"polars_arrow::array::growable::structure"],[2041,"polars_arrow::bitmap::immutable"],[2042,"polars_arrow::scalar"],[2043,"polars_arrow::array::struct_::iterator"],[2044,"polars_arrow::bitmap::utils::iterator"],[2045,"polars_arrow::bitmap::utils::zip_validity"],[2046,"polars_parquet::parquet::metadata::file_metadata"],[2047,"polars_parquet::parquet::metadata::column_order"],[2048,"polars_parquet::parquet::metadata::row_metadata"],[2049,"polars_parquet::arrow::read::statistics"],[2050,"parquet_format_safe::parquet_format"],[2051,"polars_parquet::parquet::metadata::schema_descriptor"],[2052,"polars_parquet::parquet::error"],[2053,"polars_io::parquet::read::reader"],[2054,"polars_io::parquet::read::read_impl"],[2055,"polars_io::parquet::read::options"],[2056,"polars_io::parquet::write::writer"],[2057,"polars_io::parquet::write::batched_writer"],[2058,"polars_io::parquet::write::options"],[2059,"polars_parquet::arrow::write"],[2060,"polars_parquet::parquet::write"],[2061,"core::iter::traits::iterator"],[2062,"polars_parquet::arrow::write::file"],[2063,"std::sync::mutex"],[2064,"core::future::future"],[2065,"tokio::runtime::task::join"],[2066,"smartstring::alias"],[2067,"polars_core::datatypes::field"],[2068,"avro_schema::file"],[2069,"polars_io::cloud::object_store_setup"],[2070,"polars_io::csv::read::parser"],[2071,"polars_io::file_cache::cache"],[2072,"polars_io::file_cache::utils"],[2073,"polars_io::parquet::read::utils"],[2074,"polars_io::utils::other"]],"i":[0,0,0,0,0,0,5,6,0,0,5,6,5,6,5,6,5,6,5,6,0,0,6,5,6,5,6,5,6,5,6,6,5,6,5,5,5,6,6,6,0,11,14,5,6,5,6,5,6,0,6,5,6,5,6,0,0,0,5,0,11,14,20,5,0,0,0,0,0,0,6,5,6,5,6,5,6,5,6,6,5,6,0,5,6,25,0,0,0,0,29,29,29,29,29,26,26,30,29,26,30,29,29,29,29,29,26,30,29,26,30,29,26,30,29,29,29,29,29,26,30,29,26,30,29,29,26,30,29,26,30,29,26,30,26,26,29,26,30,29,26,30,29,26,30,29,26,30,29,26,30,26,30,26,0,0,0,41,45,37,41,45,37,41,37,0,41,41,41,37,45,37,41,45,37,41,41,45,45,37,41,37,45,37,45,37,41,45,37,41,37,41,41,41,0,41,45,37,41,45,37,41,45,37,41,45,0,0,37,45,37,45,41,45,37,41,45,37,41,45,37,41,45,37,41,45,45,59,58,59,0,60,59,61,61,0,58,60,58,58,59,60,59,59,0,0,58,58,59,58,58,58,59,58,58,59,59,61,61,0,61,61,58,58,59,59,59,58,58,59,58,60,60,58,59,58,59,58,59,59,59,58,58,36,59,60,58,59,60,58,36,61,59,60,58,36,61,59,60,36,36,36,36,58,36,59,60,58,36,59,60,58,58,36,59,59,60,60,36,58,36,61,59,60,58,36,61,59,60,58,36,59,60,58,36,61,59,60,58,36,61,59,60,58,58,58,36,36,36,59,59,59,60,60,60,36,58,36,59,60,58,36,61,59,60,58,61,59,60,36,58,36,59,60,58,36,61,59,60,58,36,61,59,60,36,58,36,59,60,58,36,59,60,58,36,61,59,60,58,36,61,59,60,58,36,61,59,60,58,36,61,59,60,36,36,36,36,0,0,77,77,0,0,0,0,0,0,75,76,77,0,0,76,75,73,74,75,76,77,66,66,66,72,71,66,73,74,75,76,77,72,71,66,73,74,75,76,77,0,73,73,74,75,76,77,73,74,75,76,77,73,74,75,75,76,77,73,74,0,74,73,74,75,72,71,66,73,74,75,76,77,72,71,66,73,74,75,76,77,73,74,75,76,77,72,71,66,73,74,75,76,77,73,74,74,73,74,75,76,77,73,73,73,74,74,74,75,75,75,76,76,76,77,77,77,66,73,74,75,76,77,72,71,66,73,74,75,76,76,77,73,73,73,74,75,76,77,73,0,73,72,71,66,73,74,75,76,77,72,71,66,73,74,75,76,77,73,73,73,74,73,73,66,76,76,76,72,71,74,73,73,73,74,73,73,73,73,73,0,73,74,73,74,75,76,77,73,73,73,74,75,76,77,74,72,71,66,73,74,75,76,77,72,71,66,73,74,75,76,77,73,74,72,71,66,73,74,75,76,77,73,72,71,66,73,74,75,76,77,73,73,74,74,73,74,74,73,73,73,73,74,73,73,74,73,73,73,74,73,73,73,73,73,73,74,73,73,74,74,83,0,83,0,83,83,0,83,83,83,83,83,83,83,83,83,83,83,83,83,0,83,83,174,175,176,83,174,175,176,83,174,175,176,83,174,175,176,83,174,175,176,83,83,174,175,176,83,174,175,176,83,0,174,175,176,83,83,174,175,176,83,174,175,176,83,174,175,176,83,174,175,176,83,177,177,177,0,81,81,81,81,81,81,81,81,81,81,0,81,81,81,81,0,0,81,81,81,81,81,81,81,81,81,91,0,0,0,91,91,91,0,0,89,90,91,89,87,87,88,89,90,91,87,88,89,90,91,89,90,91,89,90,91,89,90,91,91,90,90,89,90,91,87,88,89,90,91,87,88,89,90,91,89,90,91,87,88,89,90,91,89,90,91,89,89,89,90,90,90,91,91,91,87,88,90,90,89,90,91,87,88,89,90,91,89,90,91,87,89,87,89,87,88,89,90,91,87,88,89,90,91,90,89,87,87,90,90,90,90,89,90,91,89,90,89,90,91,87,88,89,90,91,87,88,89,90,91,87,88,89,90,91,87,88,89,90,91,87,87,87,87,87,87,87,87,87,87,87,88,0,0,0,94,94,94,94,94,94,0,94,0,94,94,94,94,94,94,94,94,94,0,0,0,0,0,0,0,0,0,0,0,103,103,100,101,102,103,95,96,96,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,100,101,102,103,100,101,102,103,100,101,102,102,103,103,102,104,104,107,101,102,103,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,100,102,103,108,104,95,109,107,96,97,100,101,102,103,100,102,103,102,102,102,103,103,103,108,95,109,96,97,108,100,102,103,108,104,95,109,107,96,97,100,101,102,103,104,100,102,103,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,102,100,108,104,108,95,109,107,96,96,108,95,100,102,103,108,95,100,101,102,103,102,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,108,95,109,96,109,107,96,107,108,108,108,95,101,108,95,101,108,95,101,101,97,102,0,116,0,116,0,0,0,112,116,113,115,114,112,116,113,115,114,112,112,112,112,112,112,116,113,115,114,112,116,113,115,114,112,112,116,113,115,114,112,112,112,112,112,113,114,112,116,113,115,114,112,112,114,116,113,115,114,112,116,113,115,114,112,112,113,115,114,112,114,112,116,113,115,114,112,116,113,115,114,112,116,113,115,114,112,116,113,115,114,112,114,114,113,114,114,114,114,115,86,86,0,86,0,86,86,86,86,86,86,0,86,86,86,86,86,68,68,86,86,86,86,0,0,0,0,119,119,119,119,119,119,119,119,119,123,119,123,119,119,119,119,119,119,123,119,123,119,123,119,123,119,119,119,119,123,119,123,119,119,119,123,119,119,123,123,119,123,119,119,119,119,119,123,123,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,123,119,123,119,119,123,119,119,119,119,119,123,119,123,123,123,123,123,123,123,123,123,123,123,119,119,119,0,0,0,0,0,0,133,136,133,136,133,133,133,133,133,133,133,136,133,136,133,0,136,136,133,136,136,133,136,136,133,136,133,136,133,133,133,133,136,136,136,133,133,133,133,133,136,133,133,136,133,136,133,133,136,133,146,0,146,146,0,0,0,0,146,145,146,142,144,143,142,144,145,146,143,142,144,145,146,142,144,145,146,145,146,145,145,146,146,146,143,142,144,145,146,143,142,144,145,146,145,146,143,142,144,145,146,145,146,145,145,145,146,146,146,142,144,143,145,146,143,142,144,145,146,144,142,144,145,146,143,142,144,145,146,143,142,144,145,146,143,143,143,145,0,143,142,143,142,144,145,142,144,143,142,144,145,146,142,142,144,145,146,143,142,144,145,146,143,142,144,145,146,143,142,144,145,146,142,144,145,143,142,144,145,146,142,142,144,142,144,142,144,142,144,142,144,142,144,0,151,0,151,0,151,151,0,0,0,0,151,0,151,151,0,150,151,152,153,154,155,148,149,148,150,151,152,153,154,155,149,148,150,151,152,153,154,155,150,151,152,153,154,155,150,151,152,153,154,155,150,150,151,151,152,152,153,153,154,154,155,155,150,150,150,151,155,149,148,150,151,152,153,154,155,149,148,150,151,152,153,154,155,150,151,152,153,154,155,155,149,148,150,151,152,153,154,155,155,149,150,151,152,153,154,155,150,150,150,151,151,151,152,152,152,153,153,153,154,154,154,155,155,155,149,148,150,151,152,153,154,155,149,148,150,151,152,153,154,155,155,149,150,151,152,153,154,155,149,148,150,151,152,153,154,155,149,148,150,151,152,153,154,155,155,155,150,155,155,148,155,150,150,151,152,153,154,155,148,150,150,151,152,153,154,155,150,149,148,150,151,152,153,154,155,149,148,150,151,152,153,154,155,152,153,154,149,148,150,151,152,153,154,155,149,148,150,151,152,153,154,155,148,148,148,148,149,150,149,0,0,0,0,0,0,0,0,0,0,164,164,164,164,164,164,164,164,0,164,164,166,164,164,164,164,0,164,164,0,0,0,0,0,169,170,0,67,169,170,169,170,169,170,169,170,169,170,170,169,170,169,170,169,170,169,170,169,67,169,169,170,169,170,169,169,169,169,169,170,169,170,169,170,169,170,169,170,170,169,170,168,170,169,169,169,169,170,169,170,169,170,169,170,169,170,170,0,0,0,11,14,11,14,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":"``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{j}}}j}{{{b{l}}}l}{{{b{c}}{b{he}}}f{}{}}0{{{b{c}}}f{}}0``{{}l}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{j}}}Ab}{c{{A`{l}}}Ab}{nf}0`{{{b{j}}{b{j}}}Ad}{{{b{l}}{b{l}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000`{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{{{b{j}}{b{hAn}}}B`}{{{b{l}}{b{hAn}}}B`}{cc{}}0{{{b{j}}{b{hc}}}fBb}{{{b{l}}{b{hc}}}fBb}``{{}n}0{ce{}{}}0`````{cAfBd}{cAlBf}{{{b{hBh}}}{{Aj{{Bl{Bj}}}}}}````````{{{b{j}}c}A`Bn}{{{b{l}}c}A`Bn}{{{b{c}}}e{}{}}0{c{{A`{e}}}{}{}}000`{{{b{c}}}C`{}}0`88{{{b{Cb}}Ahc}{{Aj{f}}}Bf}````````{{{b{c}}d}f{}}{{{b{h{Cd{c}}}}}{{Aj{Cf}}}{BdCh}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00{{{b{Cj}}}Cj}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}0{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{nf}00{{{b{Cj}}{b{Cj}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00{{{Cd{c}}}{{Aj{Ah}}}{BdCh}}{{{b{h{Cl{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{Cj}}{b{hAn}}}{{A`{fCn}}}}{cc{}}00{{{b{Cj}}{b{hc}}}fBb}{{}n}00{ce{}{}}00{c{{Cd{c}}}{BdCh}}{c{{Cl{c}}}Bf}{{{b{h{Cd{c}}}}}{{Aj{D`}}}{BdCh}}{{{Cd{c}}Ad}{{Cd{c}}}{BdCh}}{{{b{c}}}e{}{}}{c{{A`{e}}}{}{}}00000{{{b{c}}}C`{}}00777{{{Cd{c}}{Bl{{Dd{Db}}}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}{Bl{Cj}}}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{n}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}Db}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{{Dd{n}}}}}{{Cd{c}}}{BdCh}}```{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00`{{{b{Df}}{Bl{{b{Dh}}}}Ad}{{Aj{{E`{Dj{Dn{Dl}}}}}}}}{{{b{Eb}}}Eb}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{}Dj}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{{{b{Eb}}{b{Ed}}{b{hc}}}{{Aj{f}}}{EfEh}}{{{b{hEj}}}f}{nf}00{{{b{Dj}}{b{Dj}}}Ad}{{{b{hc}}e}{{A`{{b{hg}}El}}}{}En{}}`{{{b{hEj}}}{{F`{f}}}}{{{b{Dj}}{b{hAn}}}B`}{{{b{Eb}}{b{hAn}}}B`}{cc{}}00{{{b{Fb}}Ad}{{Aj{Dj}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{Ff{n}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Fd}}}}}}{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{{Dd{Db}}}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Fj}}}}{{}n}00{ce{}{}}00{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{Ej}}}}{{{b{Df}}Ad}{{Aj{Dj}}}}{{{Dn{Dl}}}Eb}{{{Dn{Dl}}Ed}{{Aj{Ej}}}}{{{b{Df}}}{{Aj{Ed}}}}``{{{b{hc}}e}{{A`{{b{hg}}El}}}{}En{}}`{{{b{hc}}i}{{A`{gEl}}}{}{}{}{{Fn{{b{he}}}{{Fl{g}}}}}}{{{b{c}}}e{}{}}{c{{A`{e}}}{}{}}00000{{{b{c}}}C`{}}00:::{{{b{hEj}}{b{{Fh{G`}}}}}{{F`{n}}}}{{{b{hc}}e}{{A`{nEl}}}{}Gb}```````````````````````````````````````````````````````{{{b{c}}d}f{}}000{{{b{Gd}}}{{b{Df}}}}{{{b{Gf}}}{{b{Df}}}}{{{b{Gh}}}{{b{Df}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Dh}}{b{Df}}}{{Aj{{`{Dl}}}}}}000{{{b{Gd}}}Gd}{{{b{Dh}}}Dh}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{c}}{b{he}}}f{}{}}000{{{b{c}}}f{}}000000{{}Dh}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Gd}}}Ab}{c{{A`{Dh}}}Ab}{c{{A`{Gf}}}Ab}{c{{A`{Gh}}}Ab}{nf}0000{{{b{Gd}}{b{Gd}}}Ad}{{{b{Dh}}{b{Dh}}}Ad}{{{b{Gj}}{b{Gj}}}Ad}{{{b{Gf}}{b{Gf}}}Ad}{{{b{Gh}}{b{Gh}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000000000`{{{b{Gd}}{b{hAn}}}{{A`{fCn}}}}{{{b{Dh}}{b{hAn}}}B`}{{{b{Gf}}{b{hAn}}}{{A`{fCn}}}}{{{b{Gh}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0000{{{b{Df}}}{{A`{Gd}}}}{{{b{Df}}}{{A`{Gjc}}}{}}{{{b{Df}}}{{A`{Gf}}}}{{{b{Df}}}{{A`{Gh}}}}{{{b{Df}}g}{{Aj{Dh}}}{{Gl{Df}}}{{Gn{Db}}}{{Hb{}{{H`{{E`{ce}}}}}}}}{{{b{Gd}}{b{hc}}}fBb}{{{b{Dh}}{b{hc}}}fBb}{{{b{Gf}}{b{hc}}}fBb}{{{b{Gh}}{b{hc}}}fBb}{{}n}0000{ce{}{}}0000`{{{b{Gd}}c}A`Bn}{{{b{Dh}}c}A`Bn}{{{b{Gf}}c}A`Bn}{{{b{Gh}}c}A`Bn}{{{b{c}}}e{}{}}000{c{{A`{e}}}{}{}}000000000{{{b{c}}}C`{}}000077777{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Gdc}}}}}}}}{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Gfc}}}}}}}}{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Ghc}}}}}}}}{{Dhn}Dh}`````````````````{{{b{c}}d}f{}}0000{{{Hd{c}}{Bl{{Dn{Hf}}}}}{{Hd{c}}}Hh}{{{Hd{{Hj{Hh}}}}{Bl{Hl}}}{{Aj{Hn}}}}{{{b{h{Hd{c}}}}}{{Aj{I`}}}Hh}{{{b{c}}}{{b{e}}}{}{}}0000000{{{b{hc}}}{{b{he}}}{}{}}0000000``{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{If}}}If}{{{b{Ih}}}Ih}{{{b{Ij}}}Ij}{{{b{c}}{b{he}}}f{}{}}0000{{{b{c}}}f{}}00000``{{{b{Il}}G`{Bl{G`}}{Bl{{b{Ih}}}}G`Ad}{{Aj{n}}}}`{{}Ib}{{}Id}{{}If}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{Ib}}}Ab}{c{{A`{Id}}}Ab}{c{{A`{If}}}Ab}{c{{A`{Ih}}}Ab}{c{{A`{Ij}}}Ab}{nf}0000000```{{{b{Ib}}{b{Ib}}}Ad}{{{b{Id}}{b{Id}}}Ad}{{{b{If}}{b{If}}}Ad}{{{b{Ih}}{b{Ih}}}Ad}{{{b{Ij}}{b{Ij}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000000000000{{{Hd{c}}}{{Aj{Ah}}}Hh}{{{b{Ib}}{b{hAn}}}B`}{{{b{Id}}{b{hAn}}}B`}{{{b{If}}{b{hAn}}}B`}{{{b{Ih}}{b{hAn}}}B`}{{{b{Ij}}{b{hAn}}}B`}{cc{}}00000{{{b{Df}}}Ih}11{{{b{Ib}}}{{Dn{Id}}}}`{{{b{Ib}}{b{hc}}}fBb}{{{b{Id}}{b{hc}}}fBb}{{{b{If}}{b{hc}}}fBb}{{{b{Ih}}{b{hc}}}fBb}{{{b{Ij}}{b{hc}}}fBb}```{{}n}0000000{ce{}{}}0000000{{Ibc}{{Hd{c}}}Hh}`{{Ibc}Ib{{In{Id}{{Fl{Id}}}}}}```{c{{Hd{c}}}Hh};{DbIh}{G`Ih}{{{b{hI`}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{hHn}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}`````````````{{{b{Ib}}c}A`Bn}{{{b{Id}}c}A`Bn}{{{b{If}}c}A`Bn}{{{b{Ih}}c}A`Bn}{{{b{Ij}}c}A`Bn}``{{{b{c}}}e{}{}}0000`{c{{A`{e}}}{}{}}000000000000000{{Ib{Bl{Il}}}{{Aj{{Hd{J`}}}}}}`{{{b{c}}}C`{}}0000000{{{b{hIb}}{b{Jb}}}f}{ce{}{}}0000000{{Ibn}Ib}{{Ib{Bl{{Dn{{Fh{Db}}}}}}}Ib}{{Id{Bl{c}}}Id{{Gn{Ih}}}}{{IdAd}Id}{{Ib{Bl{{Dn{{Dd{Jd}}}}}}}Ib}{{IdIf}Id}{{IdG`}Id}{{IbAd}Ib}0{{Ib{Bl{n}}}Ib}1500{{Id{Bl{Ij}}}Id}{{IbId}Ib}{{Ib{Bl{c}}}Ib{{Gn{Il}}}}{{Ib{Bl{{Dn{{Dd{n}}}}}}}Ib}{{Id{Bl{G`}}}Id}66{{Ib{Bl{j}}}Ib}>{{Ib{Bl{Hl}}}Ib}09??<<`````````````````````{{{b{hJf}}{b{{Fh{G`}}}}AdAdAd}{{Aj{f}}}}{{{b{hJf}}Ad}f}{{{b{c}}}{{b{e}}}{}{}}000{{{b{hc}}}{{b{he}}}{}{}}000{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{Jf}}}Jd}{cc{}}000{{}n}000{{{b{{Fh{n}}}}n{b{D`}}{Bl{G`}}IfAd}{{Aj{{Dd{Jf}}}}}}{ce{}{}}000{Jf{{Aj{Jh}}}}{c{{A`{e}}}{}{}}0000000{{{b{c}}}C`{}}0003333````{{{b{c}}d}f{}}=<{{{b{Jb}}}Jb}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{}Jb}?>={{{b{{Jj{Jd}}}}}Jd}{{{b{Jb}}{b{hAn}}}B`}={{{b{Jb}}}n}{{{b{Jb}}}Hl}{{{b{Df}}AdAd}Jd}{{{b{Jl}}G`{Bl{n}}Ad{Bl{{b{D`}}}}nn{Bl{{b{Ih}}}}{Bl{G`}}G`{Bl{{b{Ij}}}}AdAd{b{h{Bl{n}}}}Ad}{{Aj{{E`{D`nn}}}}}}{{}n}?{{{b{c}}}e{}{}}>{{{b{Jl}}{b{Ib}}}{{Aj{Jb}}}}?>{ce{}{}}{{JbHl}Jb}`````````???`{{{Jn{c}}{b{D`}}}{{Aj{{K`{c}}}}}Bf}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Kb}}}Kb}{{{b{Kd}}}Kd}{{{b{Kf}}}Kf}{{{b{c}}{b{he}}}f{}{}}00{{{b{c}}}f{}}000``{{}Kb}{{}Kd}{{}Kf}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Kb}}}Ab}{c{{A`{Kd}}}Ab}{c{{A`{Kf}}}Ab}{nf}0000{{{b{Kb}}{b{Kb}}}Ad}{{{b{Kd}}{b{Kd}}}Ad}{{{b{Kf}}{b{Kf}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000000{{{b{h{Jn{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{K`{c}}}}}{{Aj{f}}}Bf}``{{{b{Kb}}{b{hAn}}}B`}{{{b{Kd}}{b{hAn}}}B`}{{{b{Kf}}{b{hAn}}}B`}{cc{}}0000{{{b{Kb}}{b{hc}}}fBb}{{{b{Kd}}{b{hc}}}fBb}{{{b{Kf}}{b{hc}}}fBb}{{{Jn{c}}Ad}{{Jn{c}}}Bf}`0`{{}n}0000{ce{}{}}0000``{{{Jn{c}}n}{{Jn{c}}}Bf}{c{{Jn{c}}}Bf}````{{{b{Kb}}c}A`Bn}{{{b{Kd}}c}A`Bn}{{{b{Kf}}c}A`Bn}``{{{b{c}}}e{}{}}00{c{{A`{e}}}{}{}}000000000{{{b{c}}}C`{}}000088888{{{Jn{c}}Kh}{{Jn{c}}}Bf}{{{Jn{c}}{Bl{Db}}}{{Jn{c}}}Bf}0{{{Jn{c}}{Bl{n}}}{{Jn{c}}}Bf}{{{Jn{c}}{Bl{Ad}}}{{Jn{c}}}Bf}{{{Jn{c}}Db}{{Jn{c}}}Bf}0{{{Jn{c}}G`}{{Jn{c}}}Bf}{{{Jn{c}}Kf}{{Jn{c}}}Bf}15{{{b{h{K`{c}}}}{b{Ah}}}{{Aj{f}}}Bf}```{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}Kj}{{}n}{{{b{{Fh{{Dn{Df}}}}}}{Bl{{b{Dh}}}}}{{Aj{{Dd{{Dn{Kl}}}}}}}}{ce{}{}}{c{{A`{e}}}{}{}}0{{{b{Kl}}}{{Aj{J`}}}}0{{{b{c}}}C`{}}{{{b{Kl}}Kj}f}{{{b{Kl}}}{{b{{Dn{Df}}}}}}5`````````````{{{b{c}}d}f{}}000{{{b{h{Kn{c}}}}}{{Aj{Cf}}}Bd}{{{L`{c}}{b{D`}}}{{Aj{{Lb{c}}}}}Bf}{{{L`{c}}{b{D`}}}{{Aj{{`{c}}}}}{LdEhLf}}{{{b{c}}}{{b{e}}}{}{}}0000000000{{{b{hc}}}{{b{he}}}{}{}}0000000000{{{b{Lh}}}Lh}{{{b{Lj}}}Lj}{{{b{Ll}}}Ll}{{{b{Ln}}}Ln}{{{b{c}}{b{he}}}f{}{}}000{{{b{c}}}f{}}00000`{{{b{M`}}{Bl{{b{Mb}}}}}{{Aj{Md}}}}{{{b{M`}}{Bl{{b{Mb}}}}LjAd}{{Aj{Ah}}}}{{}Mf}{{}Lj}{{}Ll}{{}Ln}{n{{b{c}}}{}}0000000000{n{{b{hc}}}{}}0000000000{c{{A`{Lh}}}Ab}{c{{A`{Ll}}}Ab}{c{{A`{Ln}}}Ab}{nf}0000000000{{{b{Lh}}{b{Lh}}}Ad}{{{b{Ll}}{b{Ll}}}Ad}{{{b{Ln}}{b{Ln}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000{{{Mh{c}}}{{Aj{Ah}}}Hh}{{{Kn{c}}}{{Aj{Ah}}}Bd}{{{b{h{Mj{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{L`{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Lb{c}}}}}{{Aj{f}}}Bf}{{{Mh{c}}{Bl{{Dn{Hf}}}}Ad}{{Aj{Ah}}}Hh}{{{b{Lh}}{b{hAn}}}B`}{{{b{Ll}}{b{hAn}}}B`}{{{b{Ln}}{b{hAn}}}B`}{cc{}}0000000000{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{M`}}}}{{{b{Lh}}{b{hc}}}fBb}{{{b{Ll}}{b{hc}}}fBb}{{{b{Ln}}{b{hc}}}fBb}{{}n}0000000000{ce{}{}}0000000000``{{{Mh{c}}{Bl{Il}}}{{Mh{c}}}Hh}{{{b{M`}}}{{Aj{Mb}}}}{c{{Mh{c}}}Hh}{c{{Kn{c}}}Bd}{c{{Mj{c}}}Bf}{{}Mf}{c{{L`{c}}}Bf}{c{{L`{c}}}{LdEhLf}}{{{b{h{Mh{c}}}}}{{Aj{Ml}}}Hh}{{{b{h{Kn{c}}}}}{{Aj{D`}}}Bd}{{{b{Lh}}c}A`Bn}{{{b{Ll}}c}A`Bn}{{{b{Ln}}c}A`Bn}{{{Mh{c}}Ad}{{Mh{c}}}Hh}{{{Kn{c}}Ad}{{Kn{c}}}Bd}{{{b{c}}}e{}{}}000{{{b{Ll}}c}{{L`{c}}}Bf}{c{{A`{e}}}{}{}}000000000000000000000{{{b{c}}}C`{}}0000000000{ce{}{}}0000000000{{{Mh{c}}{Bl{{Dd{Db}}}}}{{Mh{c}}}Hh}{{{Kn{c}}{Bl{{Dd{Db}}}}}{{Kn{c}}}Bd}{{{Mj{c}}Mn}{{Mj{c}}}{}}{{{L`{c}}Mn}{{L`{c}}}Bf}{{{Mj{c}}{Bl{Ln}}}{{Mj{c}}}{}}{{Mf{Bl{Ln}}}Mf}{{{L`{c}}{Bl{Ln}}}{{L`{c}}}Bf}{{MfIl}Mf}{{{Mh{c}}{Bl{{Dd{Jh}}}}}{{Mh{c}}}Hh}{{{Mh{c}}{Bl{{E`{{Dn{Df}}{Dn{Df}}}}}}}{{Mh{c}}}Hh}{{{Mh{c}}{Bl{n}}}{{Mh{c}}}Hh}{{{Kn{c}}{Bl{n}}}{{Kn{c}}}Bd}{{Ljc}Lj{{Gn{{Bl{{Dn{Hf}}}}}}}}{{{Mh{c}}{Bl{{Dd{n}}}}}{{Mh{c}}}Hh}{{{Kn{c}}{Bl{{Dd{n}}}}}{{Kn{c}}}Bd}{{Lj{Bl{{Dn{{Fh{Db}}}}}}}Lj}{{{Mh{c}}{Bl{j}}}{{Mh{c}}}Hh}{{{Kn{c}}{Bl{j}}}{{Kn{c}}}Bd}{{Ljc}Lj{{Gn{{Bl{j}}}}}}{{Ljc}Lj{{Gn{{Bl{n}}}}}}{{{b{h{Lb{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{Ll}}Ahc}{{Aj{f}}}Bf}```````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{N`}}}N`}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}0{{}N`}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{N`}}}Ab}{nf}0000{{{b{N`}}{b{N`}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00{{{b{h{Nb{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{Nd{c}}}{{Aj{Ah}}}Hh}{{{b{N`}}{b{hAn}}}B`}{cc{}}0000{{{b{N`}}{b{hc}}}fBb}{{{Nd{c}}{Bl{Kh}}}{{Nd{c}}}Hh}{{}n}0000{ce{}{}}0000`{c{{Nb{c}}}Bf}{c{{Nf{c}}}Bf}{c{{Nd{c}}}Hh}{{{b{N`}}c}A`Bn}{{{Nd{c}}Ad}{{Nd{c}}}Hh}{{{b{c}}}e{}{}}{c{{A`{e}}}{}{}}000000000{{{b{c}}}C`{}}000088888{{{Nd{c}}Kh}{{Nd{c}}}Hh}4{{{Nb{c}}Nh}{{Nb{c}}}Bf}{{{Nd{c}}Nh}{{Nd{c}}}Hh}{{{Nd{c}}{Bl{{Dd{Db}}}}}{{Nd{c}}}Hh}{{{Nd{c}}Hl}{{Nd{c}}}Hh}{{{Nd{c}}{b{D`}}}{{Nd{c}}}Hh}{{{b{h{Nf{c}}}}{b{Ah}}}{{Aj{f}}}Bf}`````{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{n{{b{c}}}{}}{{{b{Jl}}}{{b{{Fh{G`}}}}}}{n{{b{hc}}}{}}{nf}{{{b{J`}}}{{Aj{f}}}}{cc{}}{{{b{hc}}}JlHh}{{}n}{ce{}{}}{JlNj}{{{b{Hh}}}{{Bl{{b{{Fh{G`}}}}}}}}{{{b{Hh}}}{{Bl{{b{J`}}}}}}{c{{A`{e}}}{}{}}0{{{b{c}}}C`{}}5`{{{b{hc}}{Bl{Kh}}}{{Aj{D`}}}Nl}``{{{b{c}}d}f{}}{{{b{Nn}}n}{{E`{NnNn}}}}{Nn{{Dn{O`}}}}{cNn{{Hb{}{{H`{f}}}}}}{cNn{{Hb{}{{H`{{Bl{f}}}}}}}}{{Obc}Nn{{Hb{}{{H`{f}}}}}}{{Obc}Nn{{Hb{}{{H`{{Bl{f}}}}}}}}{{{b{Nn}}}{{b{Od}}}}{{{b{hNn}}}{{b{hOd}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{Nn{{Hj{O`}}}}{{{b{Nn}}n}Ad}{{{b{Nn}}}Nn}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{{Of{c}}}{{Aj{n}}}Hh}{{{b{Nn}}}{{b{Ob}}}}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{nf}0{{{b{Nn}}{b{Nn}}}Ad}{{{b{Nn}}{b{{b{O`}}}}}Ad}{{{b{Nn}}}{{b{{Fh{Oh}}}}}}{{{Of{c}}}{{Aj{Ah}}}Hh}{{{b{Nn}}{b{hAn}}}{{A`{fCn}}}}{cc{}}{OjNn}{OlNn}2{c{{Aj{{Of{J`}}}}}{{Gn{Il}}}}{{nOb}Nn}{{{b{Ob}}}{{b{{Fh{Oh}}}}}}{{{Of{c}}{Bl{Kh}}}{{Of{c}}}Hh}{{}n}0{ce{}{}}0{Nn{{E`{{Dd{Oh}}{Dd{{Hj{O`}}}}{Bl{On}}}}}}{{{b{Nn}}}}{{{b{Nn}}}{{A@f{{Dd{{Hj{A@`}}}}A@bA@d}}}}{{{b{Nn}}}n}{{{Of{c}}Ad}{{Of{c}}}Hh}{c{{Of{c}}}Hh}{{Ob{Dd{{Hj{O`}}}}{Bl{On}}}Nn}{ObNn}{{Obn}Nn}{{{b{Nn}}}Nn}{{{b{hNn}}{Bl{On}}}f}{{{b{hNn}}nn}f}0{{{b{c}}nn}e{}{}}011{{Nnnn}Nn}0{{{b{Nn}}n}{{E`{{Hj{O`}}{Hj{O`}}}}}}0{{{b{hNn}}}{{Bl{On}}}}{{{b{Nn}}}{{Hj{O`}}}}{{{b{c}}}e{}{}}{{{b{Nn}}{b{Nn}}}On}{{{b{Nn}}b}On}10{e{{A`{Nnc}}}{}{{Hb{}{{H`{{A`{{Bl{f}}c}}}}}}}}{e{{A`{Nnc}}}{}{{Hb{}{{H`{{A`{fc}}}}}}}}{{Obe}{{A`{Nnc}}}{}{{Hb{}{{H`{{A`{fc}}}}}}}}{{Obe}{{A`{Nnc}}}{}{{Hb{}{{H`{{A`{{Bl{f}}c}}}}}}}}{c{{A`{e}}}{}{}}000{{Ob{Dd{{Hj{O`}}}}{Bl{On}}}{{A`{NnA@h}}}}{{{b{c}}}C`{}}0{{{b{Nn}}}{{Bl{{b{On}}}}}}0{{{b{Nn}}}{{b{{Fh{{Hj{O`}}}}}}}}{{{b{Nn}}}A@b}{ce{}{}}0{{{Of{c}}{Bl{Kh}}}{{Of{c}}}Hh}{{{Of{c}}Ad}{{Of{c}}}Hh}{{{Of{c}}{Bl{n}}}{{Of{c}}}Hh}0{{{Of{c}}{Bl{e}}}{{Of{c}}}Hh{{Gn{Il}}}}{{{Of{c}}{Bl{{Dn{Hf}}}}}{{Of{c}}}Hh}{{{Of{c}}{Bl{{Dn{{Fh{Db}}}}}}}{{Of{c}}}Hh}4{{{Of{c}}{Bl{{b{hj}}}}}{{Of{c}}}Hh}{{{Of{c}}Hl}{{Of{c}}}Hh}{{{Of{c}}{b{D`}}}{{Of{c}}}Hh}{{Nn{Bl{On}}}Nn}{{{b{Nn}}{Bl{On}}}{{Hj{O`}}}}1``````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{A@j}}}A@j}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{{b{A@j}}n}A@l}``{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{{{b{Oh}}{b{A@n}}}{{A`{AA`A@h}}}}`{nf}0{{{b{AA`}}{b{AA`}}}Ad}{{{b{AA`}}{b{hAn}}}{{A`{fCn}}}}{{{b{A@j}}{b{hAn}}}{{A`{fCn}}}}{cc{}}{AAbAA`}1{{}n}0{ce{}{}}0{A@jAAd}{{{b{A@j}}}{{b{{Bl{{Dd{AAf}}}}}}}}``````{{{b{A@j}}}{{b{AAh}}}}`{{{b{c}}}e{}{}}{c{{A`{e}}}{}{}}0{AAd{{A`{A@jAAj}}}}11{{{b{c}}}C`{}}0`77`````````{{{b{c}}d}f{}}0{{{AAl{c}}n}{{Aj{AAn}}}Hh}{{AB`n}{{Aj{AAn}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{AAl{c}}{b{Cf}}}{{Aj{{AAl{c}}}}}Hh}{{AB`{b{Cf}}}{{Aj{AB`}}}}{{{b{ABb}}}ABb}{{{b{ABd}}}ABd}{{{b{c}}{b{he}}}f{}{}}0{{{b{c}}}f{}}000{{}ABd}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{ABb}}}Ab}{c{{A`{ABd}}}Ab}{nf}0000{{{b{ABb}}{b{ABb}}}Ad}{{{b{ABd}}{b{ABd}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000{{{AAl{c}}}{{Aj{Ah}}}Hh}{AB`{{Aj{Ah}}}}{{{b{AAn}}n}Ad}{{{b{ABb}}{b{hAn}}}B`}{{{b{ABd}}{b{hAn}}}B`}{cc{}}0000{{{b{Df}}{Bl{{b{Dh}}}}{Bl{ABf}}}{{Aj{AB`}}}}{{{b{h{AAl{c}}}}}{{Aj{{b{ABf}}}}}Hh}{{{b{hAB`}}}{{Aj{{b{ABf}}}}}}{{{b{ABb}}{b{hc}}}fBb}{{{b{ABd}}{b{hc}}}fBb}{{}n}0000{ce{}{}}0000{{{b{AAn}}}Ad}`0`{{{Bl{{b{{Fh{n}}}}}}{b{Cf}}{Bl{{b{{Fh{Jh}}}}}}{Bl{{b{j}}}}}Ah}`{c{{AAl{c}}}Hh}{{{b{hAAn}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{h{AAl{c}}}}}{{Aj{n}}}Hh}{{{b{hAB`}}}{{Aj{n}}}}`{{{AAl{c}}ABd}{{AAl{c}}}Hh}{{AB`ABd}AB`}{{{b{AAn}}}{{b{Ml}}}}{{{b{h{AAl{c}}}}}{{Aj{Ml}}}Hh}{{{b{hAB`}}}{{Aj{Ml}}}}{{{b{ABb}}c}A`Bn}{{{b{ABd}}c}A`Bn}{{{AAl{c}}Ad}{{AAl{c}}}Hh}0{{AB`Ad}AB`}{{{b{c}}}e{}{}}0{c{{A`{e}}}{}{}}000000000{{{b{c}}}C`{}}000043`{ce{}{}}0000{{{AAl{c}}{Bl{{Dd{Db}}}}}{{AAl{c}}}Hh}{{{AAl{c}}{Bl{{Dd{Jh}}}}}{{AAl{c}}}Hh}{{AB`{Bl{{Dd{Jh}}}}}AB`}{{{AAl{c}}{Bl{{E`{{Dn{Df}}{Dn{Df}}}}}}}{{AAl{c}}}Hh}{{AB`{Bl{{E`{{Dn{Df}}{Dn{Df}}}}}}}AB`}{{{AAl{c}}{Bl{n}}}{{AAl{c}}}Hh}{{AB`{Bl{n}}}AB`}{{{AAl{c}}{Bl{{Dn{Hf}}}}}{{AAl{c}}}Hh}{{AB`{Bl{{Dn{Hf}}}}}AB`}{{{AAl{c}}{Bl{{Dd{n}}}}}{{AAl{c}}}Hh}{{AB`{Bl{{Dd{n}}}}}AB`}{{{AAl{c}}{Bl{j}}}{{AAl{c}}}Hh}{{AB`{Bl{j}}}AB`}````````````````{{{b{c}}d}f{}}00000{{{ABh{c}}{b{D`}}}{{Aj{{ABj{c}}}}}Bf}{{{b{c}}}{{b{e}}}{}{}}0000000{{{b{hc}}}{{b{he}}}{}{}}0000000{{{b{ABl}}}ABl}{{{b{ABn}}}ABn}{{{b{AC`}}}AC`}{{{b{ACb}}}ACb}{{{b{ACd}}}ACd}{{{b{ACf}}}ACf}{{{b{c}}{b{he}}}f{}{}}00000{{{b{c}}}f{}}00000000000``{{}ABl}{{}ABn}{{}ACf}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{ABl}}}Ab}{c{{A`{ABn}}}Ab}{c{{A`{AC`}}}Ab}{c{{A`{ACb}}}Ab}{c{{A`{ACd}}}Ab}{c{{A`{ACf}}}Ab}`{nf}00000009{{{b{{ABj{c}}}}{b{Ah}}}{{`{{ACj{}{{H`{{Aj{{ACh{A@h}}}}}}}}}}}Bf}{{{b{ABl}}{b{ABl}}}Ad}{{{b{ABn}}{b{ABn}}}Ad}{{{b{AC`}}{b{AC`}}}Ad}{{{b{ACb}}{b{ACb}}}Ad}{{{b{ACd}}{b{ACd}}}Ad}{{{b{ACf}}{b{ACf}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000000000000000{{{b{{ABj{c}}}}}{{Aj{Kj}}}Bf}{{{ABh{c}}{b{hAh}}}{{Aj{Kj}}}Bf}{{{b{ABl}}{b{hAn}}}B`}{{{b{ABn}}{b{hAn}}}B`}{{{b{AC`}}{b{hAn}}}B`}{{{b{ACb}}{b{hAn}}}B`}{{{b{ACd}}{b{hAn}}}B`}{{{b{ACf}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0000000{{}ACf}{{{b{{ABj{c}}}}}{{b{{ACn{{ACl{c}}}}}}}Bf}{{{b{ABl}}{b{hc}}}fBb}{{{b{ABn}}{b{hc}}}fBb}{{{b{AC`}}{b{hc}}}fBb}{{{b{ACb}}{b{hc}}}fBb}{{{b{ACd}}{b{hc}}}fBb}{{{b{ACf}}{b{hc}}}fBb}{{}n}0000000{ce{}{}}0000000{{{b{ACf}}}Ad}0```{c{{ABh{c}}}{BfBf}}``{{{b{ABl}}c}A`Bn}{{{b{ABn}}c}A`Bn}{{{b{AC`}}c}A`Bn}{{{b{ACb}}c}A`Bn}{{{b{ACd}}c}A`Bn}{{{b{ACf}}c}A`Bn}{{{ABh{c}}Ad}{{ABh{c}}}Bf}`{{{b{c}}}e{}{}}00000{{{b{ABl}}c}{{ABh{c}}}Bf}{c{{A`{e}}}{}{}}000000000000000{G`{{Aj{AC`}}}}{AD`{{Aj{ACb}}}}{ADb{{Aj{ACd}}}}{{{b{c}}}C`{}}0000000{ce{}{}}0000000{{{ABh{c}}ABn}{{ABh{c}}}Bf}{{{ABh{c}}{Bl{n}}}{{ABh{c}}}Bf}0{{{ABh{c}}ACf}{{ABh{c}}}Bf}{{{b{h{ABj{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{ABl}}Ahc}{{Aj{f}}}Bf}{{{b{{ABj{c}}}}{Dd{{ACh{A@h}}}}}{{Aj{f}}}Bf}{{{b{hAh}}{b{ADd}}{b{{Fh{c}}}}{b{e}}n}{{Aj{f}}}{{Gl{Df}}}{CbLfADf}}`{{{b{{Fh{Il}}}}Ad{Bl{{b{Dh}}}}}{{Aj{{Dn{{Fh{Il}}}}}}}}{{{b{{Fh{Il}}}}Ad{Bl{{b{Dh}}}}Ad}{{Aj{{E`{{Dn{{Fh{Il}}}}n}}}}}}{{{b{{Fh{c}}}}{b{{Fh{c}}}}}Ad{{Gl{ADd}}}}{{{b{{Fh{G`}}}}}{{Bl{n}}}}{cAd{{Gl{ADd}}}}{{{b{ADd}}}Il}``{{{b{ADh}}c}{}ADj}{{{b{ADh}}c}{}{ADjLf}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}{{b{ADh}}}}{{}n}{ce{}{}}{{{b{ADl}}}Kj}{{{b{ADh}}c}ADn{ADjLf}}{{{b{ADh}}e}{{ADn{c}}}Lf{{Fn{}{{Fl{c}}}}Lf}}{c{{A`{e}}}{}{}}0{{AD`e}{}ADj{{Fn{}{{Fl{c}}}}}}{{{b{c}}}C`{}}61````{{{b{c}}d}f{}}0{{{b{hAh}}{Bl{{b{Hf}}}}Ad}{{Aj{f}}}}{{{b{Hf}}}{{Bl{{b{AE`}}}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{AEb}}}AEb}{{{b{AEd}}}AEd}{{{b{c}}{b{he}}}f{}{}}0{{{b{c}}}f{}}0{{{b{AEd}}}{{b{{Fh{AEb}}}}}}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{AEb}}}Ab}{c{{A`{AEd}}}Ab}{nf}0{{{b{AEb}}}{{b{Jd}}}}{{{b{Hf}}{b{Ah}}}{{Aj{Jh}}}}{{{b{AEb}}}{{b{AEf}}}}{{{b{AEb}}{b{hAn}}}B`}{{{b{AEd}}{b{hAn}}}B`}{cc{}}0{JhAEb}{AEhAEb}{{{b{AEb}}}{{Bl{{b{Jh}}}}}}00{{{b{AEd}}{b{Df}}}{{Aj{{b{AEb}}}}}}{{}n}0{ce{}{}}0{{AEh{Bl{Jh}}{Bl{Jh}}{Bl{Jh}}}AEb}{{Hl{Dd{AEb}}{Bl{n}}}AEd}{{{b{AEb}}}{{Bl{n}}}}{{{b{AEd}}}{{Bl{n}}}}{{{b{AEd}}}{{b{Hl}}}}{{{b{AEb}}c}A`Bn}{{{b{AEd}}c}A`Bn}{{{b{AE`}}{b{AEd}}}{{Aj{Ad}}}}{{{b{hAEd}}{b{{Fh{n}}}}}f}<<{{{b{AEb}}}{{Bl{Jh}}}}{{{b{c}}}e{}{}}0{c{{A`{e}}}{}{}}000{{{b{c}}}C`{}}0=={{{b{hAEd}}Hl}f}```{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{cAfBd}{cAlBf}{{AfAd}Af}00```````{{{b{hc}}}{{Aj{Jl}}}{BdHhAEj}}{{cn}{{Dd{{E`{nn}}}}}{{ACj{}{{H`{n}}}}}}`{{{Bl{{b{{Fh{Db}}}}}}{b{D`}}{Bl{{b{{Fh{Jh}}}}}}Ad}{{Bl{{Dd{n}}}}}}{{{b{{Fh{G`}}}}{b{h{Dd{G`}}}}}{{Aj{{b{{Fh{G`}}}}}}}}{{{b{hD`}}{b{D`}}}{{Aj{f}}}}{{{b{{Fh{G`}}}}}Ad}``````","D":"CMb","p":[[1,"reference"],[5,"Private",1975],[1,"unit"],[0,"mut"],[5,"RowIndex",0,1976],[5,"HiveOptions",0,1976],[1,"usize"],[6,"Result",1977],[10,"Deserializer",1978],[1,"bool"],[10,"SerReader",1945,1979],[5,"DataFrame",1980],[8,"PolarsResult",1981],[10,"SerWriter",1945,1979],[5,"Formatter",1982],[8,"Result",1982],[10,"Hasher",1983],[10,"Read",1984],[10,"Write",1984],[10,"ArrowReader",0,1979],[8,"RecordBatch",1985],[6,"Option",1986],[10,"Serializer",1987],[5,"TypeId",1988],[10,"WriteDataFrameToFile",0,1979],[5,"AvroReader",86,1989],[5,"ArrowSchema",1990],[10,"Seek",1984],[6,"AvroCompression",86],[5,"AvroWriter",86,1991],[5,"Error",1982],[5,"Schema",1992],[5,"String",1993],[5,"Vec",1994],[1,"str"],[5,"CloudOptions",227],[5,"CloudLocation",154,1995],[10,"ObjectStore",1996],[5,"Arc",1997],[1,"tuple"],[5,"PolarsObjectStore",154,1998],[5,"Path",1999],[10,"AsyncWrite",2000],[10,"Unpin",2001],[5,"CloudWriter",154,2002],[5,"Error",2003],[10,"Command",2004],[8,"Result",2003],[5,"Url",2005],[5,"Bytes",2006],[5,"Range",2007],[1,"slice"],[5,"ObjectMeta",1996],[17,"Output"],[10,"FnOnce",2008],[1,"u8"],[10,"VarInt",2009],[6,"AmazonS3ConfigKey",227,2010],[6,"AzureConfigKey",227,2011],[6,"GoogleConfigKey",227,2012],[6,"CloudType",227],[10,"AsRef",2013],[10,"Into",2013],[17,"Item"],[10,"IntoIterator",2014],[5,"CsvReader",419,2015],[10,"PhysicalIoExpr",1878],[10,"MmapBytesReader",1290],[5,"Box",2016],[8,"SchemaRef",1992],[5,"OwnedBatchedCsvReader",419,2017],[5,"BatchedCsvReader",419,2017],[5,"CsvReadOptions",419,2018],[5,"CsvParseOptions",419,2018],[6,"CsvEncoding",419,2018],[6,"CommentPrefix",419,2018],[6,"NullValues",419,2018],[5,"PathBuf",2019],[10,"Fn",2008],[5,"File",2020],[5,"SchemaInferenceResult",756],[6,"DataType",2021],[6,"Buffer",679],[5,"Series",2022],[8,"PlHashSet",2023],[6,"ReaderBytes",1290],[5,"CsvWriter",783,2024],[5,"BatchedWriter",783,2024],[5,"CsvWriterOptions",783,2025],[5,"SerializeOptions",783,2025],[6,"QuoteStyle",783,2025],[8,"NonZeroUsize",2026],[1,"u64"],[5,"FileCacheEntry",929,2027],[5,"IpcStreamReader",950,2028],[5,"IpcWriter",950,2029],[5,"BatchedWriter",950,2029],[10,"AsyncWrite",2030],[10,"Send",2001],[5,"IpcScanOptions",950,2031],[5,"IpcReadOptions",950,2032],[5,"IpcWriterOptions",950,2029],[6,"IpcCompression",950,2029],[5,"IpcReaderAsync",950,2032],[5,"FileMetadata",2033],[1,"i64"],[5,"IpcStreamWriterOption",950,2028],[5,"IpcReader",950,2031],[5,"IpcStreamWriter",950,2028],[8,"ArrowSchemaRef",1990],[5,"CompatLevel",2021],[5,"JsonWriterOptions",1192],[5,"JsonWriter",1192],[5,"JsonReader",1192],[5,"BatchedWriter",1192],[6,"JsonFormat",1192],[5,"MemSlice",2034],[10,"BufRead",1984],[5,"StructArray",1315,2035],[10,"Array",2036],[6,"ArrowDataType",2037],[10,"Any",1988],[5,"JsonLineReader",1315],[5,"Field",2038],[5,"MutableStructArray",2039],[5,"GrowableStruct",2040],[5,"Bitmap",2041],[10,"Scalar",2042],[5,"StructValueIter",2043],[5,"BitmapIter",2044],[6,"ZipValidity",2045],[6,"PolarsError",1981],[5,"FileMetaData",1422,2046],[6,"ColumnOrder",2047],[5,"RowGroupMetaData",2048],[5,"ParquetStatistics",1422],[5,"MutableStatistics",2049],[5,"FileMetaData",2050],[5,"KeyValue",2050],[5,"SchemaDescriptor",2051],[6,"ParquetError",2052],[5,"ParquetReader",1475,2053],[5,"BatchedParquetReader",1475,2054],[5,"ParquetAsyncReader",1475,2053],[5,"ParquetOptions",1475,2055],[6,"ParallelStrategy",1475,2055],[8,"FileMetaDataRef",1422],[5,"ParquetWriter",1618,2056],[5,"BatchedWriter",1618,2057],[5,"ParquetWriteOptions",1618,2058],[6,"ParquetCompression",1618,2058],[5,"GzipLevel",1618,2058],[5,"BrotliLevel",1618,2058],[5,"ZstdLevel",1618,2058],[5,"StatisticsOptions",1618,2059],[8,"RowGroupIterColumns",1618,2060],[10,"Iterator",2061],[5,"FileWriter",2062],[5,"Mutex",2063],[1,"u32"],[1,"i32"],[5,"Path",2019],[10,"Sync",2001],[5,"RuntimeManager",1856],[10,"Future",2064],[10,"GetSize",1856],[5,"JoinHandle",2065],[10,"StatsEvaluator",1878],[5,"ColumnStats",1878],[5,"BatchStats",1878],[8,"String",2066],[5,"Field",2067],[10,"Sized",2001],[5,"Utf8Field",679],[5,"CategoricalField",679],[5,"DatetimeField",679],[15,"Datetime",753]],"r":[[0,1979],[1,1976],[2,1976],[3,1979],[4,1979],[5,1979],[87,1989],[88,1991],[89,2068],[154,1995],[155,2002],[156,1998],[165,2069],[194,1995],[206,2069],[230,2010],[235,2011],[259,2012],[421,2017],[422,2018],[423,2018],[424,2018],[425,2018],[426,2015],[430,2018],[431,2017],[478,2070],[558,756],[784,2024],[785,2024],[786,2025],[790,2025],[791,2025],[929,2071],[930,2072],[931,2027],[938,2071],[940,2072],[950,2029],[951,2029],[952,2032],[953,2031],[954,2032],[955,2031],[956,2028],[957,2028],[958,2028],[959,2029],[960,2029],[1316,2035],[1422,2046],[1440,2049],[1476,2054],[1479,2055],[1480,2053],[1481,2055],[1482,2053],[1563,2073],[1618,2057],[1620,2058],[1622,2058],[1625,2058],[1626,2058],[1627,2056],[1628,2060],[1630,2059],[1633,2058],[1945,1979],[1946,1979],[1947,0],[1955,1848],[1956,2074],[1957,2074],[1958,2074],[1959,2074],[1962,2074],[1963,2074],[1964,1968],[1965,2074],[1966,2074],[1967,2074]],"b":[[1320,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1321,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1322,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1323,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1343,"impl-PartialEq-for-StructArray"],[1344,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1349,"impl-From%3CMutableStructArray%3E-for-StructArray"],[1350,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[1371,"impl-StructArray"],[1372,"impl-Array-for-StructArray"],[1375,"impl-StructArray"],[1376,"impl-Array-for-StructArray"],[1388,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1389,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1390,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1391,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1399,"impl-Array-for-StructArray"],[1400,"impl-StructArray"],[1416,"impl-StructArray"],[1417,"impl-Array-for-StructArray"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAM4FrgAAAAEAAwARABcACAAhAAgAKwACADAABQA4AAAAOgACAD4AAgBDABMAXwAAAGEAGQB+AAMAhQABAIgADQCZAAAAngAGAKcADwC5AAIAvwADAMUAAgDNAAAA0AAAANUADgDqAAEA9gAAAAIBAQAFAQEAGwEQAC8BOQBuAQMAcwEIAIEBHACmAQQArwEBALMBKwDgATcAGQIEACQCAAAnAhEAQgIAAEQCAgBLAisAeAIIAIICBwCaAgAAqAISALwCFwDYAgQA4QIgAAMDAQAHAwAACQMGABEDAAAZAxgANAMhAFcDAABZAwIAYQMCAGUDAABnAwUAcwMCAHoDAwB/AxYAogMHAKsDAgCvAwEAswMEALkDAAC8AwAAvwMAAMEDAADEAwMAyQMlAPADNgAoBAMANwQOAFIEAABUBAYAXQQ1AJUEAQCbBAEAnwQAAKIEAAClBAEAqAQBAK8EJQDWBAAA3AQAAN4EBADqBBgABQUBAAsFAQAOBQgAGAUBABsFCQAmBQEAKQUJADQFDQBDBQEARgUBAEoFAABMBQIAUgUAAFQFAABdBQIAYQUAAGQFAQBnBQ0AdgUCAHwFAQCABQgAigUBAJAFAACSBQcAnQUDAKMFBACpBQAAqwUBALkFAgC9BQMAwgUBAMUFAADIBQAAygUAAM0FDQDcBScACQYJABgGAAAaBgMAHwYAACEGAQAkBgEAJwYCACsGEgBABgUARwYDAEwGAgBQBgAAUgYCAFYGAABYBgEAWwYAAF0GAQBgBgEAYwYuAJQGOwDSBgUA4AYPAPgGAQD7BgEA/gYAAAAHBQAIBykANwcBADoHAABBBwIARQcEAEsHAQBOBwAAUAcGAFkHBABfBwkAagcHAHQHAgB/BwEAiAcDAI8HDQCeBwAAoAcAAKQHBwCtBwEAsAcAALIHBQA="}],\
["polars_lazy",{"t":"CQCCCPPGPPPPPPPPPPPPPFPPPPPPPPKPGPPPPGFPPPFFPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPFPPPPPPPPPGPPPGKFPPPPPPPFIPPPPPPPPPGKPPPPPIPPPPPPPPPPPPPKPPPPPPPPPPPPPPPFPPPPPPPPPPPFKPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPGPPPPPPGPPPPPPPPPPGPPPPPPPPPPPKPPPPPPPPPPFPPPPPPPPKKPPPPPPPPPPFPPPPPPPGPPPPPPFPGFPPPPPPGPFPPPPPPPPPPPPPPPPPPPKPPPPFPPPPFPPGGPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHNONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNNMNNNNNNNNNNNNNNNNNNNNNNNNOONHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNHNHNONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNHNNNHNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPGPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPGPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOITTTTTTFKFFKFFFTFTTTTTTFFFTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNOONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNONNMNNOOOONNNNNNNNNOMNNCNNMNNOONNNNNMNNOOONNNNNNONNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMNNNNNNMNNNMNNNNNNNNNNNNNNNNNNNHHKFFPPPPPPPFPPPPPPGFPFPPPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPFKPPGFPFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNNOOOONONNNONNNNNNOOOONONOOOHOMOMNONNNNNNNNNNNNNNNNONOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","Abs","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","Array","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","BinaryExpr","BinaryUdfOutputField","Boolean","BooleanFunction","Business","Cast","CastTimeUnit","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","Clip","Coalesce","Column","Columns","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","Count","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeArgs","DatetimeFunction","Day","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","Duration","DurationArgs","EndsWith","Entropy","Eq","EqValidity","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","Exp","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","Extract","ExtractAll","ExtractGroups","Field","FieldByIndex","FieldByName","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","Find","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Head","HexDecode","HexEncode","Hist","Hour","Implode","IndexColumn","Interpolate","InterpolateBy","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","Join","JoinOptions","JsonDecode","JsonEncode","JsonPathMatch","KeepName","Kurtosis","Last","Len","LenBytes","LenChars","List","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lowercase","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Microsecond","Millennium","Millisecond","Min","MinHorizontal","Minus","Minute","Mode","Modulus","Month","MonthEnd","MonthStart","MultipleFields","Multiply","NUnique","Name","Nanosecond","Negate","NestedType","Not","NotEq","NotEqValidity","Nth","NullCount","OffsetBy","Operator","Or","OrdinalDay","Over","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","PrefixFields","QCut","Quantile","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","RepeatBy","Replace","Replace","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","Reverse","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Round","Round","RoundSF","SearchSorted","Second","Selector","SeriesBinaryUdf","SeriesUdf","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Slice","Sort","SortBy","SpecialEq","Split","SplitExact","SplitN","Sqrt","StartsWith","Std","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","StructExpr","StructFunction","StructNameSpace","SubPlan","SuffixFields","Sum","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Ternary","Then","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","TrueDivide","Truncate","UdfSchema","Unique","UniqueCounts","UpperBound","Uppercase","UserDefinedFunction","ValueCounts","Var","Week","WeekDay","When","Wildcard","Window","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZFill","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_into_selector","_selector_add","_selector_and","_selector_sub","_selector_xor","abs","add","agg_groups","alias","all","all","all","all","all_horizontal","allow_parallel","ambiguous","and","any","any","any","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_sort","arg_sort_by","arg_unique","arg_where","args","args","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","binary","binary_expr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","bottom_k_by","business_day_count","cache","call","call","call_udf","call_udf","call_unchecked","cast","cast","cast_with_options","cat","cat","cbrt","ceil","clip","clip_max","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","contains","cos","cosh","cot","count","count_matches","count_matches","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","cumulative_eval","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","default","default","default","default","default","default","default","default","default","degrees","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diff","diff","div","dot","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","dt","dt","dtype_col","dtype_cols","duration","entropy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","eval","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","extend_constant","field_by_index","field_by_name","field_by_names","fill_nan","fill_null","fill_null_with_strategy","filter","first","first","first","flatten","float_type","floor","floor_div","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold_exprs","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_type","fun","function_expr","function_with_options","functions","gather","gather","gather_every","gather_every","get","get","get","get_categories","get_field","get_field","get_fields_lens","get_output","get_schema","gt","gt_eq","has_multiple_outputs","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","head","head","hist","hour","hours","implode","index_cols","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input_fields","int_range","int_ranges","interpolate","interpolate_by","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_list_name_space","into_list_name_space","into_tree_formatter","is_arithmetic","is_between","is_column","is_column_selection","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","is_not_null","is_null","is_null","is_regex_projection","is_simple_projection","is_unique","join","join","json_encode","keep","kurtosis","last","last","last","len","len","len","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","max","max","max","max","max_horizontal","mean","mean","mean","mean_horizontal","median","median","median","median","meta","microsecond","microseconds","milliseconds","min","min","min","min","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","n_unique","n_unique","name","name","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","new","new","new","new","nodes","nodes_owned","not","not","nth","null_count","options","or","otherwise","otherwise","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","quantile","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","replace_strict","reshape","return_type","reverse","reverse","reverse","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","sample_n","search_sorted","second","seconds","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","shift","shift","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","slice","sort","sort","sort","sort_by","spearman_rank_corr","sqrt","std","std","std","str","strict","strict_cast","string","struct_","sub","suffix","suffix_fields","sum","sum","sum","sum","sum_horizontal","super_type","tail","tail","tan","tanh","ternary_expr","then","then","time_ranges","time_unit","time_unit","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_struct","to_struct","to_uppercase","top_k","top_k_by","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_serialize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udf","undo_aliases","union","unique","unique","unique","unique_counts","unique_stable","unique_stable","unique_stable","upper_bound","value_counts","var","var","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","when","when","when","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fields","with_fractional_seconds","with_hms","with_hms","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","options","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","descending","descending","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","Business","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","Entropy","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Head","HexDecode","HexEncode","Hist","Hour","Interpolate","InterpolateBy","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","JsonDecode","JsonEncode","JsonPathMatch","Kurtosis","LenBytes","LenChars","ListExpr","Log","Log1p","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MonthEnd","MonthStart","MultipleFields","Nanosecond","Negate","Not","NullCount","OffsetBy","OrdinalDay","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Pow","PowFunction","PrefixFields","QCut","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameFields","RepeatBy","Replace","Replace","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","Round","RoundSF","SearchSorted","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","Truncate","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","ZFill","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","ignore_nulls","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","descending","descending","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","time_unit","time_zone","weeks","year","CALL_DF_UDF_PYTHON","CALL_SERIES_UDF_PYTHON","PythonFunction","PythonUdfExpression","__clone_box","borrow","borrow","borrow_mut","borrow_mut","call_udf","call_udf","clone","clone_into","clone_to_uninit","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","get_output","init","init","into","into","new","serialize","to_owned","try_from","try_from","try_into","try_into","try_serialize","type_id","type_id","vzip","vzip","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","join","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","CLUSTER_WITH_COLUMNS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","EAGER","FAST_PROJECTION","FILE_CACHING","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","NEW_STREAMING","OptState","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ROW_ESTIMATE","SIMPLIFY_EXPR","SLICE_PUSHDOWN","STREAMING","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","TYPE_COERCION","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_collect_post_opt","_with_eager","agg","all","allow_parallel","anonymous_scan","anti_join","apply","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","cache","cache","cache","cancel","cast","cast_all","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","cloud_options","cloud_options","cloud_options","cloud_options","cloud_options","cloud_options","coalesce","collect","collect_concurrently","complement","concat_impl","concat_impl","concat_impl","contains","count","cross_join","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","difference","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_no_validate","drop_nulls","empty","explain","explode","extend","fetch","fetch","fetch_blocking","fill_nan","fill_null","filter","finish","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","first","fmt","fmt","fmt","fmt","fmt","force_parallel","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_fallible_iter","from_iter","from_name","full_join","get_current_optimizations","glob","glob","glob","glob","group_by","group_by_dynamic","group_by_stable","head","hive_options","hive_options","how","include_file_paths","include_file_paths","infer_schema_length","init","init","init","init","init","init","init","init","init","init","inner_join","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into_iter","is_all","is_empty","iter","iter_names","join","join_builder","join_nulls","last","lazy","lazy","left_join","left_on","limit","logical_plan","logical_plan","low_memory","low_memory","map","map_python","max","mean","median","memory_map","merge_sorted","min","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","name","new","new","new","new_paths","new_paths","not","null_count","on","optimize","parallel","paths","paths","paths","pivot","profile","quantile","rechunk","rechunk","rechunk","rechunk","rechunk","remove","rename","reverse","right_on","rolling","row_index","row_index","row_index","row_index","row_index","row_index","scan_from_python_function","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","schema","schema","schema_with_arenas","select","select_seq","semi_join","set","set_cached_arena","shift","shift_and_fill","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","sort","sort_by_exprs","std","sub","sub_assign","suffix","sum","symmetric_difference","tail","tail","to_alp","to_alp_optimized","to_dot","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","top_k","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","unique","unique_stable","unnest","unpivot","use_statistics","validate","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with","with_batch_size","with_cache","with_cloud_options","with_cloud_options","with_cluster_with_columns","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","with_ignore_errors","with_include_file_paths","with_include_file_paths","with_infer_schema_length","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_new_streaming","with_null_values","with_optimizations","with_paths","with_paths","with_paths","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_schema","with_schema","with_schema_modify","with_schema_overwrite","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Decimal","Dense","Distinct","DslPlan","Duration","Duration","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","Full","GroupBy","HConcat","HStack","IR","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","Null","OneToMany","OneToOne","Ordinal","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","Right","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","closed_window","closed_window","cmp","coalesce","compare","compression","compression","compute_schema","data_page_size","days","days_only","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","describe","describe_tree_format","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diagonal","display","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","every","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_str","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_partitioned_ds","get_datatype","group_by_dynamic","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","how","include_bom","include_boundaries","include_header","index_column","index_column","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","is_asof","is_constant_duration","is_full_days","is_valid_join","is_zero","join_nulls","label","lit","lit","lit","lit","maintain_order","maintain_order","maintain_order","maintain_order","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","neg","negative","new","new","offset","offset","output_schema","parallel","parse","parsed_int","partial_cmp","period","period","predicate","prepare_cloud_plan","rechunk","rolling","row_group_size","scan","schema","schema","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_options","should_coalesce","skip_rows","slice","start_by","statistics","suffix","suffix","to_alp","to_any_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_supertypes","to_writer","to_writer","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validation","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","weeks_only","with_coalesce","with_columns","with_suffix","write_df_to_file","write_df_to_file","aggs","apply","args","by_column","cache_hits","contexts","df","dsl","expr","exprs","file_info","file_options","filter","function","hive_parts","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","node","offset","options","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","right_on","scan_type","schema","slice","sort_options","version","data_type","high","low"],"q":[[0,"polars_lazy"],[5,"polars_lazy::dsl"],[1535,"polars_lazy::dsl::AggExpr"],[1542,"polars_lazy::dsl::BooleanFunction"],[1545,"polars_lazy::dsl::Expr"],[1580,"polars_lazy::dsl::FunctionExpr"],[1625,"polars_lazy::dsl::StringFunction"],[1645,"polars_lazy::dsl::TemporalFunction"],[1647,"polars_lazy::dsl::binary"],[1667,"polars_lazy::dsl::cat"],[1668,"polars_lazy::dsl::dt"],[1724,"polars_lazy::dsl::function_expr"],[1941,"polars_lazy::dsl::function_expr::BooleanFunction"],[1944,"polars_lazy::dsl::function_expr::FunctionExpr"],[1989,"polars_lazy::dsl::function_expr::StringFunction"],[2009,"polars_lazy::dsl::function_expr::TemporalFunction"],[2011,"polars_lazy::dsl::function_expr::cat"],[2013,"polars_lazy::dsl::function_expr::pow"],[2017,"polars_lazy::dsl::function_expr::rolling"],[2050,"polars_lazy::dsl::function_expr::rolling_by"],[2082,"polars_lazy::dsl::function_expr::trigonometry"],[2126,"polars_lazy::dsl::functions"],[2201,"polars_lazy::dsl::python_udf"],[2247,"polars_lazy::dsl::string"],[2308,"polars_lazy::dsl::udf"],[2314,"polars_lazy::frame"],[2791,"polars_lazy::frame::pivot"],[2793,"polars_lazy::prelude"],[3417,"polars_lazy::prelude::DslPlan"],[3472,"polars_lazy::prelude::LiteralValue"],[3475,"dyn_clone::sealed"],[3476,"polars_plan::dsl::meta"],[3477,"polars_plan::dsl::expr"],[3478,"polars_error"],[3479,"core::result"],[3480,"polars_plan::dsl::array"],[3481,"polars_plan::dsl::list"],[3482,"core::convert"],[3483,"polars_plan::dsl::expr_dyn_fn"],[3484,"alloc::sync"],[3485,"polars_core::series"],[3486,"core::option"],[3487,"core::ops::function"],[3488,"core::marker"],[3489,"polars_plan::plans::visitor"],[3490,"polars_plan::dsl::function_expr"],[3491,"polars_core::datatypes::dtype"],[3492,"polars_core::chunked_array::ops::sort::options"],[3493,"polars_plan::dsl::function_expr::schema"],[3494,"polars_core::datatypes::field"],[3495,"core::any"],[3496,"alloc::vec"],[3497,"polars_plan::dsl::binary"],[3498,"core::clone"],[3499,"alloc::string"],[3500,"polars_plan::dsl::udf"],[3501,"polars_core::chunked_array::cast"],[3502,"polars_plan::dsl::cat"],[3503,"polars_plan::dsl::arity"],[3504,"polars_plan::dsl::function_expr::boolean"],[3505,"polars_plan::dsl::function_expr::cat"],[3506,"polars_plan::dsl::function_expr::datetime"],[3507,"polars_plan::dsl::function_expr::pow"],[3508,"polars_plan::dsl::function_expr::strings"],[3509,"polars_plan::dsl::function_expr::struct_"],[3510,"polars_plan::dsl::functions::temporal"],[3511,"polars_plan::dsl::options"],[3512,"polars_core::utils"],[3513,"polars_lazy::dsl::eval"],[3514,"polars_time::windows::duration"],[3515,"polars_time::windows::group_by"],[3516,"polars_core::datatypes::time_unit"],[3517,"serde::de"],[3518,"polars_plan::plans"],[3519,"polars_core::series::ops"],[3520,"polars_plan::dsl::dt"],[3521,"polars_lazy::dsl::list"],[3522,"polars_arrow::legacy::kernels::ewm"],[3523,"polars_plan::dsl::struct_"],[3524,"polars_core::chunked_array::ops"],[3525,"core::fmt"],[3526,"polars_plan::plans::apply"],[3527,"polars_plan::dsl::function_expr::binary"],[3528,"polars_plan::dsl::function_expr::array"],[3529,"polars_plan::dsl::function_expr::business"],[3530,"polars_plan::dsl::function_expr::range"],[3531,"polars_plan::dsl::function_expr::list"],[3532,"polars_plan::plans::options"],[3533,"polars_core::schema"],[3534,"core::hash"],[3535,"polars_ops::series::ops::interpolation::interpolate"],[3536,"polars_ops::series::ops::is_between"],[3537,"polars_plan::dsl::name"],[3538,"polars_plan::plans::lit"],[3539,"polars_plan::dsl::python_udf"],[3540,"polars_utils::idx_vec"],[3541,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3542,"polars_ops::series::ops::rank"],[3543,"polars_time::group_by::dynamic"],[3544,"polars_core::chunked_array::ops::rolling_window"],[3545,"polars_core::datatypes"],[3546,"polars_core::chunked_array"],[3547,"polars_time::chunkedarray::rolling_window"],[3548,"polars_core::chunked_array::ops::search_sorted"],[3549,"serde::ser"],[3550,"polars_core::series::series_trait"],[3551,"polars_plan::dsl::string"],[3552,"polars_ops::chunked_array::list::to_struct"],[3553,"polars_ops::series::ops::business"],[3554,"polars_arrow::legacy::kernels::time"],[3555,"polars_plan::dsl::function_expr::rolling"],[3556,"polars_plan::dsl::function_expr::rolling_by"],[3557,"polars_plan::dsl::function_expr::trigonometry"],[3558,"polars_core::frame"],[3559,"rayon::iter"],[3560,"pyo3::types::any"],[3561,"pyo3::instance"],[3562,"polars_utils::arena"],[3563,"polars_plan::plans::ir"],[3564,"polars_plan::plans::aexpr"],[3565,"polars_plan::frame::opt_state"],[3566,"polars_plan::plans::anonymous_scan"],[3567,"polars_lazy::scan::anonymous_scan"],[3568,"polars_utils::index"],[3569,"polars_lazy::frame::exitable"],[3570,"polars_utils::aliases"],[3571,"polars_lazy::scan::csv"],[3572,"polars_lazy::scan::ipc"],[3573,"polars_lazy::scan::ndjson"],[3574,"polars_lazy::scan::parquet"],[3575,"polars_lazy::scan::file_list_reader"],[3576,"polars_io::cloud::options"],[3577,"polars_ops::frame::join::args"],[3578,"core::iter::traits::collect"],[3579,"polars_utils::iter::fallible"],[3580,"bitflags::iter"],[3581,"std::path"],[3582,"polars_io::options"],[3583,"polars_io::csv::write::options"],[3584,"polars_io::ipc::write"],[3585,"polars_io::json"],[3586,"polars_io::parquet::write::options"],[3587,"smartstring::alias"],[3588,"polars_core::frame::explode"],[3589,"core::num::nonzero"],[3590,"polars_io::csv::read::options"],[3591,"chrono_tz::timezones"],[3592,"core::cmp"],[3593,"polars_core::frame::group_by::proxy"],[3594,"polars_core::datatypes::any_value"],[3595,"std::io"],[3596,"polars_io::parquet::write::writer"],[3597,"chrono::naive::datetime"],[3598,"polars_plan::dsl::functions::selectors"],[3599,"polars_plan::dsl::functions::horizontal"],[3600,"polars_plan::dsl::functions::arity"],[3601,"polars_plan::dsl"],[3602,"polars_plan::dsl::functions::range"],[3603,"polars_plan::dsl::functions::index"],[3604,"polars_plan::dsl::functions::coerce"],[3605,"polars_plan::dsl::functions::syntactic_sugar"],[3606,"polars_plan::dsl::functions::business"],[3607,"polars_plan::dsl::functions::concat"],[3608,"polars_plan::dsl::functions::correlation"],[3609,"polars_plan::dsl::functions::repeat"],[3610,"polars_plan::client"]],"i":[0,0,0,0,0,27,5,0,36,5,55,55,40,5,55,55,27,27,27,68,27,0,27,27,27,59,59,57,5,27,0,27,0,27,5,57,27,0,0,58,27,57,0,0,27,27,5,5,57,27,59,59,59,57,27,36,59,27,27,27,27,27,27,57,57,57,0,57,57,27,40,27,27,54,5,57,0,59,27,40,40,27,27,27,27,5,0,27,5,67,0,0,0,27,59,59,59,5,60,60,0,0,27,27,5,59,36,27,40,27,5,0,0,27,5,27,58,56,0,67,40,40,27,59,59,59,27,57,36,5,27,27,0,55,55,55,55,55,55,55,57,55,55,55,55,55,57,67,0,59,60,59,5,27,36,5,59,59,68,27,0,0,5,27,27,40,40,27,59,40,40,36,27,36,27,36,0,57,57,57,36,27,40,57,27,40,57,57,57,60,40,36,54,57,27,0,55,40,40,5,27,57,0,40,57,66,59,59,27,27,27,40,27,0,60,27,36,57,27,27,27,27,27,27,5,0,60,27,59,27,27,57,27,59,27,66,0,27,27,57,27,27,27,57,5,0,0,27,27,27,27,27,27,5,59,5,5,0,59,59,59,58,59,36,27,0,59,59,59,59,59,59,0,27,0,0,5,60,36,27,59,27,0,5,0,57,57,59,59,59,27,57,27,27,57,57,57,57,57,57,57,27,40,57,0,27,27,27,59,0,27,36,57,57,0,5,5,0,0,60,57,40,57,59,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,4,4,4,4,4,5,5,5,5,0,9,10,5,0,65,61,5,9,10,5,0,5,5,0,5,5,5,0,5,0,5,5,5,5,5,5,5,9,10,5,9,10,5,5,0,5,0,32,65,5,34,36,0,0,5,0,5,0,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,5,5,0,64,44,46,34,47,46,0,5,5,0,5,5,5,5,5,5,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,50,51,52,53,36,5,54,40,40,17,55,56,57,58,58,59,60,27,61,62,63,63,64,65,66,67,67,68,46,0,0,0,0,0,0,9,10,5,5,5,5,9,10,0,5,0,5,5,5,0,5,71,71,5,0,0,0,0,61,62,63,5,17,17,17,61,62,64,65,66,67,5,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,36,5,54,40,17,17,17,55,56,57,58,59,60,27,63,64,65,66,67,68,10,5,5,5,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,5,10,5,0,5,0,0,0,5,36,5,5,54,40,17,17,55,56,57,58,59,60,27,63,64,65,66,67,68,5,5,5,5,54,54,54,40,40,40,55,55,55,56,56,56,57,57,57,58,58,58,59,59,59,60,60,60,63,63,63,64,64,64,65,65,65,66,66,66,67,67,67,68,68,68,83,83,5,5,5,5,64,5,5,5,5,5,85,85,85,5,5,5,5,0,10,5,5,17,5,5,34,47,44,89,5,5,54,40,40,17,55,55,56,56,57,57,58,58,59,59,60,60,27,27,61,62,63,64,65,66,67,68,46,0,65,64,0,5,49,9,32,10,4,108,85,50,51,52,53,36,5,5,5,5,5,5,5,5,5,5,5,5,5,5,54,40,17,17,17,17,17,17,17,17,17,17,17,17,55,56,57,58,59,60,27,27,27,27,27,61,62,63,64,65,66,66,67,68,46,17,46,0,5,0,10,5,10,5,9,10,5,49,77,15,32,34,89,5,5,4,36,5,5,54,40,55,56,57,58,59,60,27,63,64,65,66,67,68,10,5,5,61,62,5,0,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,46,0,0,5,5,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,5,105,10,4,40,5,4,4,5,5,5,5,5,5,5,5,0,5,0,5,4,4,5,9,10,85,108,5,0,10,5,0,10,5,5,0,5,5,5,5,5,5,5,108,5,0,5,32,32,17,17,5,17,108,17,5,0,5,5,0,32,5,32,32,32,32,0,9,10,5,0,0,10,5,0,0,9,10,5,5,61,62,62,0,9,10,5,0,63,61,62,5,61,5,9,10,5,5,46,5,5,62,5,5,5,32,32,17,61,62,46,5,5,0,5,0,5,46,5,51,53,4,5,5,5,5,5,0,5,4,5,108,108,5,0,5,5,0,5,5,5,0,5,5,85,0,5,5,32,5,5,46,9,10,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,65,65,17,5,10,10,5,5,61,62,36,5,54,40,17,17,17,55,56,57,58,59,60,27,63,64,65,66,67,68,10,10,5,10,9,10,5,5,5,5,5,5,5,5,10,5,9,10,5,5,0,5,9,10,5,5,64,5,0,5,5,108,108,0,9,10,5,0,17,10,5,5,5,0,50,52,0,61,62,61,10,5,9,108,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,5,32,5,40,55,56,57,58,59,60,27,9,10,108,5,5,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,32,32,5,32,34,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,0,4,10,9,10,5,5,9,10,5,5,5,9,10,5,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,62,0,51,53,63,61,61,62,32,85,62,61,62,61,62,61,62,62,61,62,61,62,32,32,61,62,61,61,62,61,5,61,202,203,204,202,203,204,202,205,206,207,208,209,210,210,211,212,208,213,214,215,216,217,213,212,215,209,218,217,219,218,218,219,210,211,215,216,217,216,217,216,214,212,219,208,214,220,221,222,223,224,225,226,227,228,229,230,231,231,223,224,220,223,224,220,224,220,232,233,225,234,235,236,236,221,235,237,238,239,240,236,220,241,242,243,244,245,246,237,234,236,247,248,249,250,251,252,247,248,253,250,251,252,254,255,256,256,253,249,254,255,257,257,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,27,55,55,55,55,27,27,27,27,27,27,27,59,59,57,27,27,0,27,57,27,0,58,27,57,27,27,57,27,59,59,59,57,27,59,27,27,27,27,27,27,57,57,57,57,57,27,27,27,57,59,27,27,27,27,27,27,27,59,59,59,60,60,27,27,59,27,27,0,27,27,58,56,27,59,59,59,27,57,27,27,55,55,55,55,55,55,55,57,55,55,55,55,55,57,59,60,59,27,59,59,27,27,27,27,59,27,27,57,57,57,27,57,27,57,57,57,60,57,27,55,27,57,57,59,59,27,27,27,27,0,60,27,57,27,27,27,27,27,27,60,27,59,27,27,57,27,59,27,27,27,57,27,27,27,57,27,27,27,27,27,27,59,59,59,59,58,59,27,0,59,59,59,59,59,59,27,0,60,27,59,27,0,57,57,59,59,59,27,57,27,27,57,57,57,57,57,57,57,27,57,27,27,27,59,27,57,57,60,57,57,59,0,0,0,0,0,205,206,207,220,221,222,223,224,225,226,227,228,229,230,231,231,223,224,220,223,224,220,224,220,232,233,225,234,235,236,236,221,235,237,238,239,240,236,220,241,242,243,244,245,246,237,234,236,247,248,249,250,251,252,247,248,253,250,251,252,254,255,256,256,253,249,254,255,257,257,0,56,58,58,0,58,130,130,130,130,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,131,131,131,131,0,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,0,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,0,0,0,0,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,61,62,0,0,0,0,0,61,62,0,0,0,0,0,0,0,0,0,61,62,62,0,61,62,61,62,0,0,0,0,0,0,0,61,62,0,0,0,0,61,62,61,62,61,0,0,0,0,139,111,139,111,139,111,139,139,139,139,111,139,111,139,139,111,139,139,139,139,139,139,111,139,139,111,111,139,111,139,111,139,139,111,139,111,139,111,111,139,111,139,0,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,0,46,46,46,46,46,0,148,148,148,148,148,148,0,0,0,0,0,0,0,0,148,0,148,148,148,148,148,148,0,0,0,148,154,136,147,151,156,157,158,159,148,136,136,147,148,149,136,136,147,148,148,148,148,148,148,148,148,149,154,136,147,151,156,157,158,159,148,149,154,136,147,151,156,157,158,159,148,136,136,157,159,154,136,136,154,136,147,151,156,157,158,159,148,154,136,147,151,156,157,158,159,148,154,136,147,151,156,157,158,159,148,148,160,160,156,158,157,159,149,136,136,148,160,160,156,148,136,136,136,151,157,159,148,149,154,136,147,151,156,157,158,159,148,149,154,136,147,151,156,157,158,159,148,136,136,136,136,148,149,154,154,136,136,147,151,156,157,158,159,148,136,136,148,136,136,148,154,136,154,136,136,136,149,160,160,156,158,160,156,158,136,148,148,148,148,148,149,149,154,136,136,136,147,151,156,157,158,159,148,148,148,148,148,148,148,148,136,136,160,160,156,159,136,136,136,147,157,159,149,157,159,151,149,154,136,147,151,156,157,158,159,148,136,148,148,148,149,154,136,147,151,156,157,158,159,148,148,148,148,148,148,136,136,149,136,170,136,136,149,136,136,147,158,159,136,136,136,136,136,157,136,136,160,156,158,151,157,159,151,149,156,158,156,158,148,136,149,136,159,160,156,158,0,136,136,160,156,158,157,159,148,136,136,149,136,160,156,158,151,157,159,136,136,136,136,136,136,151,136,136,136,136,148,136,136,136,136,136,136,136,136,136,151,136,136,136,136,148,148,149,136,148,136,147,136,136,136,154,136,147,151,156,157,158,159,148,148,136,149,154,136,147,151,156,157,158,159,148,149,154,136,147,151,156,157,158,159,148,149,154,136,147,151,156,157,158,159,148,148,136,136,136,136,159,149,136,149,154,136,147,151,156,157,158,159,148,149,158,156,156,158,136,136,136,136,136,136,156,136,156,156,156,156,156,156,156,158,156,158,156,158,156,156,160,156,156,158,158,136,156,136,160,156,158,136,136,156,156,160,156,158,136,160,136,156,156,158,158,156,158,156,158,156,136,156,156,136,136,156,156,136,136,0,0,0,0,0,166,166,189,190,190,79,166,0,79,190,190,190,189,79,0,0,190,0,79,79,190,190,190,166,79,79,79,79,166,190,190,190,190,190,0,79,0,0,0,0,166,0,0,184,184,79,189,189,0,0,190,184,184,189,0,0,79,190,0,0,166,0,79,79,166,190,79,79,79,190,190,190,190,190,190,190,79,0,165,116,74,169,166,184,176,189,177,115,178,179,190,191,138,79,74,74,74,150,150,150,150,176,165,116,74,196,169,166,184,176,195,189,177,115,178,179,190,191,138,79,165,116,74,196,169,166,184,176,195,189,177,115,178,179,190,191,138,79,165,116,74,169,166,184,176,189,177,115,178,179,190,191,138,79,165,116,74,169,166,184,176,189,177,115,178,179,190,191,138,79,165,116,74,74,169,166,184,184,176,189,189,177,177,115,115,178,178,179,179,190,191,138,138,79,165,116,74,169,74,177,179,79,179,74,74,165,116,169,184,176,177,115,178,179,191,138,79,165,116,74,196,169,166,184,176,195,189,177,115,178,179,190,191,138,79,165,116,74,196,169,166,184,176,195,189,177,115,178,179,190,191,138,79,115,79,79,165,116,74,169,166,184,176,189,177,115,178,179,190,191,138,79,138,79,165,116,74,196,169,166,184,176,195,189,177,115,178,179,190,191,138,79,165,116,74,169,166,184,176,189,177,115,178,179,190,191,138,165,165,165,116,116,116,74,74,74,169,169,169,166,166,166,184,184,184,176,176,176,177,177,177,178,178,178,179,179,179,191,191,191,138,138,138,165,165,116,74,74,150,169,166,166,184,184,176,189,177,115,178,179,190,191,138,191,165,116,74,196,169,169,166,184,176,195,189,177,115,178,179,190,191,138,79,138,190,193,165,116,74,169,166,184,176,189,177,115,178,179,190,191,138,169,176,165,176,165,116,165,116,74,196,169,166,184,176,195,189,177,115,178,179,190,191,138,79,165,116,74,196,169,166,184,176,195,189,177,115,178,179,190,191,138,79,79,166,74,74,184,74,169,165,109,74,195,190,176,177,178,179,190,115,74,74,74,196,74,184,74,74,74,169,165,116,196,138,74,74,74,165,116,196,0,138,193,179,150,150,196,165,116,74,169,166,184,176,189,177,115,178,179,190,191,138,79,176,169,191,169,165,179,169,169,79,190,165,116,74,169,166,184,176,189,177,115,178,179,190,191,138,79,74,166,184,138,177,179,74,74,74,74,165,116,74,196,169,166,184,176,195,189,177,115,178,179,190,190,191,138,79,165,116,74,196,169,166,184,176,195,189,177,115,178,179,190,191,138,79,165,116,74,196,169,166,184,176,195,189,177,115,178,179,190,191,138,79,169,165,116,74,196,169,166,184,176,195,189,177,115,178,179,190,191,138,79,74,74,169,196,169,177,179,258,258,259,260,261,262,263,264,265,266,267,267,263,268,267,261,269,261,265,258,266,270,260,271,268,262,272,273,273,259,274,258,273,271,258,264,271,275,265,258,273,266,270,274,263,267,272,269,267,273,267,263,260,260,264,276,276,276],"f":"````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}000000000000000000000000{hj}{{hj}{{n{jl}}}}000{jj}{{jj}}1{{j{b{A`}}}j}{{}j}{Abj}{Adj}{{jAf}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}``{{jc}j{{Al{j}}}}4321{{jcAf}j{{Al{j}}}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{j}}{b{C`c}}b}{{n{Cbl}}}{{Cd{{b{j}}b}{{Bf{{n{Cbl}}}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}{{ce{Bb{{B`{An}}}}Af}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}?{{jjChCj}j}{jj}0000{{jj}j}1>=1>=1{{jCl}j}{{cCn}j{{Aj{{Ah{j}}}}}}3{cj{{Al{j}}}}{{{b{D`}}}{{b{{Ah{Db}}}}}}`{jAb}{{{b{Dd}}}{{b{Df}}}}{{{b{Dh}}}{{b{j}}}}{{{Dj{j}}}j}{{{b{A`}}}j}{{j{Bh{Dl}}}j}`{jDn}{{jE`j}j}{{{b{c}}}{{b{e}}}{}{}}0000000000000000000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}0000000000000000000000000000000>{{jcg{Dj{Af}}}j{{Al{j}}}{{Al{j}}Eb}{{Aj{{Ah{e}}}}}}{{jj{Ed{Af}}{Dj{Ef}}}j}`{{{b{Eh}}{b{A`}}}{{n{Ejl}}}}{{El{Dj{j}}}{{n{jl}}}}{{{b{Dd}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{En}}BdBd}{{n{Bdl}}}}{{El{Dj{j}}}j}{{jCj}j}0{{jCjF`}j}`{jFb}{jj}0{{jjj}j}{{jj}j}0{{{b{Fd}}}Fd}{{{b{Ff}}}Ff}{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}{{{b{Dh}}}Dh}{{{b{j}}}j}{{{b{Fl}}}Fl}{{{b{E`}}}E`}{{{b{{Bb{c}}}}}{{Bb{c}}}Eb}{{{b{Fn}}}Fn}{{{b{G`}}}G`}{{{b{Gb}}}Gb}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{Cf}}}Cf}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{Hd}}}Hd}{{{b{Hf}}}Hf}{{{b{Hh}}}Hh}{{{b{El}}}El}{{{b{c}}{b{C`e}}}f{}{}}000000000000000000000000{{{b{c}}}f{}}0000000000000000000000000000{{{b{{Ah{j}}}}}j}{{{b{A`}}}j}{cj{{Hj{Ej}}}}{{eAf}{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{e{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{Abc}j{{Al{j}}}}{{Adc}j{{Al{j}}}}{jj}00021{{jjHl}j}{{jAf}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}111{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}2{{HnjI`Af}j}0{{j{Dj{Ib}}{Bh{{Dj{Ej}}}}AfAf}j}{{jjIdIf}j}{Gjj}{{jjIdIf{Bh{Ih}}{Bh{Ej}}}j}0```{{}j}{{}{{Bb{{B`{Ij}}}}}}{{}{{Bb{{B`{En}}}}}}{{}{{Bb{{B`{An}}}}}}{{}Gj}{{}Gl}{{}H`}{{}Hb}{{}Hd}{{}Hf}{jj}{I`{{b{c}}}{}}00000000000000{{{b{{Bb{c}}}}}b{}}11111111111111111{I`{{b{C`c}}}{}}0000000000000000000000000000000{c{{n{Dh}}}Il}{c{{n{j}}}Il}{c{{n{Fl}}}Il}{c{{n{E`}}}Il}{c{{n{{Bb{{B`{In}}}}}}}Il}{c{{n{{Bb{{B`{Dd}}}}}}}Il}{c{{n{{Bb{Bd}}}}}Il}{c{{n{Fn}}}Il}{c{{n{G`}}}Il}{c{{n{Gb}}}Il}{c{{n{Gd}}}Il}{c{{n{Gf}}}Il}{c{{n{Gh}}}Il}{c{{n{Cf}}}Il}{c{{n{Gn}}}Il}{c{{n{H`}}}Il}{c{{n{Hb}}}Il}{c{{n{Hd}}}Il}{c{{n{Hf}}}Il}{c{{n{Hh}}}Il}{{AdChJ`}j}{{jChJ`}j}{{jj}}{{jc}j{{Al{j}}}}{I`f}0000000000000000000000000000000{jj}{Adj}1`{jJb}{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{Glj}{{jIbAf}j}{{{b{Dh}}{b{Dh}}}Af}9{{{b{j}}{b{j}}}Af}{{{b{Fl}}{b{Fl}}}Af}{{{b{E`}}{b{E`}}}Af}{{{b{{Bb{Bd}}}}{b{{Bb{Bd}}}}}Af}{{{b{{Bb{{B`{c}}}}}}{b{{Bb{{B`{c}}}}}}}AfJd}{{{b{Fn}}{b{Fn}}}Af}{{{b{G`}}{b{G`}}}Af}{{{b{Gb}}{b{Gb}}}Af}{{{b{Gd}}{b{Gd}}}Af}{{{b{Gf}}{b{Gf}}}Af}{{{b{Gh}}{b{Gh}}}Af}{{{b{Cf}}{b{Cf}}}Af}{{{b{Gn}}{b{Gn}}}Af}{{{b{H`}}{b{H`}}}Af}{{{b{Hb}}{b{Hb}}}Af}{{{b{Hd}}{b{Hd}}}Af}{{{b{Hf}}{b{Hf}}}Af}{{{b{Hh}}{b{Hh}}}Af}{{jc}j{{Al{j}}}}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000000000000000{{JfjAf}j}0{{jJh}j}{{jjId}j}11`{{jc}j{{Hj{Ej}}}}{{jc}j{{Aj{{Ah{Cj}}}}}}{jj}0{{jjj}j}{{JjCh}j}{{Jj{b{A`}}}j}{{Jj{b{{Ah{c}}}}}j{{Aj{A`}}}};;{{jJl}j}<{{}j}{Adj}77{{}{{Bb{{B`{An}}}}}}8{{jj}j}{{{b{Dd}}{b{C`Jn}}}{{n{fK`}}}}{{{b{En}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Eh}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Kb}}{b{C`Jn}}}{{n{fK`}}}}{{{b{j}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{Fl}}{b{C`Jn}}}{{n{fK`}}}}{{{b{E`}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{{Bb{c}}}}{b{C`Jn}}}{{n{fK`}}}{}}{{{b{Fn}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{G`}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{Gb}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{Gd}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{Gf}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{Gh}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{Cf}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{Gj}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Gl}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Gn}}{b{C`Jn}}}{{n{fK`}}}}{{{b{H`}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Hb}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Hd}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Hf}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Hh}}{b{C`Jn}}}{{n{fK`}}}}{{{b{El}}{b{C`Jn}}}{{n{fK`}}}}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}``{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}{{j{Bh{Dl}}}j}{cc{}}00000000000{Dhj}{Chj}{Afj}{Hlj}{{{b{A`}}}j}{Kdj}{Dlj}{Ibj}{Kfj}{Khj}:{Kjj}{Klj}{Efj}=={Gh{{Bb{{B`{Dd}}}}}}>{Gb{{Bb{{B`{Dd}}}}}}{Cf{{Bb{{B`{Dd}}}}}}{Kn{{Bb{{B`{Dd}}}}}}{L`{{Bb{{B`{Dd}}}}}}{Lb{{Bb{{B`{Dd}}}}}}{G`{{Bb{{B`{Dd}}}}}}{Fn{{Bb{{B`{Dd}}}}}}{Gf{{Bb{{B`{Dd}}}}}}{Ld{{Bb{{B`{Dd}}}}}}{Lf{{Bb{{B`{Dd}}}}}}{cc{}}00000{GfCf}1{G`Cf}{FnCf}{KnCf}44444{HfHd}5555{Cj{{Bb{{B`{An}}}}}}``{{jc{Bb{{B`{An}}}}Lh}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}`{{AdjAf}j}{{jc}j{{Al{j}}}}{{Adjj}j}{{jI`I`}j}{{AbjAf}j}43{Fbj}{{{b{Ij}}{b{Lj}}Ll{b{Db}}{b{Db}}}{{Bh{Db}}}}{{{b{An}}{b{Lj}}Ll{b{{Ah{Db}}}}}{{n{Dbl}}}}{{{b{D`}}}I`}{{{b{Dd}}}{{Bh{{Bb{{B`{An}}}}}}}}{{{b{Kb}}{b{Lj}}}{{n{{B`{Lj}}l}}}}99{{{b{h}}}Af}{{{b{Dh}}{b{C`c}}}fLn}{{jDlDlDlDl}j}{{{b{j}}{b{C`c}}}fLn}{{{b{Fl}}{b{C`c}}}fLn}{{{b{E`}}{b{C`c}}}fLn}{{{b{Fn}}{b{C`c}}}fLn}{{{b{G`}}{b{C`c}}}fLn}{{{b{Gb}}{b{C`c}}}fLn}{{{b{Gd}}{b{C`c}}}fLn}{{{b{Gf}}{b{C`c}}}fLn}{{{b{Gh}}{b{C`c}}}fLn}{{{b{Cf}}{b{C`c}}}fLn}{{{b{Gn}}{b{C`c}}}fLn}{{{b{H`}}{b{C`c}}}fLn}{{{b{Hb}}{b{C`c}}}fLn}{{{b{Hd}}{b{C`c}}}fLn}{{{b{Hf}}{b{C`c}}}fLn}{{{b{Hh}}{b{C`c}}}fLn}{{Adj}j}{{j{Bh{I`}}}j}{{j{Bh{j}}{Bh{I`}}AfAf}j}``{jj}{cj{{Aj{{Ah{Ch}}}}}}{{}I`}0000000000000000000000000000000`{{jjChCj}j}{{jjj}j}{{jM`}j}{{jj}j}{ce{}{}}0000000000000000000000000000000{{{b{j}}}}{MbAd}{AdAd}{h{{n{{`{Md}}l}}}}{{{b{E`}}}Af}{{jccMf}j{{Al{j}}}}{{{b{h}}}Af}{{{b{h}}Af}Af}???{{jc}j{{Al{j}}}}{jj}0000000330{{AbjAf}j}{{AdjAf}j}{Jjj}{Mhj}{{jAfAf}j}{{}j}{Adj}7107{jAd}{cjMj}{{jIb}j}:;;:;;{{Mhc}j{{Bj{{b{A`}}}{{Bf{{n{Ejl}}}}}}BlBn}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{j{b{C`c}}{b{C`}}}{{n{jl}}}{{Cd{j{b{C`}}}{{Bf{{n{jl}}}}}}}}{{{b{D`}}{Bh{{b{Ej}}}}}{{n{Dbl}}}}{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{Cj}}}{{Bf{Cj}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Cj}}}{{Bf{{n{Cjl}}}}}}BlBn}}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{{b{Cj}}}}}}}{{Bf{{n{Cjl}}}}}}BlBn}}{{jc}j{{Cd{j}{{Bf{j}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Db}}}{{Bf{{n{Dbl}}}}}}BlBn}}{{Mh{B`{Bj}}}j}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{Db}}}}}{{Bf{{n{Dbl}}}}}}BlBn}}:{{ce{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}2{{{b{D`}}}{{n{Dbl}}}}{{jMnAf}j}1111{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jMh}`44`{j}{{jc}j{{Al{j}}}}0;{{{b{{Ah{Db}}}}}D`}{c{{Bb{c}}}{}}{{jjj}Gj}{{}Gl}{{{b{A`}}{Dj{Db}}{Bb{{B`{An}}}}c}ElDd}{{{b{j}}{b{C`{N`{{b{j}}}}}}}f}{{j{b{C`{N`{j}}}}}f}=={Chj}>`8{{Ffc}j{{Al{j}}}}{{Fjc}j{{Al{j}}}}{{{b{h}}}{{n{{B`{A`}}l}}}}{{je}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{je{Bh{{Nb{eCl}}}}Hf}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jj}j}{jj}0{{jjHl}j}{{}j}{h{{Dj{j}}}}{{jc}j{{Al{j}}}}{{Mh{b{A`}}}j}05`{{j{Dj{Ib}}{Bh{{Dj{Ej}}}}AfAfAf}j}{{jI`{Bh{{Dj{Ej}}}}AfAfAf}j}{{{b{A`}}jNd}j}{{jjNd}j}9{{jNf{Bh{Dl}}}j}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{jAf}j}{{jj}}{{Jj{Dj{Ej}}}j}{{cj}j{{Al{j}}}};{{jcc}j{{Al{j}}}}{{{b{D`}}{Bh{Cj}}}{{n{Dbl}}}}{{jcc{Bh{c}}{Bh{Cj}}}j{{Al{j}}}}{{j{b{{Ah{Ch}}}}Hh}j}`{Abj}{Adj}{jj}00{{jNh}j}{{jjGn}j}0{{j{B`{Bj}}{Bb{{B`{An}}}}Nj}j}{{jI`c}j{{Cd{{b{C`{Nn{Nl}}}}}{{Bf{{Bh{Ib}}}}}}BlBnO`}}{{jNj}j}{{jjOb}j}101010{{jNdIbNj}j}{{jjNdIbOb}j}{{jI`Af}j}434343{{{b{h}}}{{Dj{{B`{A`}}}}}}{{jKh}j}{{jEf}j}``{{}{{Bb{{B`{An}}}}}}{{jjAfAf{Bh{Dl}}}j}{{AdjAfAf{Bh{Dl}}}j}01{{jcOd}j{{Al{j}}}}``{{{b{Dh}}c}nOf}{{{b{j}}c}nOf}{{{b{Fl}}c}nOf}{{{b{E`}}c}nOf}{{{b{{Bb{{B`{Dd}}}}}}c}nOf}{{{b{{Bb{{B`{In}}}}}}c}nOf}{{{b{{Bb{Bd}}}}c}nOf}{{{b{Fn}}c}nOf}{{{b{G`}}c}nOf}{{{b{Gb}}c}nOf}{{{b{Gd}}c}nOf}{{{b{Gf}}c}nOf}{{{b{Gh}}c}nOf}{{{b{Cf}}c}nOf}{{{b{Gn}}c}nOf}{{{b{H`}}c}nOf}{{{b{Hb}}c}nOf}{{{b{Hd}}c}nOf}{{{b{Hf}}c}nOf}{{{b{Hh}}c}nOf}{{Adc}j{{Al{j}}}}0{{jOh}j}1{{Abj}j}{{Adj}j}{{jj}j}{{jce}j{{Al{j}}}{{Al{j}}}}{jj}{{j{Bh{Dl}}}j}111{{jAf}j}{{Adjj}j}4{{AbCl}j}{{AdCl}j}{{jCl}j}{{jeCn}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jjHlAf}j}8{{AbHl}j}{{AdHl}j}{{jHl}j}{jOj}`{{jCj}j}`{jJj}{{jj}}{{Mh{b{A`}}}j}0{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}{{}{{Bb{{B`{An}}}}}}{{Adj}j}{{j{Bh{I`}}}j}44{{jjj}j}{{Fdc}Ff{{Al{j}}}}{{Fhc}Fj{{Al{j}}}}{{jjIdIf}j}```{{AdI`}j}{{{b{j}}{b{Lj}}Ll}{{n{Dbl}}}}<{Mhj}{{{b{c}}}e{}{}}000000000000000000000000<{{{b{D`}}}{{n{Dbl}}}}{{{b{c}}}Ej{}}00000000{{Ab{Bh{{B`{Bj}}}}}j}{{AdOl{Bh{{B`{Bj}}}}I`}j}5{{jj}j}{{jcg{Dj{Af}}}j{{Al{j}}}{{Al{j}}Eb}{{Aj{{Ah{e}}}}}}{c{{n{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{Cj}}}{{Bf{{n{Cjl}}}}}}}}{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{{Ah{{b{Cj}}}}}}}{{Bf{{n{Cjl}}}}}}}}{{jc}{{n{jl}}}{{Cd{j}{{Bf{{n{jl}}}}}}}}{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{Db}}}{{Bf{{n{Dbl}}}}}}}}{{{b{Dd}}{b{C`{Dj{Hl}}}}}{{n{fl}}}}{{{b{c}}}On{}}0000000000000000000000000000000`{hj}{{Adc}j{{Al{j}}}}{Abj}{Adj}{jj}02100{{jAfAfEjAf}j}{{AbHl}j}{{AdHl}j}{{jHl}j}{ce{}{}}0000000000000000000000000000000`{cFd{{Al{j}}}}{{Ffc}Fh{{Al{j}}}}{{Fjc}Fh{{Al{j}}}}`{{Gjj}Gj}0{{Glj}Gl}{{{b{D`}}Cj}{{n{Dbl}}}}{{Jj{Dj{j}}}{{n{jl}}}}{{Gljjj}Gl}{{Gjjjj}Gj}1545445454{{{b{D`}}{Bh{Cj}}}{{n{Dbl}}}}{{{b{D`}}}{{n{Dbl}}}}76{{GjIh}Gj}{{Gj{Bh{Ej}}}Gj}89{{jc}j{{Al{j}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{DnAf}j}{Dnj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{Dnj}j}{I`{{b{c}}}{}}{I`{{b{C`c}}}{}}{I`f}3{cc{}}87{{}I`}{ce{}{}}6{c{{n{e}}}{}{}}0{{{b{c}}}On{}}2``{{Jbj{Ed{Af}}{Dj{Ef}}A@`}j}{Jbj}<;{{JbIh}j}1{{JbjIh}j}{{JbEj}j}333<;:393873333333333{{Jbj}j}44{{Jb{Bh{Ej}}jA@b}j}15{{Jb{b{A`}}}j}65066666662998:6656``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@d}}}A@d}{{{b{c}}{b{C`e}}}f{}{}}{{{b{c}}}f{}}{I`{{b{c}}}{}}{I`{{b{C`c}}}{}}{c{{n{A@d}}}Il}{I`f}{{{b{A@d}}{b{A@d}}}Af}{{{b{A@d}}{b{C`Jn}}}{{n{fK`}}}}0{cc{}}{{{b{A@d}}{b{C`c}}}fLn}{{}I`}{ce{}{}}{{{b{A@d}}c}nOf}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}On{}}5````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@f}}}A@f}{{{b{c}}{b{C`e}}}f{}{}}{{{b{c}}}f{}}{I`{{b{c}}}{}}{I`{{b{C`c}}}{}}{c{{n{A@f}}}Il}{I`f}{{{b{A@f}}{b{A@f}}}Af}{{{b{A@f}}{b{C`Jn}}}{{n{fK`}}}}0{cc{}}{{{b{A@f}}{b{C`c}}}fLn}{{}I`}{ce{}{}}{{{b{A@f}}c}nOf}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}On{}}5````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@h}}}A@h}{{{b{c}}{b{C`e}}}f{}{}}{{{b{c}}}f{}}0{I`{{b{c}}}{}}{I`{{b{C`c}}}{}}{c{{n{A@h}}}Il}{I`f}{{{b{A@h}}{b{A@h}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{A@h}}{b{C`Jn}}}{{n{fK`}}}}0{cc{}}{{{b{A@h}}{b{C`c}}}fLn}{{}I`}{ce{}{}}{{{b{A@h}}c}nOf}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}On{}}5``{{}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}`0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjChCj}j}{{cCn}j{{Aj{{Ah{j}}}}}}{cj{{Al{j}}}}{{{Dj{j}}}j}{{{b{A`}}}j}{{jCj}j}{{{b{{Ah{j}}}}}j}2{c{{A@l{{Dj{A@j}}}}}{{AAb{}{{A@n{AA`}}}}}}{cj{{Hj{Ej}}}}{{cAAd}{{A@l{AA`}}}{{Aj{{Ah{AA`}}}}}}{{eAf}{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}11{e{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{jjHl}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{jjIdIf}j}0{Gjj}{{jjIdIf{Bh{Ih}}{Bh{Ej}}}j}0``{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{Glj}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}``{cj{{Aj{{Ah{Ch}}}}}}{{jjChCj}j}{{jjj}j}{jj}0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{A`}}}j}00```0````2{{jjHl}j}{{{b{A`}}jNd}j}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{cj}j{{Al{j}}}}{{jjGn}j}0``{{jjHlAf}j}6{{jjIdIf}j}0`````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{C`c}}}{{b{C`e}}}{}{}}0{{{b{Mn}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{AAf}}A@j}{{n{A@jl}}}}{{{b{AAf}}}AAf}{{{b{c}}{b{C`e}}}f{}{}}{{{b{c}}}f{}}{I`{{b{c}}}{}}0{I`{{b{C`c}}}{}}0{c{{n{AAf}}}Il}{I`f}0{{{b{AAf}}{b{AAf}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{AAf}}{b{C`Jn}}}{{n{fK`}}}}{cc{}}{{{AAj{AAh}}}AAf}1{{{b{Mn}}}{{Bh{{Bb{{B`{An}}}}}}}}{{}I`}0{ce{}{}}0{{{AAj{AAh}}{Bh{Cj}}AfAf}Mn}{{{b{AAf}}c}nOf}{{{b{c}}}e{}{}}{c{{n{e}}}{}{}}000{{{b{Mn}}{b{C`{Dj{Hl}}}}}{{n{fl}}}}{{{b{c}}}On{}}066`{{OjAf}j}{Ojj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{OjjAf}j}{{Ojj}j}1{I`{{b{c}}}{}}{I`{{b{C`c}}}{}}{I`f}3{{OjjI`}j}4{{Oj{b{A`}}}{{n{jl}}}}65{cc{}}6;:{{}I`}{ce{}{}}{{Oj{b{A`}}Af}j}{{Oj{Bh{Cj}}{Bh{I`}}}j}:>>{{OjI`AAl}j}0{{OjjjAf}j}0{{OjjjAfCh}j}{Ojj}{{Ojjj}j}?;;?;??????{{OjCjH`j}j}{{Ojj}j}{{OjH`}j}{{Oj{Bh{Ih}}{Bh{Ej}}H`j}j}{{OjI`}j}{{OjjAf}j}7377{c{{n{e}}}{}{}}0{{{b{c}}}On{}}?6`````````````````````````````````{{{b{c}}d}f{}}00000000{{AA`c}{{A@l{A@j}}}{{Bj{AAn{b{C`{ABb{AB`}}}}{b{C`{ABb{ABd}}}}}{{Bf{{A@l{f}}}}}}}}{{AA`Af}AA`}{{ABfc}AA`{{Aj{{Ah{j}}}}}}{{}ABh}{{ABjAf}ABj}{{{B`{ABl}}ABn}{{A@l{AA`}}}}{{AA`AA`cc}AA`{{Al{j}}}}{{ABfcAC`}AA`{{Bj{A@j}{{Bf{{A@l{A@j}}}}}}BlBn}}{{ABhABh}ABh}{{{b{C`ABh}}ABh}f}10{{{b{ABh}}}Kh}021{{{b{c}}}{{b{e}}}{}{}}000000000{{{b{C`c}}}{{b{C`e}}}{}{}}000000000{{AA`ACbcCn}AA`{{Aj{{Ah{j}}}}}}{AA`AA`}``{{{b{ACd}}}f}{{AA`{ACf{{b{A`}}Cj}}Af}AA`}{{AA`CjAf}AA`}{{{b{ACd}}}ACd}{{{b{AA`}}}AA`}{{{b{ABf}}}ABf}{{{b{ABn}}}ABn}{{{b{ACh}}}ACh}{{{b{ACj}}}ACj}{{{b{ACl}}}ACl}{{{b{ACn}}}ACn}{{{b{ABh}}}ABh}{{{b{c}}{b{C`e}}}f{}{}}00000000{{{b{c}}}f{}}000000000{{{b{AD`}}}{{Bh{{b{ADb}}}}}}0{{{b{ACh}}}{{Bh{{b{ADb}}}}}}{{{b{ACl}}}{{Bh{{b{ADb}}}}}}``{{ABjADd}ABj}{AA`{{A@l{A@j}}}}{AA`{{A@l{ACd}}}}{ABhABh}{{{b{AD`}}{Dj{AA`}}}{{A@l{AA`}}}}0{{{b{ACh}}{Dj{AA`}}}{{A@l{AA`}}}}{{{b{ABh}}ABh}Af}{AA`AA`}{{AA`AA`{Bh{Ej}}}AA`}{{}AA`}{{}ABn}{{}ACj}{{}ACn}{{}ABh}{I`{{b{c}}}{}}000000000{I`{{b{C`c}}}{}}000000000{{{b{AA`}}}{{A@l{Ej}}}}000{{ABhABh}ABh}{I`f}{{{b{C`ACd}}}f}11{{AA`e}AA`{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}}22222220{{AA`{Bh{{Dj{j}}}}}AA`}8{{{b{AA`}}Af}{{A@l{Ej}}}}{{AA`e}AA`{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{{b{C`ABh}}c}f{{ADf{}{{A@n{ABh}}}}}}{{{b{ACd}}}{{Bh{{A@l{A@j}}}}}}{{AA`I`}{{A@l{A@j}}}}{{{b{ACd}}}{{A@l{A@j}}}}{{AA`c}AA`{{Al{j}}}}0{{AA`j}AA`}{ABjAA`}{AD`{{A@l{AA`}}}}0{ACh{{A@l{AA`}}}}{ACl{{A@l{AA`}}}}210{AA`AA`}{{{b{ABh}}{b{C`Jn}}}{{n{fK`}}}}0000{{ABjAf}ABj}{cc{}}0{InAA`}1{ABfAA`}2222222{Kh{{Bh{ABh}}}}{KhABh}00{g{{n{ic}}}{}{}{{ADh{c}{{A@n{e}}}}}{}}{cABh{{ADf{}{{A@n{ABh}}}}}}{{{b{A`}}}{{Bh{ABh}}}}{{AA`AA`cc}AA`{{Al{j}}}}{{{b{AA`}}}ABh}{{{b{AD`}}}Af}0{{{b{ACh}}}Af}`{{AA`e}ABf{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{AA`jcADj}ABf{{Aj{{Ah{j}}}}}}1{{ABf{Bh{I`}}}AA`}``{{ABjADl}ABj}```{{}I`}0000000008{{{b{C`ABh}}ABh}f}{{ABhABh}ABh}{{{b{ABh}}ABh}Af}{ce{}{}}000000000{ABh}{{{b{ABh}}}Af}0{{{b{ABh}}}{{ADn{ABh}}}}{{{b{ABh}}}{{AE`{ABh}}}}{{AA`AA`ccAEb}AA`{{Aj{{Ah{j}}}}}}{AA`ABj}{{ABjAf}ABj}{AA`AA`}{AEdAA`}1{{AA`AA`cc}AA`{{Al{j}}}}{{ABjc}ABj{{Aj{{Ah{j}}}}}}{{AA`ACb}AA`}``{{AClAf}ACl}`{{AA`cAEf{Bh{{B`{Kb}}}}{Bh{{b{A`}}}}}AA`{{Bj{A@j}{{Bf{{A@l{A@j}}}}}}BlBn}}{{AA`AAfAEf{Bh{AC`}}Af}AA`}777`{{AA`AA`{b{A`}}}{{A@l{AA`}}}}8{{{b{AD`}}}{{Bh{I`}}}}{{{b{ACh}}}{{Bh{I`}}}}{{{b{ACl}}}{{Bh{I`}}}}````={cACh{{Aj{AEh}}}}{cACl{{Aj{AEh}}}}{{{B`{{Ah{AEj}}}}}ACh}{{{B`{{Ah{AEj}}}}}ACl}{ABhABh}{AA`AA`}>{{AA`{b{C`{ABb{AB`}}}}{b{C`{ABb{ABd}}}}}{{A@l{AAn}}}}`{{{b{AD`}}}{{b{{Ah{AEj}}}}}}{{{b{ACh}}}{{b{{Ah{AEj}}}}}}{{{b{ACl}}}{{b{{Ah{AEj}}}}}}`{AA`{{A@l{{Nb{A@jA@j}}}}}}{{AA`jNd}AA`}{{{b{AD`}}}Af}{{{b{ACh}}}Af}{{{b{ACl}}}Af}``{{{b{C`ABh}}ABh}f}{{AA`ei}AA`{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}{{Aj{A`}}}{{ADf{}{{A@n{g}}}}}};{{ABjc}ABj{{Aj{{Ah{j}}}}}}{{AA`jcNh}ABf{{Aj{{Ah{j}}}}}}{{{b{AD`}}}{{Bh{{b{AEl}}}}}}{{{b{ACh}}}{{Bh{{b{AEl}}}}}}{{{b{ACl}}}{{Bh{{b{AEl}}}}}}```{{LjAEnAf}AA`}{{cACj}{{A@l{AA`}}}{{Aj{AEh}}}}{{{B`{{Ah{AEj}}}}ACj}{{A@l{AA`}}}}{{cACn}{{A@l{AA`}}}{{Aj{AEh}}}}{{{B`{{Ah{AEj}}}}ACn}{{A@l{AA`}}}}{{{b{C`AA`}}}{{A@l{AC`}}}}`{{{b{C`AA`}}{b{C`{ABb{AB`}}}}{b{C`{ABb{ABd}}}}}{{A@l{AC`}}}}{{AA`c}AA`{{Aj{{Ah{j}}}}}}0{{AA`AA`cc}AA`{{Al{j}}}}{{{b{C`ABh}}ABhAf}f}{{{b{AA`}}{ABb{AB`}}{ABb{ABd}}}f}{{AA`c}AA`{{Al{j}}}}{{AA`ce}AA`{{Al{j}}}{{Al{j}}}}{{AA`cAF`}{{A@l{f}}}{{Aj{AEh}}}}{{AA`cAFb}{{A@l{f}}}{{Aj{AEh}}}}{{AA`Ej{Bh{ADb}}AFb}{{A@l{f}}}}{{AA`cAFd}{{A@l{f}}}{{Aj{AEh}}}}{{AA`cAFf}{{A@l{f}}}{{Aj{AEh}}}}{{AA`Ej{Bh{ADb}}AFf}{{A@l{f}}}}`{{AA`ChACb}AA`}{{AA`cCn}AA`{{Hj{AFh}}}}{{AA`cCn}AA`{{Aj{{Ah{j}}}}}}{{AA`Hl}AA`}{{ABhABh}ABh}{{{b{C`ABh}}ABh}f}{{ABjc}ABj{{Aj{A`}}}}{AA`AA`}3{{AA`ACb}AA`}{{ABf{Bh{I`}}}AA`}{AA`{{A@l{AFj}}}}0{{{b{AA`}}Af}{{A@l{Ej}}}}{{{b{c}}}e{}{}}000000007{{AA`ACbcCn}AA`{{Aj{{Ah{j}}}}}}{c{{n{e}}}{}{}}0000000000000000000{{{b{c}}}On{}}000000000;{{AA`{Bh{{Dj{Ej}}}}AFl}AA`}0{{AA`e}AA`{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}}{{AA`AFn}AA`}`{{ABjAG`}ABj}{{AA`Hl}AA`}{ce{}{}}000000000{{ABjAA`}ABj}{{ACl{Bh{AGb}}}ACl}{{AChAf}ACh}{{ACh{Bh{ADb}}}ACh}{{ACl{Bh{ADb}}}ACl}{{AA`Af}AA`}{{AA`j}AA`}{{AA`c}AA`{{Aj{{Ah{j}}}}}}022{{ACh{Bh{{b{A`}}}}}ACh}{{AA`c}AA`{{Aj{{Ah{AA`}}}}}}7{{ACh{Bh{AC`}}}ACh}{{AChAGd}ACh}{{AChHl}ACh}:::{{AClAf}ACl}{{ACh{Bh{{B`{A`}}}}}ACh}{{ACl{Bh{{B`{A`}}}}}ACl}{{ACh{Bh{I`}}}ACh}?>>{{AD`c}AD`{{Al{{Bh{I`}}}}}}1{{AChc}ACh{{Al{{Bh{I`}}}}}}{{ACl{Bh{I`}}}ACl}{{AClc}ACl{{Al{{Bh{I`}}}}}}?{{ACh{Bh{AGf}}}ACh}{{AA`ABh}AA`}{{AD`{B`{{Ah{AEj}}}}}AD`}{{ACh{B`{{Ah{AEj}}}}}ACh}{{ACl{B`{{Ah{AEj}}}}}ACl}{{AA`Af}AA`}0{{ACh{Bh{Hl}}}ACh}{{AChAf}ACh}{{AD`Af}AD`}1{{AClAf}ACl}4{{AD`c}AD`{{Al{{Bh{AEl}}}}}}{{AA`{b{A`}}{Bh{ACb}}}AA`}{{ACh{Bh{AEl}}}ACh}{{AChc}ACh{{Al{{Bh{AEl}}}}}}{{ACl{Bh{AEl}}}ACl}{{AClc}ACl{{Al{{Bh{AEl}}}}}}{{ACh{Bh{AC`}}}ACh}{{ACl{Bh{AC`}}}ACl}{{AChc}{{A@l{ACh}}}{{Bj{Lj}{{Bf{{A@l{Lj}}}}}}}}1{{AChHl}ACh}>{{AChI`}ACh}0??==?{AA`AA`}{{{b{A@j}}e{Bh{i}}{Bh{m}}Af{Bh{j}}{Bh{{b{A`}}}}}{{A@l{A@j}}}{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}{{Aj{A`}}}{{ADf{}{{A@n{g}}}}}{{Aj{A`}}}{{ADf{}{{A@n{k}}}}}}0`````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}000000000000000{{{b{Id}}Ch{Bh{{b{AGh}}}}}{{n{Chl}}}}00{{{b{ABl}}}Af}00{{{b{ABl}}}{{b{Df}}}}`{{{b{c}}}{{b{e}}}{}{}}00000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}00000000000000000{{{b{ADj}}}ADj}{{{b{Nh}}}Nh}{{{b{Id}}}Id}{{{b{AEb}}}AEb}{{{b{ADl}}}ADl}{{{b{AG`}}}AG`}{{{b{AF`}}}AF`}{{{b{AGj}}}AGj}{{{b{AFb}}}AFb}{{{b{Nf}}}Nf}{{{b{AFd}}}AFd}{{{b{AFf}}}AFf}{{{b{AGl}}}AGl}{{{b{AGn}}}AGn}{{{b{AAd}}}AAd}{{{b{In}}}In}{{{b{c}}{b{C`e}}}f{}{}}000000000000000{{{b{c}}}f{}}00000000000000000000000``{{{b{Id}}{b{Id}}}AH`}`{{{b{c}}{b{e}}}AH`{}{}}``{{{b{In}}}{{n{{B`{Lj}}l}}}}`{{{b{Id}}}Ch}{{{b{Id}}}Af}{{}ADj}{{}Nh}{{}AEb}{{}AG`}{{}AF`}{{}AFb}{{}Nf}{{}AFd}{{}AFf}{{}AGn}{{}AAd}{{}In}{I`{{b{c}}}{}}00000000000000000{I`{{b{C`c}}}{}}00000000000000000`{{{b{In}}}{{n{Ejl}}}}0{c{{n{ADj}}}Il}{c{{n{Nh}}}Il}{c{{n{Id}}}Il}{c{{n{AEb}}}Il}{c{{n{ADl}}}Il}{c{{n{AG`}}}Il}{c{{n{AF`}}}Il}{c{{n{AGj}}}Il}{c{{n{AFb}}}Il}{c{{n{Nf}}}Il}{c{{n{AFd}}}Il}{c{{n{AFf}}}Il}{c{{n{AGl}}}Il}{c{{n{AGn}}}Il}{c{{n{AAd}}}Il}{c{{n{In}}}Il}`{{{b{In}}}{{n{{`{Md}}l}}}}{I`f}00000000000000000{{{b{ADj}}{b{ADj}}}Af}{{{b{Nh}}{b{Nh}}}Af}{{{b{Id}}{b{Id}}}Af}{{{b{AEb}}{b{AEb}}}Af}{{{b{ADl}}{b{ADl}}}Af}{{{b{AG`}}{b{AG`}}}Af}{{{b{AF`}}{b{AF`}}}Af}{{{b{AGj}}{b{AGj}}}Af}{{{b{AFb}}{b{AFb}}}Af}{{{b{Nf}}{b{Nf}}}Af}{{{b{AFd}}{b{AFd}}}Af}{{{b{AFf}}{b{AFf}}}Af}{{{b{AGl}}{b{AGl}}}Af}{{{b{AGn}}{b{AGn}}}Af}{{{b{AAd}}{b{AAd}}}Af}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000000`{{{b{ADj}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Nh}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Id}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{ABl}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AEb}}{b{C`Jn}}}{{n{fK`}}}}{{{b{ADl}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{AG`}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{AF`}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AGj}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AFb}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Nf}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AFd}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AFf}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AGl}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AGn}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AAd}}{b{C`Jn}}}{{n{fK`}}}}`{cc{}}000{ADlAEb}11111111111111`{{{b{AGl}}}Cj}{{{b{AHb}}{Dj{Bd}}{b{ADj}}}{{n{{Nb{Bd{Dj{Bd}}AHd}}l}}}}{{{b{ADj}}{b{C`c}}}fLn}{{{b{Nh}}{b{C`c}}}fLn}{{{b{Id}}{b{C`c}}}fLn}{{{b{AEb}}{b{C`c}}}fLn}{{{b{ADl}}{b{C`c}}}fLn}{{{b{AG`}}{b{C`c}}}fLn}{{{b{AF`}}{b{C`c}}}fLn}{{{b{AGj}}{b{C`c}}}fLn}{{{b{AFb}}{b{C`c}}}fLn}{{{b{Nf}}{b{C`c}}}fLn}{{{b{AFd}}{b{C`c}}}fLn}{{{b{AFf}}{b{C`c}}}fLn}{{{b{AGl}}{b{C`c}}}fLn}{{{b{AGn}}{b{C`c}}}fLn}{{{b{AAd}}{b{C`c}}}fLn}``````{{}I`}00000000000000000{ce{}{}}00000000000000000{{{b{In}}}}{{{b{ADl}}}Af}{{{b{Id}}{Bh{{b{A`}}}}}Af}{{{b{Id}}}Af}{{{b{AG`}}{b{ADl}}}{{n{fl}}}}1``{Mjj}{Idj}{AHfj}{AGlj}````{AGlAGl}`{{{b{Id}}}Ch}7{{IdCh}Id}`1{{{b{AG`}}}Af}{Id}:{ChId}{ADlAEb}````{{{b{A`}}}Id}`{{{b{Id}}{b{Id}}}{{Bh{AH`}}}}```{{InEj}{{n{{Dj{Hl}}l}}}}`{{{b{AHb}}{Dj{Bd}}{b{Nh}}}{{n{{Nb{Bd{Dj{Bd}}AHd}}l}}}}`{{{b{ABl}}AHh}{{n{A@jl}}}}{{{b{ABl}}{Bh{I`}}}{{n{{B`{Lj}}l}}}}`{{{b{ADj}}c}nOf}{{{b{Nh}}c}nOf}{{{b{Id}}c}nOf}{{{b{AEb}}c}nOf}{{{b{ADl}}c}nOf}{{{b{AG`}}c}nOf}{{{b{AF`}}c}nOf}{{{b{AGj}}c}nOf}{{{b{AFb}}c}nOf}{{{b{Nf}}c}nOf}{{{b{AFd}}c}nOf}{{{b{AFf}}c}nOf}{{{b{AGl}}c}nOf}{{{b{AGn}}c}nOf}{{{b{AAd}}c}nOf}{{{b{In}}c}nOf}`{{{b{AEb}}}Af}````{{{b{AEb}}}{{b{A`}}}}`{In{{n{AFjl}}}}{{{b{AGl}}}{{Bh{AHj}}}}{{{b{c}}}e{}{}}000000000000000{{{b{c}}}Ej{}}00`{{{b{AFb}}c}{{AHl{c}}}AHn}{{{b{AFf}}c}{{AI`{c}}}AHn}{{{b{Id}}Ch{Bh{{b{AGh}}}}ceg}{{n{Chl}}}{{Bj{Ch}{{Bf{Ch}}}}}{{Bj{Ch}{{Bf{AIb}}}}}{{Bj{AIb}{{Bf{Ch}}}}}}{{{b{Id}}Ch{Bh{{b{AGh}}}}}{{n{Chl}}}}00{c{{n{e}}}{}{}}00000000000000{AHj{{n{AGll}}}}111111111111111111111{{{b{c}}}On{}}00000000000000000`{ce{}{}}00000000000000000{{{b{Id}}}Ch}{{{b{Id}}}Af}{{AEbADd}AEb}`{{AEb{Bh{Ej}}}AEb}{{{b{AFb}}A@jc}{{n{fl}}}AHn}{{{b{AFf}}A@jc}{{n{fl}}}AHn}``````````````````````````````````````````````````````````","D":"GHf","p":[[1,"reference"],[5,"Private",3475],[1,"unit"],[5,"MetaNameSpace",5,3476],[6,"Expr",5,3477],[6,"PolarsError",3478],[6,"Result",3479],[1,"str"],[5,"ArrayNameSpace",5,3480],[5,"ListNameSpace",5,3481],[1,"bool"],[1,"slice"],[10,"AsRef",3482],[10,"Into",3482],[10,"FunctionOutputField",5,3483],[5,"Arc",3484],[5,"SpecialEq",5,3483],[5,"Series",3485],[17,"Output"],[6,"Option",3486],[10,"Fn",3487],[10,"Send",3488],[10,"Sync",3488],[0,"mut"],[6,"VisitRecursion",3489],[10,"FnMut",3487],[6,"FunctionExpr",5,3490],[1,"i64"],[6,"DataType",3491],[5,"SortOptions",3492],[5,"SortMultipleOptions",3492],[5,"FieldsMapper",5,3493],[5,"Field",3494],[10,"SeriesUdf",5,3483],[10,"Any",3495],[6,"AggExpr",5,3477],[5,"Vec",3496],[1,"u64"],[5,"BinaryNameSpace",1647,3497],[6,"Operator",5,3477],[10,"Clone",3498],[1,"array"],[1,"i32"],[10,"RenameAliasFn",5,3483],[5,"String",3499],[5,"UserDefinedFunction",5,3500],[10,"SeriesBinaryUdf",5,3483],[6,"CastOptions",3501],[5,"CategoricalNameSpace",5,3502],[5,"When",5,3503],[5,"Then",5,3503],[5,"ChainedWhen",5,3503],[5,"ChainedThen",5,3503],[6,"Excluded",5,3477],[6,"BooleanFunction",5,3504],[6,"CategoricalFunction",5,3505],[6,"TemporalFunction",5,3506],[6,"PowFunction",5,3507],[6,"StringFunction",5,3508],[6,"StructFunction",5,3509],[5,"DatetimeArgs",5,3510],[5,"DurationArgs",5,3510],[5,"RollingCovOptions",5,3511],[5,"StrptimeOptions",5,3511],[5,"JoinOptions",5,3511],[6,"WindowType",5,3511],[6,"WindowMapping",5,3511],[6,"NestedType",5,3511],[10,"IntoVec",3512],[1,"u8"],[10,"ExprEvalExtension",5,3513],[1,"usize"],[1,"f64"],[5,"Duration",2793,3514],[6,"ClosedWindow",3515],[6,"TimeUnit",3516],[10,"BinaryUdfOutputField",5,3483],[10,"Deserializer",3517],[6,"DslPlan",2793,3518],[6,"NullBehavior",3519],[5,"DateLikeNameSpace",1668,3520],[10,"Sized",3488],[10,"ListNameSpaceExtension",5,3521],[5,"EWMOptions",3522],[5,"StructNameSpace",5,3523],[6,"FillNullStrategy",3524],[5,"Formatter",3525],[5,"Error",3525],[10,"UdfSchema",5,3526],[1,"f32"],[1,"i8"],[1,"u32"],[1,"i16"],[1,"u16"],[6,"BinaryFunction",3527],[6,"ArrayFunction",3528],[6,"BusinessFunction",3529],[6,"RangeFunction",3530],[6,"ListFunction",3531],[5,"FunctionOptions",3532],[5,"Schema",3533],[6,"Context",3518],[10,"Hasher",3534],[6,"InterpolationMethod",3535],[10,"IntoListNameSpace",5,3521],[10,"Display",3525],[6,"ClosedInterval",3536],[5,"ExprNameNameSpace",5,3537],[10,"Literal",2793,3538],[10,"FnOnce",3487],[5,"PythonUdfExpression",2201,3539],[5,"UnitVec",3540],[1,"tuple"],[6,"QuantileInterpolOptions",3541],[5,"RankOptions",2793,3542],[5,"RollingGroupOptions",2793,3543],[5,"RollingOptionsFixedWindow",3544],[5,"Float64Type",3545],[5,"ChunkedArray",3546],[10,"Copy",3488],[5,"RollingOptionsDynamicWindow",3547],[6,"SearchSortedSide",3548],[10,"Serializer",3549],[6,"IsSorted",3550],[5,"StringNameSpace",2247,3551],[6,"ListToStructWidthStrategy",3552],[5,"TypeId",3495],[6,"Roll",3553],[6,"NonExistent",3554],[6,"RollingFunction",2017,3555],[6,"RollingFunctionBy",2050,3556],[6,"TrigonometricFunction",2082,3557],[5,"DataFrame",3558],[8,"PolarsResult",3478],[17,"Item"],[5,"LazyFrame",2314],[10,"IntoParallelIterator",3559],[5,"UnionArgs",2793,3532],[5,"PythonFunction",2201,3539],[5,"PyAny",3560],[5,"Py",3561],[1,"char"],[5,"Node",3562],[6,"IR",3563],[5,"Arena",3562],[6,"AExpr",3564],[5,"LazyGroupBy",2314],[5,"OptState",2314,3565],[5,"JoinBuilder",2314],[10,"AnonymousScan",2793,3566],[5,"ScanArgsAnonymous",2314,3567],[8,"SchemaRef",3533],[8,"IdxSize",3568],[5,"InProcessQuery",2314,3569],[8,"PlHashMap",3570],[5,"LazyCsvReader",2314,3571],[5,"ScanArgsIpc",2314,3572],[5,"LazyJsonLineReader",2314,3573],[5,"ScanArgsParquet",2314,3574],[10,"LazyFileListReader",2314,3575],[5,"CloudOptions",3576],[6,"JoinCoalesce",3577],[10,"IntoIterator",3578],[10,"FallibleIterator",3579],[5,"DynamicGroupOptions",2793,3543],[6,"JoinType",2793,3577],[5,"Iter",3580],[5,"IterNames",3580],[5,"JoinArgs",2793,3577],[10,"IntoLazy",2314],[8,"AllowedOptimizations",2314,3565],[5,"Path",3581],[5,"PathBuf",3581],[5,"RowIndex",3582],[8,"PyObject",3561],[5,"CsvWriterOptions",2793,3583],[5,"IpcWriterOptions",2793,3584],[5,"JsonWriterOptions",2793,3585],[5,"ParquetWriteOptions",2793,3586],[8,"String",3587],[5,"IRPlan",3563],[6,"UniqueKeepStrategy",3558],[5,"UnpivotArgs",3588],[6,"JoinValidation",2793,3577],[8,"NonZeroUsize",3589],[6,"CsvEncoding",3590],[6,"NullValues",3590],[6,"Tz",3591],[6,"RankMethod",2793,3542],[6,"LiteralValue",2793,3538],[5,"AnonymousScanOptions",2793,3532],[6,"Ordering",3592],[10,"PolarsTemporalGroupby",2793,3543],[6,"GroupsProxy",3593],[5,"Null",2793,3538],[5,"AnonymousScanArgs",2793,3566],[6,"AnyValue",3594],[5,"IpcWriter",3584],[10,"Write",3595],[5,"ParquetWriter",3596],[5,"NaiveDateTime",3597],[15,"Quantile",1535],[15,"Min",1535],[15,"Max",1535],[15,"IsBetween",1941],[15,"Any",1941],[15,"All",1941],[15,"SortBy",1545],[15,"Filter",1545],[15,"Cast",1545],[15,"Sort",1545],[15,"Gather",1545],[15,"RenameAlias",1545],[15,"Ternary",1545],[15,"Function",1545],[15,"Window",1545],[15,"AnonymousFunction",1545],[15,"Slice",1545],[15,"BinaryExpr",1545],[15,"QCut",1944],[15,"Entropy",1944],[15,"Log",1944],[15,"Hist",1944],[15,"Cut",1944],[15,"Correlation",1944],[15,"Round",1944],[15,"TopK",1944],[15,"TopKBy",1944],[15,"RoundSF",1944],[15,"EwmMeanBy",1944],[15,"Clip",1944],[15,"BackwardFill",1944],[15,"ForwardFill",1944],[15,"Random",1944],[15,"GatherEvery",1944],[15,"ValueCounts",1944],[15,"Rank",1944],[15,"EwmMean",1944],[15,"EwmStd",1944],[15,"EwmVar",1944],[15,"ReplaceStrict",1944],[15,"CumCount",1944],[15,"CumSum",1944],[15,"CumProd",1944],[15,"CumMin",1944],[15,"CumMax",1944],[15,"ConcatHorizontal",1989],[15,"ConcatVertical",1989],[15,"ExtractGroups",1989],[15,"JsonDecode",1989],[15,"PadStart",1989],[15,"PadEnd",1989],[15,"SplitExact",1989],[15,"Contains",1989],[15,"Find",1989],[15,"Replace",1989],[15,"DatetimeFunction",2009],[15,"GroupBy",3417],[15,"Union",3417],[15,"Sort",3417],[15,"Cache",3417],[15,"ExtContext",3417],[15,"DataFrameScan",3417],[15,"IR",3417],[15,"Select",3417],[15,"HStack",3417],[15,"Scan",3417],[15,"MapFunction",3417],[15,"Filter",3417],[15,"Distinct",3417],[15,"Slice",3417],[15,"Sink",3417],[15,"Join",3417],[15,"HConcat",3417],[15,"PythonScan",3417],[15,"Range",3472]],"r":[[7,3477],[21,3480],[30,3483],[32,3504],[37,3505],[38,3502],[42,3503],[43,3503],[66,3510],[76,3510],[86,3477],[90,3477],[91,3513],[92,3537],[100,3493],[101,3537],[111,3490],[112,3483],[118,3483],[132,3521],[148,3511],[160,3481],[161,3521],[176,3476],[195,3511],[202,3477],[213,3507],[225,3483],[236,3511],[245,3483],[246,3483],[257,3483],[265,3508],[272,3511],[274,3509],[275,3523],[282,3506],[284,3503],[304,3526],[309,3500],[314,3503],[317,3511],[318,3511],[358,3598],[362,3599],[369,3599],[372,3600],[376,3601],[378,3602],[393,3603],[395,3603],[401,3604],[402,3605],[404,3601],[406,3503],[473,3606],[480,3605],[483,3601],[569,3599],[570,3598],[571,3598],[572,3607],[573,3607],[574,3607],[583,3608],[585,3599],[589,3599],[594,3602],[595,3510],[596,3602],[597,3602],[736,3601],[738,3598],[739,3598],[740,3510],[827,3601],[867,3599],[870,3607],[935,3601],[978,3598],[1012,3602],[1013,3602],[1064,3605],[1066,3605],[1076,3601],[1079,3601],[1083,3538],[1093,3600],[1104,3601],[1107,3601],[1114,3605],[1118,3599],[1119,3605],[1122,3599],[1123,3605],[1131,3605],[1135,3599],[1161,3605],[1163,3601],[1175,3608],[1182,3601],[1185,3605],[1189,3599],[1193,3609],[1206,3608],[1207,3608],[1280,3608],[1288,3601],[1293,3605],[1297,3599],[1303,3503],[1306,3602],[1456,3601],[1504,3503],[1647,3497],[1667,3502],[1668,3520],[1741,3504],[1745,3505],[1792,3490],[1854,3507],[1893,3508],[1901,3509],[1906,3506],[1936,3490],[1937,3490],[1938,3490],[1939,3490],[1940,3490],[2011,3505],[2015,3507],[2021,3555],[2054,3556],[2097,3557],[2126,3510],[2127,3510],[2128,3598],[2129,3599],[2131,3599],[2132,3600],[2133,3602],[2134,3603],[2135,3603],[2136,3604],[2137,3605],[2138,3605],[2139,3599],[2140,3598],[2142,3598],[2144,3607],[2147,3607],[2148,3607],[2149,3608],[2150,3599],[2151,3599],[2152,3602],[2153,3602],[2154,3510],[2155,3602],[2156,3602],[2159,3598],[2160,3598],[2161,3510],[2162,3599],[2163,3607],[2166,3598],[2167,3602],[2168,3602],[2169,3605],[2170,3605],[2171,3600],[2172,3605],[2173,3605],[2174,3605],[2178,3605],[2183,3605],[2184,3608],[2185,3605],[2186,3599],[2187,3609],[2188,3608],[2189,3608],[2192,3608],[2193,3605],[2194,3602],[2195,3602],[2201,3539],[2202,3539],[2203,3539],[2204,3539],[2247,3551],[2308,3500],[2314,3565],[2321,3569],[2324,3571],[2325,3575],[2328,3573],[2330,3565],[2337,3567],[2338,3572],[2339,3574],[2793,3566],[2794,3566],[2795,3532],[2803,3583],[2810,3518],[2811,3514],[2813,3543],[2830,3584],[2832,3577],[2833,3577],[2834,3577],[2835,3585],[2837,3538],[2838,3538],[2844,3538],[2845,3538],[2850,3586],[2851,3543],[2854,3542],[2855,3542],[2857,3543],[2873,3532],[3277,3610]],"b":[[602,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[603,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[604,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[681,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[682,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[683,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[743,"impl-Expr"],[744,"impl-PartialEq-for-Expr"],[747,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[748,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[838,"impl-Debug-for-Expr"],[839,"impl-Display-for-Expr"],[841,"impl-Debug-for-Operator"],[842,"impl-Display-for-Operator"],[844,"impl-Debug-for-BooleanFunction"],[845,"impl-Display-for-BooleanFunction"],[846,"impl-Debug-for-CategoricalFunction"],[847,"impl-Display-for-CategoricalFunction"],[848,"impl-Display-for-TemporalFunction"],[849,"impl-Debug-for-TemporalFunction"],[850,"impl-Display-for-PowFunction"],[851,"impl-Debug-for-PowFunction"],[852,"impl-Display-for-StringFunction"],[853,"impl-Debug-for-StringFunction"],[854,"impl-Display-for-StructFunction"],[855,"impl-Debug-for-StructFunction"],[856,"impl-Display-for-FunctionExpr"],[857,"impl-Debug-for-FunctionExpr"],[884,"impl-From%3CAggExpr%3E-for-Expr"],[885,"impl-From%3Ci64%3E-for-Expr"],[886,"impl-From%3Cbool%3E-for-Expr"],[887,"impl-From%3Cu8%3E-for-Expr"],[888,"impl-From%3C%26str%3E-for-Expr"],[889,"impl-From%3Cf32%3E-for-Expr"],[890,"impl-From%3Cu64%3E-for-Expr"],[891,"impl-From%3Cf64%3E-for-Expr"],[892,"impl-From%3Ci8%3E-for-Expr"],[893,"impl-From%3Cu32%3E-for-Expr"],[895,"impl-From%3Ci16%3E-for-Expr"],[896,"impl-From%3Cu16%3E-for-Expr"],[897,"impl-From%3Ci32%3E-for-Expr"],[900,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[902,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[903,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[904,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[905,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[906,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[907,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[908,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[909,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[910,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[911,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[918,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[920,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[921,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[922,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[955,"impl-Expr"],[956,"impl-Hash-for-Expr"],[1244,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[1245,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[1246,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[2037,"impl-Debug-for-RollingFunction"],[2038,"impl-Display-for-RollingFunction"],[2069,"impl-Debug-for-RollingFunctionBy"],[2070,"impl-Display-for-RollingFunctionBy"],[2113,"impl-Debug-for-TrigonometricFunction"],[2114,"impl-Display-for-TrigonometricFunction"],[2362,"impl-OptState"],[2363,"impl-Flags-for-OptState"],[2500,"impl-Debug-for-OptState"],[2501,"impl-Octal-for-OptState"],[2502,"impl-LowerHex-for-OptState"],[2503,"impl-UpperHex-for-OptState"],[2504,"impl-Binary-for-OptState"],[2508,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2510,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2519,"impl-Flags-for-OptState"],[2520,"impl-OptState"],[2753,"impl-LazyCsvReader"],[2754,"impl-LazyFileListReader-for-LazyCsvReader"],[2755,"impl-LazyJsonLineReader"],[2756,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2773,"impl-LazyCsvReader"],[2774,"impl-LazyFileListReader-for-LazyCsvReader"],[2775,"impl-LazyJsonLineReader"],[2776,"impl-LazyFileListReader-for-LazyJsonLineReader"],[3142,"impl-Display-for-Duration"],[3143,"impl-Debug-for-Duration"],[3146,"impl-Debug-for-JoinType"],[3147,"impl-Display-for-JoinType"],[3148,"impl-Display-for-JoinValidation"],[3149,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAANAJ+wAEABEAFwAPACgAAgAtABUARAAIAE4ABwBXAAIAXAAAAF4AGQB5ABoAlQADAJoABgCiAA4AsgAVAMkABADPACUA+AAJAAMBEAAVAQYAHgEXADcBAwA8AQAAPgEkAGQBAABpAQAAbAEBAHABAAB2AQAAeAEAAIMBAACGAQAAjQEBAJABAQCVAQAAmAE/ANoBAADcAQAA3gEBAOQBAADrAU4APQIAAFcCDABlAlQAvAIAAL4CHwDfAgAA4QIAAOcCAADpAhEA/AIsADEDAAA0AwEAOgMAAEADAABDAyAAZQMAAHUDCQCAAwIAhQMAAIcDCQCXAwAAmQMCAKEDAACmAwAAqAMAAK0DAQCyAwUAuwMAAL0DDwDQAwEA1AMfABkEAgAdBAEAMgQAADoEAABHBAAASgQFAFMEAABWBAAAZgQAAGkEAgBxBAIAdQQDAH4EAQCCBAIAiAQBAJQEAACWBAEAnQQAAJ8EAACnBAEArQQAAK8EAACxBAAAtgQCANAEBQDXBBUA9gQAAP0EAAAEBQAACQUAAAsFAAANBQAAEwUAABgFAAAaBQAAHAUCACMFGQA+BQkATAU/AI4FAACQBSEAvgUAAMAFIADkBQEA6QUAAPYFAAD6BQEA/wUTABYGAQAZBgEAHAYBAB8GBgAnBkgAcQYDAHYGAgB7BgIAgAYDAIgGAQCRBgIAlwYAAJkGAACmBgAAtQYDAL0GOgH5BwEA/AcbABkIAQAcCCcARQgBAEgIBgBTCAAAYQgAAG4IAQB1CAEAgAgCAIQIAwCNCAMAlQgeALUIAAC3CAIAvAgLAMkIAwDQCAIA1ggAANsIAgDgCAEAAAkDABIJAwAZCQEAIgkCACYJCQA0CQAAPAkAAD8JFABVCQEAWgkbAHoJAQB+CQAAggkAAIYJGACkCQMAqQkGAMAJAADCCQEAxQkEAM0JAADPCQAA2AkAANsJAADgCQIA6AkBAOsJDAAGCgAADwoBABQKAQAXCgAAGQoAAB0KAQAjCgMAKAoDAC8KBAA4CgMARAoDAEkKAABNCgEAUAoAAFMKAABcCgAAaAoBAGsKCAB1Ch4AmQoBAJwKCQCnCgAAqQoBALIKAQC7CgEAwwoAAMUKAQDKCgEA1woAANkKAADoCgcA8woAAPYKAQD5CgAA+woDAAELAAAECwAACAsCAA8LAAARCwYAGwsCAB8LAAAiCwkALQsCADILAAA0CwAAOgsTAFELYgC4C4sARQwTAF0MAABsDAAAbgwRAIEMAACEDBEAqAwCAKwMAACuDAAAsQwDALgMBQC/DAEAwwwAAMUMAgDJDAEAzQwAAM8MAQDUDBUA6wyoAA=="}],\
["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPPIFGKPGGPPIPPPPPKNNNNHNNENNHNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNHNONONNNNNNNNNNNNNNNNNNONNEEPKPPGKKNMMMNNHHHNNNNHHNNNNNNNNNNNNNNNHNNHHHHHHHNNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","contains","contains_chunked","contains_chunked","ends_with","ends_with","ends_with_chunked","ends_with_chunked","list","scatter","starts_with","starts_with","starts_with_chunked","starts_with_chunked","strings","AsList","ListNameSpaceImpl","as_list","join_literal","join_literal","join_many","join_many","lst_arg_max","lst_arg_max","lst_arg_min","lst_arg_min","lst_concat","lst_concat","lst_get","lst_get","lst_join","lst_join","lst_lengths","lst_lengths","lst_max","lst_max","lst_mean","lst_mean","lst_median","lst_median","lst_min","lst_min","lst_n_unique","lst_n_unique","lst_reverse","lst_reverse","lst_shift","lst_shift","lst_slice","lst_slice","lst_sort","lst_sort","lst_std","lst_std","lst_sum","lst_sum","lst_unique","lst_unique","lst_unique_stable","lst_unique_stable","lst_var","lst_var","same_type","same_type","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Full","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","Right","SeriesJoin","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_create_left_df_from_slice","_create_left_df_from_slice","_finish_join","_full_join_from_series","_full_join_from_series","_join_suffix_name","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coalesce","coalesce","cross_join","cross_join","cross_join_dfs","cross_join_dfs","default","default","default","default_join_ids","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","full_join","hash","hash","hash","hash","hash_join_inner","hash_join_inner","hash_join_outer","hash_join_outer","how","init","init","init","init","inner_join","into","into","into","into","is_asof","is_valid_join","join","join_nulls","left_join","needs_checks","new","private_left_join_multiple_keys","should_coalesce","slice","suffix","suffix","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validation","with_coalesce","with_suffix","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","clone_to_uninit","clone_to_uninit","coalesce_series","convert_to_unsigned_index","default","deref","deref_mut","drop","ensure_sorted_arg","ensure_sorted_arg","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","is_positive_idx_uncertain","is_sorted","is_sorted","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","try_from","try_into","type_id","value_counts","value_counts"],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[23,"polars_ops::chunked_array::list"],[72,"polars_ops::chunked_array::strings"],[74,"polars_ops::frame"],[78,"polars_ops::frame::join"],[236,"polars_ops::prelude"],[238,"polars_ops::series"],[291,"polars_ops::chunked_array::binary"],[292,"polars_core::datatypes"],[293,"polars_ops::chunked_array::binary::namespace"],[294,"polars_ops::chunked_array::scatter"],[295,"polars_utils::index"],[296,"polars_core::series"],[297,"polars_error"],[298,"core::marker"],[299,"core::option"],[300,"core::iter::traits::collect"],[301,"polars_ops::chunked_array::list::namespace"],[302,"polars_core::datatypes::aliases"],[303,"polars_core::chunked_array::ops::sort::options"],[304,"polars_core::frame"],[305,"dyn_clone::sealed"],[306,"polars_ops::frame::join::hash_join"],[307,"polars_ops::frame::join::args"],[308,"alloc::string"],[309,"polars_ops::frame::join::cross_join"],[310,"core::fmt"],[311,"core::convert"],[312,"core::hash"],[313,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[314,"polars_arrow::array::primitive"],[315,"core::result"],[316,"core::any"],[317,"polars_ops::series::ops::arg_min_max"],[318,"polars_ops::series::ops"],[319,"polars_core::chunked_array::ops::search_sorted"],[320,"polars_ops::series::ops::various"],[321,"polars_ops::frame::join::general"],[322,"polars_ops::series::ops::clip"],[323,"polars_ops::series::ops::horizontal"],[324,"polars_ops::series::ops::index"],[325,"polars_ops::series::ops::negate"],[326,"polars_ops::series::ops::not"],[327,"polars_ops::series::ops::int_range"]],"i":[0,0,0,0,0,0,0,1,4,4,4,4,4,4,4,4,0,8,4,4,4,4,0,0,0,16,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,26,0,0,0,27,0,0,35,36,0,0,36,36,0,0,0,0,35,0,0,35,36,0,37,37,37,37,36,0,32,35,36,37,0,31,31,0,31,31,0,32,35,36,37,32,35,36,37,32,35,36,37,32,35,36,37,32,35,35,36,37,37,35,32,38,38,38,38,32,35,37,0,32,35,36,37,32,35,36,37,32,35,36,37,32,35,36,37,32,32,32,35,35,35,36,36,36,37,37,37,32,35,36,36,37,37,32,32,35,36,37,43,32,35,36,37,46,46,46,46,32,32,35,36,37,43,32,35,36,37,36,37,43,32,43,37,32,0,32,32,32,32,32,35,36,37,36,37,32,35,36,37,32,35,36,37,32,35,36,37,32,32,32,0,0,54,0,54,54,0,0,0,54,52,52,53,54,54,0,0,0,54,54,54,54,0,0,54,54,54,54,55,55,54,54,54,54,54,54,54,54,54,0,55,55,0,0,0,0,0,0,0,54,54,54,54,55,55],"f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}2211```{{{d{B`}}}{{d{Bb}}}}{{{d{Bd}}{d{Bf}}Bh}{{Af{Bj}}}}0{{{d{Bd}}{d{Bj}}Bh}{{Af{Bj}}}}0{{{d{Bd}}}Bl}000{{{d{Bd}}{d{{l{Ad}}}}}{{Af{Bb}}}}0{{{d{Bd}}BnBh}{{Af{Ad}}}}03322{{{d{Bd}}}{{Af{Ad}}}}0{{{d{Bd}}}Ad}00011{{{d{Bd}}}{{Af{Bl}}}}0{{{d{Bd}}}Bb}0{{{d{Bd}}{d{Ad}}}{{Af{Bb}}}}0{{{d{Bd}}BnC`}Bb}0{{{d{Bd}}Cb}{{Af{Bb}}}}0{{{d{Bd}}j}Ad}077{{{d{Bd}}}{{Af{Bb}}}}00011{{{d{Bd}}Bb}Bb}0`{{{d{Cd}}}{{d{Bj}}}}```{{{d{Cf}}}{{d{Ch}}}}````````````````````````{{{d{c}}Cj}Cl{}}000{{Ch{d{{l{{d{Bf}}}}}}{d{{l{{d{Bf}}}}}}{Al{{d{Bf}}}}{d{Ch}}}Ch}{{{d{Cn}}{d{{l{Ab}}}}BhBh}Ch}0`{{{d{Cn}}{d{Ch}}{d{Ad}}{d{Ad}}D`}{{Af{Ch}}}}0{{{d{Bf}}{d{Bf}}}Db}{{{d{c}}}{{d{e}}}{}{}}000{{{d{Ddc}}}{{d{Dde}}}{}{}}000{{{d{D`}}}D`}{{{d{Df}}}Df}{{{d{Dh}}}Dh}{{{d{Dj}}}Dj}{{{d{c}}{d{Dde}}}Cl{}{}}000{{{d{c}}}Cl{}}00000{{{d{Df}}{d{Dh}}}Bh}`{{{d{Dl}}{d{Ch}}{Al{{d{Bf}}}}{Al{{Dn{BnC`}}}}}{{Af{Ch}}}}0{{{d{Dl}}{d{Ch}}{Al{{Dn{BnC`}}}}Bh}{{Af{{Dn{ChCh}}}}}}0{{}D`}{{}Df}{{}Dj}{{}E`}{C`{{d{c}}}{}}000{C`{{d{Ddc}}}{}}000{C`Cl}000{{{d{D`}}{d{D`}}}Bh}{{{d{Df}}{d{Df}}}Bh}{{{d{Dh}}{d{Dh}}}Bh}{{{d{Dj}}{d{Dj}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00000000000{{{d{D`}}{d{DdEb}}}Ed}{{{d{Df}}{d{DdEb}}}Ed}{{{d{Dh}}{d{DdEb}}}Ed}0{{{d{Dj}}{d{DdEb}}}Ed}0{DhD`}{cc{}}000{{{d{Ef}}{d{Ch}}ee}{{Af{Ch}}}{{Eh{Bf}}}{{An{}{{Aj{c}}}}}}{{{d{D`}}{d{Ddc}}}ClEj}{{{d{Df}}{d{Ddc}}}ClEj}{{{d{Dh}}{d{Ddc}}}ClEj}{{{d{Dj}}{d{Ddc}}}ClEj}{{{d{El}}{d{Ad}}DjBh}{{Af{{Dn{EnBh}}}}}}0{{{d{El}}{d{Ad}}DjBh}{{Af{{Dn{{F`{Ab}}{F`{Ab}}}}}}}}0`{{}C`}0007{ce{}{}}000{{{d{Dh}}}Bh}{{{d{Dj}}{d{Dh}}}{{Af{Cl}}}}{{{d{Ef}}{d{Ch}}eeD`}{{Af{Ch}}}{{Eh{Bf}}}{{An{}{{Aj{c}}}}}}`;{{{d{Dj}}}Bh}>{{{d{Ch}}{d{Ch}}Bh}{{Af{Fb}}}}{{{d{D`}}}Bh}`{{{d{D`}}}{{d{Bf}}}}`{{{d{c}}}e{}{}}000{{{d{c}}}Db{}}0{c{{Fd{e}}}{}{}}0000000{{{d{c}}}Ff{}}000`{{D`Df}D`}{{D`{Al{Db}}}D`}`````````{{{d{c}}Cj}Cl{}}{{{d{Fh}}}{{Al{C`}}}}0{{{d{Fj}}}{{d{Ad}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Ddc}}}{{d{Dde}}}{}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Fl}}}Fl}{{{d{c}}{d{Dde}}}Cl{}{}}{{{d{c}}}Cl{}}0{{{d{{l{Ad}}}}}{{Af{Ad}}}}{{{d{Ad}}C`}{{Af{Bl}}}}{{}Fl}{C`{{d{c}}}{}}{C`{{d{Ddc}}}{}}{C`Cl}{{{d{Fn}}{d{Bf}}}{{Af{Cl}}}}0{{{d{Fl}}{d{Fl}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00{{{d{Fl}}{d{DdEb}}}{{Fd{ClG`}}}}{cc{}}{{{d{Fl}}{d{Ddc}}}ClEj}{{}C`}{ce{}{}}{{{d{Ad}}}Bh}{{{d{Fn}}Cb}{{Af{Bh}}}}0{{{d{{l{Ad}}}}}{{Af{{Al{Ad}}}}}}00{{{d{Ad}}}{{Af{Ad}}}}0{{Bn{d{Bf}}}{{Af{Ad}}}}2{{{d{c}}}e{}{}}{c{{Fd{e}}}{}{}}0{{{d{c}}}Ff{}}{{{d{Fn}}BhBhDbBh}{{Af{Ch}}}}0","D":"Eh","p":[[10,"AsBinary",4,291],[1,"reference"],[8,"BinaryChunked",292],[10,"BinaryNameSpaceImpl",4,293],[1,"u8"],[1,"slice"],[8,"BooleanChunked",292],[10,"ChunkedSet",4,294],[8,"IdxSize",295],[5,"Series",296],[8,"PolarsResult",297],[10,"Copy",298],[17,"Item"],[6,"Option",299],[10,"IntoIterator",300],[10,"AsList",23],[8,"ListChunked",292],[10,"ListNameSpaceImpl",23,301],[1,"str"],[1,"bool"],[8,"StringChunked",292],[8,"IdxCa",302],[1,"i64"],[1,"usize"],[5,"SortOptions",303],[10,"AsString",72],[10,"IntoDf",74],[5,"DataFrame",304],[5,"Private",305],[1,"unit"],[10,"JoinDispatch",78,306],[5,"JoinArgs",78,307],[5,"String",308],[0,"mut"],[6,"JoinCoalesce",78,307],[6,"JoinType",78,307],[6,"JoinValidation",78,307],[10,"CrossJoin",78,309],[1,"tuple"],[8,"ChunkJoinOptIds",78,307],[5,"Formatter",310],[8,"Result",310],[10,"DataFrameJoinOps",78],[10,"AsRef",311],[10,"Hasher",312],[10,"SeriesJoin",78,313],[8,"InnerJoinIds",78,307],[5,"PrimitiveArray",314],[8,"LeftJoinIds",78,307],[6,"Result",315],[5,"TypeId",316],[10,"ArgAgg",238,317],[10,"SeriesSealed",238,318],[6,"SearchSortedSide",238,319],[10,"SeriesMethods",238,320],[5,"Error",310]],"r":[[4,291],[5,293],[6,294],[24,301],[78,307],[79,307],[82,309],[86,307],[87,307],[88,307],[89,306],[91,307],[92,307],[95,307],[101,313],[106,321],[109,321],[112,321],[144,306],[236,78],[237,74],[239,317],[242,319],[243,320],[244,318],[251,322],[252,322],[253,322],[258,323],[259,324],[275,324],[278,323],[279,323],[280,323],[281,325],[282,326],[283,327],[284,323]],"b":[[175,"impl-Display-for-JoinType"],[176,"impl-Debug-for-JoinType"],[177,"impl-Debug-for-JoinValidation"],[178,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPcAEQAAAAgACwABAA8AAgAVAA8AKQA3AGUABgBuABsAjAAoALoADADMAAEAzwAAANEAHgDxAAUA+QACAP8AEAARAQEAFwEKAA=="}],\
["polars_sql",{"t":"FNNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNNNNNNNONONNNNNNNNOMNNNNNNNNNNNNNNNONNONNNMNNNNNNNNNMNNNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_to_supertypes","check_lengths","check_lengths","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","collect_groups","contains","contains","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","flags","fmt","fmt","fmt_str","from","from","from","get_udf","get_udf","hash","init","init","init","into","into","into","is_groups_sensitive","register","register","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","all_functions","all_keywords"],"q":[[0,"polars_sql"],[32,"polars_sql::function_registry"],[107,"polars_sql::keywords"],[109,"dyn_clone::sealed"],[110,"polars_sql::context"],[111,"polars_lazy::frame"],[112,"polars_error"],[113,"alloc::string"],[114,"polars_utils::aliases"],[115,"alloc::vec"],[116,"alloc::sync"],[117,"polars_plan::dsl::expr"],[118,"core::convert"],[119,"core::result"],[120,"core::any"],[121,"polars_plan::plans::options"],[122,"polars_plan::plans"],[123,"core::fmt"],[124,"polars_plan::dsl::udf"],[125,"core::option"],[126,"core::hash"],[127,"polars_sql::sql_expr"]],"i":[0,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,5,5,5,5,5,0,5,5,5,5,5,5,5,21,0,21,0,0,0,19,21,22,19,21,22,19,21,19,19,19,19,21,19,21,19,19,21,21,19,13,22,19,22,19,21,22,19,21,22,19,21,19,19,19,19,19,19,21,19,22,19,21,13,22,19,22,19,21,22,19,21,19,13,22,19,21,22,19,21,22,19,21,22,19,21,22,19,21,0,0],"f":"`{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{j}}}j}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{ce{}{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{{{b{c}}}e{}{}}{c{{Bb{e}}}{}{}}0{{{b{c}}}Bd{}}{{{b{hj}}{b{n}}}f}9{{j{Al{Aj}}}j}``````{{{b{c}}d}f{}}0{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00`{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{{b{c}}{b{he}}}f{}{}}0{{{b{c}}}f{}}000`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{{b{c}}{b{e}}}Bh{}{}}00`{{{b{Bf}}{b{hBn}}}{{Bb{fC`}}}}{{{b{Bj}}{b{hBn}}}{{Bb{fC`}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bf}}{b{hc}}}fCf}{{}l}00{ce{}{}}00{{{b{Bf}}}Bh}{{{b{hAj}}{b{n}}Cb}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cb}{{Ab{f}}}}{{{b{c}}}e{}{}}0{c{{Bb{e}}}{}{}}00000{{{b{c}}}Bd{}}00666{{}{{Ah{{b{n}}}}}}0","D":"Dd","p":[[1,"reference"],[5,"Private",109],[1,"unit"],[0,"mut"],[5,"SQLContext",0,110],[1,"usize"],[1,"str"],[5,"LazyFrame",111],[8,"PolarsResult",112],[5,"String",113],[8,"PlHashMap",114],[5,"Vec",115],[10,"FunctionRegistry",32],[5,"Arc",116],[6,"Expr",117],[10,"AsRef",118],[6,"Result",119],[5,"TypeId",120],[5,"FunctionOptions",32,121],[1,"bool"],[6,"Context",32,122],[5,"DefaultFunctionRegistry",32],[5,"Formatter",123],[5,"Error",123],[5,"UserDefinedFunction",124],[6,"Option",125],[10,"Hasher",126]],"r":[[0,110],[24,127],[33,122],[36,121]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEsACgACAAkAEQAAABoAAwAfAAAAIgAAACUAAAAnABIAPAASAFMABABdAA4A"}],\
["polars_time",{"t":"PGFPPKKKPFCHHOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","DataPoint","Duration","Friday","Label","Left","Left","Monday","None","Right","Right","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","cmp","compare","days","days_only","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","ensure_duration_matches_data_type","ensure_is_constant_duration","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","neg","negative","new","new","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","truncate_impl","truncate_ms","truncate_ms","truncate_ns","truncate_ns","truncate_us","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[22,"polars_time::chunkedarray"],[24,"polars_time::chunkedarray::string"],[58,"polars_time::chunkedarray::string::infer"],[84,"polars_time::prelude"],[294,"polars_time::series"],[315,"chrono::naive::datetime"],[316,"polars_time::windows::duration"],[317,"polars_time::windows::group_by"],[318,"polars_core::datatypes::time_unit"],[319,"polars_arrow::legacy::time_zone"],[320,"core::option"],[321,"polars_core::chunked_array::logical::datetime"],[322,"polars_error"],[323,"polars_time::round"],[324,"polars_core::datatypes"],[325,"chrono::naive::time"],[326,"polars_core::chunked_array::logical::time"],[327,"polars_time::truncate"],[328,"polars_time::upsample"],[329,"polars_core::frame"],[330,"alloc::string"],[331,"polars_core::utils"],[332,"dyn_clone::sealed"],[333,"polars_time::chunkedarray::string::patterns"],[334,"core::fmt"],[335,"core::hash"],[336,"core::result"],[337,"core::any"],[338,"core::clone"],[339,"polars_time::windows::bounds"],[340,"polars_time::windows::window"],[341,"core::cmp"],[342,"polars_core::datatypes::dtype"],[343,"polars_core::frame::group_by::proxy"],[344,"alloc::vec"],[345,"core::ops::function"],[346,"polars_core::series"],[347,"polars_time::date_range"]],"i":[5,0,0,5,5,0,0,0,5,0,0,0,0,44,4,0,12,0,0,16,17,17,0,0,0,25,25,25,25,25,0,0,25,23,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,25,25,25,25,25,25,25,0,39,0,0,32,32,32,32,32,32,32,32,32,32,0,32,32,32,32,35,32,32,32,39,32,32,5,0,0,0,42,43,0,43,0,5,42,43,5,5,42,43,0,43,0,43,43,43,0,43,41,4,5,42,43,44,4,4,4,47,41,4,5,42,43,44,47,41,4,5,42,43,44,41,4,5,42,43,44,41,4,5,42,43,44,41,41,4,4,5,5,42,42,43,43,44,44,4,4,4,4,43,47,41,4,5,42,43,44,47,41,4,5,42,43,44,47,41,4,5,42,43,44,0,0,4,5,42,43,4,4,4,5,5,5,42,42,42,43,43,43,41,4,4,5,42,43,47,41,4,5,42,43,44,44,44,44,44,0,0,4,5,42,43,47,41,4,5,42,43,44,47,41,4,5,42,43,44,47,4,4,4,4,4,4,4,4,4,4,44,47,44,4,4,4,44,44,44,41,4,5,42,43,44,4,4,4,44,4,44,4,44,47,41,4,5,42,43,44,47,41,4,5,42,43,44,47,41,4,5,42,43,44,43,4,4,0,0,55,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57],"f":"```````````{{{d{b}}ffhjl{A`{{d{n}}}}}{{Ad{Ab}}}}{{{d{f}}}Af}```{{{d{Ah}}{d{Aj}}{A`{{d{n}}}}}{{Ad{Ah}}}}`{{{d{b}}AlAlhj}{{Ad{An}}}}{{{d{B`}}{A`{{d{n}}}}{d{Aj}}}{{Ad{B`}}}}{{{d{Bb}}c{d{b}}h}{{Ad{Bd}}}{{Bh{Bf}}}}0``````````{{{d{c}}Bj}Bl{}}{{{d{Bn}}}{{d{Aj}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{C`c}}}{{d{C`e}}}{}{}}{{{d{Cb}}}Cb}{{{d{c}}{d{C`e}}}Bl{}{}}{{{d{c}}}Bl{}}0{Cd{{d{c}}}{}}{Cd{{d{C`c}}}{}}{CdBl}{{{d{Cb}}{d{Cb}}}Af}{{{d{c}}{d{e}}}Af{}{}}00{{{d{Cb}}{d{C`Cf}}}Ch}{cc{}}{{{d{Cb}}{d{C`c}}}BlCj}`{{}Cd}{ce{}{}}{{{d{Cb}}{d{b}}}Af}{{{d{c}}}e{}{}}{c{{Cl{e}}}{}{}}0{{{d{c}}}Cn{}}````{{{d{c}}Bj}Bl{}}{{{d{c}}}{{d{e}}}{}{}}{{{d{C`c}}}{{d{C`e}}}{}{}}{{{d{{D`{c}}}}}{{D`{c}}}{DbDd}}{{{d{c}}{d{C`e}}}Bl{}{}}{{{d{c}}}Bl{}}{Cd{{d{c}}}{}}{Cd{{d{C`c}}}{}}{CdBl}{cc{}}{{{d{b}}}{{A`{Cb}}}}{{}Cd}{ce{}{}}`{{{d{C`{D`{c}}}}{d{b}}}A`Dd}{{{d{C`Df}}{d{{Dj{Dh}}}}{A`{l}}}{{A`{c}}}{}}`{{{d{c}}}e{}{}}{c{{Cl{e}}}{}{}}{{c{A`{l}}}{{Ad{{Dn{}{{Dl{e}}}}}}}{}{}}1{{{d{c}}}Cn{}}````````````````````````{{{d{c}}Bj}Bl{}}00000{{{d{h}}E`{A`{{d{n}}}}}{{Ad{E`}}}}00{{{d{c}}}{{d{e}}}{}{}}000000{{{d{C`c}}}{{d{C`e}}}{}{}}000000{{{d{Eb}}}Eb}{{{d{h}}}h}{{{d{j}}}j}{{{d{Ed}}}Ed}{{{d{Ef}}}Ef}{{{d{Eh}}}Eh}{{{d{c}}{d{C`e}}}Bl{}{}}00000{{{d{c}}}Bl{}}00000000000{{{d{h}}{d{h}}}Ej}{{{d{c}}{d{e}}}Ej{}{}}{{{d{h}}}E`}{{{d{h}}}Af}{{}Ef}{Cd{{d{c}}}{}}000000{Cd{{d{C`c}}}{}}000000{CdBl}000000{{h{d{El}}{d{b}}}{{Ad{Bl}}}}{{h{A`{{d{b}}}}{d{b}}}{{Ad{Bl}}}}{{{d{h}}{d{h}}}Af}{{{d{j}}{d{j}}}Af}{{{d{Ed}}{d{Ed}}}Af}{{{d{Ef}}{d{Ef}}}Af}{{{d{c}}{d{e}}}Af{}{}}00000000000{{{d{Eb}}{d{C`Cf}}}Ch}{{{d{h}}{d{C`Cf}}}Ch}0{{{d{j}}{d{C`Cf}}}Ch}{{{d{Ed}}{d{C`Cf}}}Ch}{{{d{Ef}}{d{C`Cf}}}Ch}{cc{}}000000{{{d{Eh}}E`j{A`{{d{n}}}}}{{Ad{Eb}}}}00{{{d{Eh}}Ebjl{A`{{d{n}}}}Ef}{{Ad{En}}}}{{hh{d{{Dj{E`}}}}jl{A`{n}}}{{Ad{F`}}}}{{Eh{d{{Dj{E`}}}}jl{d{{A`{Fb}}}}AfAfEf}{{Ff{F`{Fd{E`}}{Fd{E`}}}}}}{{{d{h}}{d{C`c}}}BlCj}{{{d{j}}{d{C`c}}}BlCj}{{{d{Ed}}{d{C`c}}}BlCj}{{{d{Ef}}{d{C`c}}}BlCj}{{}Cd}000000{ce{}{}}0000000{{{d{h}}{A`{{d{b}}}}}Af}{{{d{h}}}Af}0{{{d{h}}}E`}1{{hE`}h}1{hc{}}3{E`h}{{hhh}Eh}{{{d{C`En}}}{{A`{c}}}{}}`{{{d{b}}}h}`{{{d{h}}{d{h}}}{{A`{Ej}}}}{{{d{Eh}}E`{A`{{d{n}}}}}{{Ad{E`}}}}00{{{d{c}}}e{}{}}00000{{{d{c}}}Bf{}}{{{d{h}}E`{A`{{d{n}}}}ceg}{{Ad{E`}}}{{Fj{E`}{{Fh{E`}}}}}{{Fj{E`}{{Fh{f}}}}}{{Fj{f}{{Fh{E`}}}}}}{{{d{h}}E`{A`{{d{n}}}}}{{Ad{E`}}}}40404{c{{Cl{e}}}{}{}}0000000000000{{{d{c}}}Cn{}}000000{{{d{Ef}}}{{A`{Fl}}}}?{{{d{h}}}Af}``{{{d{Fn}}}{{d{G`}}}}{{{d{Gb}}}{{Ad{Gd}}}}{{{d{Gb}}}{{Ad{Gf}}}}0{{{d{Gb}}}{{Ad{Gh}}}}22112{{{d{Gb}}}{{Ad{Gj}}}}322{{{d{Gb}}{d{b}}}{{Ad{G`}}}}0334","D":"Gd","p":[[1,"str"],[1,"reference"],[5,"NaiveDateTime",315],[5,"Duration",84,316],[6,"ClosedWindow",84,317],[6,"TimeUnit",318],[6,"Tz",319],[6,"Option",320],[8,"DatetimeChunked",321],[8,"PolarsResult",322],[1,"bool"],[10,"PolarsRound",0,323],[8,"StringChunked",324],[5,"NaiveTime",325],[8,"TimeChunked",326],[10,"PolarsTruncate",0,327],[10,"PolarsUpsample",0,328],[5,"DataFrame",329],[5,"String",330],[10,"IntoVec",331],[5,"Private",332],[1,"unit"],[10,"AsString",24],[0,"mut"],[6,"Pattern",24,333],[1,"usize"],[5,"Formatter",334],[8,"Result",334],[10,"Hasher",335],[6,"Result",336],[5,"TypeId",337],[5,"DatetimeInfer",58],[10,"Clone",338],[10,"PolarsNumericType",324],[10,"StrpTimeParser",58],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",58],[1,"i64"],[5,"Bounds",84,339],[6,"Label",84,317],[6,"StartBy",84,317],[5,"Window",84,340],[6,"Ordering",341],[6,"DataType",342],[5,"BoundsIter",84,340],[8,"GroupsSlice",343],[8,"TimeZone",342],[5,"Vec",344],[1,"tuple"],[17,"Output"],[10,"Fn",345],[1,"u32"],[10,"AsSeries",294],[5,"Series",346],[10,"TemporalMethods",294],[8,"Int32Chunked",324],[8,"Int8Chunked",324],[8,"BooleanChunked",324],[8,"Int16Chunked",324]],"r":[[1,317],[2,316],[5,323],[6,327],[7,328],[9,340],[11,347],[12,347],[18,347],[22,24],[30,333],[85,339],[86,340],[87,317],[90,316],[92,317],[100,317],[102,294],[106,340],[181,316],[182,316],[216,317],[217,317]],"b":[[200,"impl-Debug-for-Duration"],[201,"impl-Display-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAEBFwAAAAkADQAFABQAAAAXABkAMgACADYAEQBJAAEATAATAGEACQBsAGEA1QAAANcAAQDbAAoA7QABAPEAAgD1AAAA+AACAPwAAQABAQgACwEAAA0BAAAPARoALgEAAA=="}],\
["polars_utils",{"t":"EECCCCCCCCCCCCCCCQQQQCCCCCCCQCCCQCCCCCCCCCQQCCRKMMRKIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNHHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHHHFNNNNNNNNNNNNNNHHFNNNNNNNNNNNNNNNNNNNNNNKNNNNNKMFNNNNNNNNNNNNNNNNNHHHHFKNNNNNNNNMNNNNNNNNNHNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRKIFKNNNNHNNNNNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHHHKKKRKRNNNNMMMHHKNNNNMMFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTRKMMHHFNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNKKKKKMMMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKMKKKRKKMMMMMMM","n":["IdxSize","NullableIdxSize","abs_diff","aliases","arena","atomic","binary_search","cache","cell","clmul","contention_pool","cpuid","fixedringbuffer","float","floor_divmod","fmt","foreign_vec","format_list","format_list_container","format_smartstring","format_tuple","functions","hashing","idx_vec","index","io","iter","macros","matches_any_order","mem","min_max","mmap","no_call_const","nulls","ord","partitioned","priority","slice","sort","sync","sys","total_ord","unitvec","unreachable_unchecked_release","unwrap","vec","Abs","AbsDiff","abs_diff","max_abs_diff","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","new","new","new","new","new","with_capacity","with_capacity","with_capacity","with_capacity","with_capacity","Arena","Node","add","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","cmp","compare","default","default","deref","deref","deref_mut","deref_mut","drop","drop","duplicate","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","get","get_many_mut","get_mut","get_node","get_unchecked","hash","init","init","into","into","is_empty","len","new","partial_cmp","pop","replace","replace_with","swap","take","to_owned","to_owned","try_from","try_from","try_into","try_into","try_replace_with","type_id","type_id","version","with_capacity","SyncCounter","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref","deref_mut","deref_mut","drop","from","init","into","manual_drop","new","to_owned","try_from","try_into","type_id","find_first_ge_index","find_first_gt_index","FastCachedFunc","FastFixedCache","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref","deref_mut","deref_mut","drop","drop","eval","from","from","get","get_mut","get_or_insert_with","init","init","insert","into","into","new","new","to_owned","try_from","try_from","try_get_or_insert_with","try_into","try_into","type_id","type_id","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","from","from","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","prefix_xorsum","LowContentionPool","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","new","set","try_from","try_into","type_id","has_fast_bmi2","is_avx512_enabled","FixedRingBuffer","as_slices","borrow","borrow_mut","capacity","deref","deref_mut","drop","drop","fill_repeat","from","init","into","is_empty","is_full","len","new","pop_front","push","remaining_capacity","try_from","try_into","type_id","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","FloorDivMod","wrapping_floor_div_mod","ForeignVec","borrow","borrow_mut","deref","deref","deref_mut","drop","drop","fmt","from","from","from_foreign","get_vec","init","into","try_from","try_into","type_id","arc_map","flatten","range_portion","try_arc_map","BytesHash","DirtyHash","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","dirty_hash","dirty_hash","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","hash_to_partition","init","into","is_null","new","peel_total_ord","to_owned","to_total_ord","tot_eq","tot_hash","try_from","try_into","type_id","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clone","clone_into","clone_to_uninit","default","deref","deref","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extend","fmt","from","from","from","from_fallible_iter","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","borrow","borrow_mut","borrow_mut","check_bounds","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extract","fmt","fmt","from","from","from","get","get_unchecked","idx","init","init","inner","inner_mut","into","into","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","null","null_count","store","to_idx","to_opt","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","_limit_path_len_io_err","create_file","open_file","EnumerateIdxTrait","FallibleIterator","FromFallibleIterator","IntoIterCopied","IntoIteratorCopied","OwnedItem","enumerate_idx","enumerate_idx","enumerate_u32","enumerate_u32","from_fallible_iter","get_result","into_iter","prefetch_l2","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","MemReader","MemSlice","Mmap","MmapSlice","advise","advise_range","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from_mmap","from_reader","from_slice","from_slice","from_vec","from_vec","init","init","init","init","into","into","into","into","lock","make_mut","map","new","new","position","prefetch","read","read_slice","remaining_len","remap","seek","slice","slice","to_owned","to_owned","to_owned","to_vec","total_len","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unlock","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","Priority","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","cmp","compare","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","init","into","partial_cmp","to_owned","try_from","try_into","type_id","Extrema","GetSaferUnchecked","Slice2Uninit","SliceAble","SortedSlice","as_uninit","get_unchecked_release","get_unchecked_release_mut","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","deref_unchecked","drop","fmt","from","from","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","clone_to_uninit","clone_to_uninit","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","equivalent","equivalent","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","UnwrapUncheckedRelease","unwrap_unchecked_release","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[46,"polars_utils::abs_diff"],[50,"polars_utils::aliases"],[66,"polars_utils::arena"],[130,"polars_utils::atomic"],[151,"polars_utils::binary_search"],[153,"polars_utils::cache"],[190,"polars_utils::cell"],[210,"polars_utils::clmul"],[214,"polars_utils::contention_pool"],[229,"polars_utils::cpuid"],[231,"polars_utils::fixedringbuffer"],[254,"polars_utils::float"],[260,"polars_utils::floor_divmod"],[262,"polars_utils::foreign_vec"],[280,"polars_utils::functions"],[284,"polars_utils::hashing"],[318,"polars_utils::idx_vec"],[363,"polars_utils::index"],[429,"polars_utils::io"],[432,"polars_utils::iter"],[445,"polars_utils::mem"],[447,"polars_utils::min_max"],[454,"polars_utils::mmap"],[548,"polars_utils::nulls"],[553,"polars_utils::ord"],[555,"polars_utils::partitioned"],[574,"polars_utils::priority"],[599,"polars_utils::slice"],[613,"polars_utils::sort"],[615,"polars_utils::sync"],[640,"polars_utils::sys"],[654,"polars_utils::total_ord"],[706,"polars_utils::unwrap"],[708,"polars_utils::vec"],[721,"num_traits"],[722,"core::cmp"],[723,"core::marker"],[724,"core::fmt"],[725,"core::clone"],[726,"core::option"],[727,"core::hash"],[728,"core::default"],[729,"core::ops::function"],[730,"core::result"],[731,"core::any"],[732,"core::borrow"],[733,"alloc::vec"],[734,"alloc::sync"],[735,"core::convert"],[736,"core::ops::range"],[737,"core::iter::traits::collect"],[738,"polars_utils::iter::fallible"],[739,"core::slice::iter"],[740,"polars_error"],[741,"std::path"],[742,"std::io::error"],[743,"std::fs"],[744,"polars_utils::iter::enumerate_idx"],[745,"core::error"],[746,"core::iter::traits::iterator"],[747,"memmap2"],[748,"memmap2::advice"],[749,"std::io"],[750,"hashbrown::map"],[751,"core::mem::maybe_uninit"],[752,"core::slice::index"],[753,"num_traits::cast"],[754,"rayon_core::thread_pool"]],"if":"````````````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}``````00000{Abc{}}{Ab{{Ad{ce}}}{}{}}{Ab{{Af{c}}}{}}22``{{{Al{Ah{Aj{c}}}}c}An{}}{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{Ah{Aj{c}}}}}B`{}}{{{Al{An}}}An}{{{Al{{Aj{c}}}}}{{Aj{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{{{Al{c}}}B`{}}00{{{Al{An}}{Al{An}}}Bd}{{{Al{c}}{Al{e}}}Bd{}{}}{{}An}{{}{{Aj{c}}}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Aj{c}}}}An}AnBb}{{{Al{An}}{Al{An}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{An}}{Al{AhBh}}}Bj}{{{Al{{Aj{c}}}}{Al{AhBh}}}Bjl}{cc{}}0{{{Al{{Aj{c}}}}An}{{Al{c}}}{}}{{{Al{Ah{Aj{c}}}}{Bl{An}}}{{Bl{{Al{Ahc}}}}}{}}{{{Al{Ah{Aj{c}}}}An}{{Al{Ahc}}}{}}{{{Al{{Aj{c}}}}{Al{c}}}{{Bn{An}}}{}}3{{{Al{An}}{Al{Ahc}}}B`C`}{{}Ab}0{ce{}{}}0{{{Al{{Aj{c}}}}}Bf{}}{{{Al{{Aj{c}}}}}Ab{}}{{}{{Aj{c}}}{}}{{{Al{An}}{Al{An}}}{{Bn{Bd}}}}{{{Al{Ah{Aj{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Aj{c}}}}Anc}c{}}{{{Al{Ah{Aj{c}}}}Ane}B`Cb{{Cf{c}{{Cd{c}}}}}}{{{Al{Ah{Aj{c}}}}AnAn}B`{}}{{{Al{Ah{Aj{c}}}}An}cCb}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{Ah{Aj{c}}}}Ane}{{Ch{B``}}}Cb{{Cj{c}{{Cd{{Ch{c`}}}}}}}}{{{Al{c}}}Cl{}}0{{{Al{{Aj{c}}}}}Cn{}}{Ab{{Aj{c}}}{}}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{D`}}}D`}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}{{}D`}{{{Al{D`}}}{{Al{c}}}{}}{Ab{{Al{c}}}{}}{{{Al{AhD`}}}{{Al{Ahc}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{ce{}{}}{{{Al{AhD`}}}B`}{AbD`}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Al{{Db{c}}}}c}AbDd}0``{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Df{ce}}}}}{{Df{ce}}}BbBb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}{{}{{Df{ce}}}{DhDj}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Dl{ceg}}}}cBf}e{DhDjBb}j{{Cj{c}{{Cd{e}}}}}}{cc{}}0{{{Al{{Df{eg}}}}{Al{c}}}{{Bn{{Al{g}}}}}{DhDjDn}{{E`{c}}DhDj}{}}{{{Al{Ah{Df{eg}}}}{Al{c}}}{{Bn{{Al{Ahg}}}}}{DhDjDn}{{E`{c}}DhDj}{}}{{{Al{Ah{Df{eg}}}}{Al{c}}i}{{Al{Ahg}}}{}{{E`{c}}DhDj}{}{{Cf{{Al{e}}}{{Cd{g}}}}}}{{}Ab}0{{{Al{Ah{Df{ce}}}}ce}{{Al{Ahe}}}{DhDj}{}}{ce{}{}}0{{gAb}{{Dl{ceg}}}{DhDjBb}j{{Cj{c}{{Cd{e}}}}}}{Ab{{Df{ce}}}{DhDj}{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{Ah{Df{eg}}}}{Al{c}}k}{{Ch{{Al{Ahg}}i}}}{}{{E`{c}}DhDj}{}{}{{Cf{{Al{e}}}{{Cd{{Ch{gi}}}}}}}}11{{{Al{c}}}Cl{}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{}{{Eb{c}}}Cb}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{Edc{}}{c{{Eb{c}}}{}}{cc{}}{{{Al{{Eb{c}}}}}{}Dn}{{{Al{Ah{Eb{c}}}}}{{Al{Ahc}}}Dn}{{}Ab}{ce{}{}}{{{Eb{c}}}c{}}6{{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{EfEf}Ef}0{EfEf}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}?{{{Al{{Eh{c}}}}}cCb}=<{Ab{{Eh{c}}}Cb}{{{Al{{Eh{c}}}}c}B`Cb};;:{{}Bf}0`{{{Al{{Ej{c}}}}}{{El{{Al{{Db{c}}}}{Al{{Db{c}}}}}}}{}}98{{{Al{{Ej{c}}}}}Ab{}}876{{{Al{Ah{Ej{c}}}}}B`{}}{{{Al{Ah{Ej{c}}}}cAb}Abj}{cc{}}{{}Ab}{ce{}{}}{{{Al{{Ej{c}}}}}Bf{}}06{Ab{{Ej{c}}}{}}{{{Al{Ah{Ej{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Ej{c}}}}c}{{Bn{B`}}}{}}9{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`=={{{Al{En}}}Bf}>0`{{F`F`}{{El{F`F`}}}}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Fb{ce}}}}}{{Al{{Db{e}}}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Ah{Fb{ce}}}}}B`{}{}}{AbB`}{{{Al{{Fb{ce}}}}{Al{AhBh}}}Bj{}l}{{{Fd{c}}}{{Fb{ec}}}{}{}}{cc{}}{{Abc}{{Fb{ce}}}{}{}}{{{Al{Ah{Fb{ce}}}}}{{Bn{{Al{Ah{Fd{e}}}}}}}{}{}}{{}Ab}{ce{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Ff{c}}e}{{Ff{c}}}Bb{{Cj{c}{{Cd{c}}}}}}{{{Al{{Db{e}}}}{Bn{Ab}}}{{Fd{c}}}Bb{{Fh{{Db{c}}}}}}{{AbAb{Fj{Ab}}}{{Fj{Ab}}}}{{{Ff{c}}g}{{Ch{{Ff{c}}e}}}Bb{}{{Cj{c}{{Cd{{Ch{ce}}}}}}}}``{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{Fl}}}Fl}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}0{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Fn}}}Ef}{{{Al{Fl}}}Ef}{AbB`}{{{Al{Fl}}{Al{Fl}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Fl}}{Al{AhBh}}}Bj}{cc{}}{{{Al{Fl}}{Al{Ahc}}}B`C`}{{EfAb}Ab}{{}Ab}{ce{}{}}{{{Al{Fl}}}Bf}{{{Bn{{Al{{Db{G`}}}}}}Ef}Fl}2{{{Al{c}}}e{}{}}{{{Al{Fl}}}c{}};7{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Flc{}}``{{{Al{Ah{Gb{c}}}}}{{Al{Ah{Db{c}}}}}{}}0{{{Al{{Gb{c}}}}}{{Al{{Db{c}}}}}{}}0{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Gb{c}}}}}Ab{}}{{{Al{{Gb{c}}}}}{{Gb{c}}}{}}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}{{}{{Gb{c}}}{}}{{{Al{{Gb{c}}}}}{{Al{e}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Ah{Gb{c}}}}}B`{}}{AbB`}{{{Al{{Gb{c}}}}{Al{{Gb{c}}}}}BfGd}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Ah{Gb{c}}}}e}B`{}{{Gh{}{{Gf{c}}}}}}{{{Al{{Gb{c}}}}{Al{AhBh}}}Bjl}{cc{}}{{{Fd{c}}}{{Gb{c}}}{}}{{{Al{{Db{c}}}}}{{Gb{c}}}Bb}{g{{Ch{ic}}}{}{}{{Gj{c}{{Gf{e}}}}}{}}{e{{Gb{c}}}{}{{Gh{}{{Gf{c}}}}}}{{}Ab}{ce{}{}}{{{Al{{Gb{c}}}}}Bf{}}{{{Al{{Gb{c}}}}}{{Gl{c}}}{}}{{{Al{Ah{Gb{c}}}}}{{Gn{c}}}{}}{{{Al{{Gb{c}}}}}Ab{}}{{}{{Gb{c}}}{}}{{{Al{Ah{Gb{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Gb{c}}}}c}B`{}}0{{{Al{Ah{Gb{c}}}}Ab}B`{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Ab{{Gb{c}}}{}}`````````{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Db{H`}}}}H`}{{Hb{B`}}}}{{{Al{Hd}}}Hd}{{{Al{Hf}}}Hf}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{{{Al{c}}}B`{}}000{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Hd}}{Al{Hd}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{Hf{{El{H`H`}}}}{{{Al{Hd}}{Al{AhBh}}}Bj}{{{Al{Hf}}{Al{AhBh}}}Bj}{cc{}}{H`Hd}1{{{Al{{Hh{}{{Gf{c}}}}}}Ab}cHj}0{{{Al{Hd}}}H`}{{}Ab}0`{{{Al{AhHf}}}{{Al{AhEf}}}}{ce{}{}}0{{{Al{Hl}}}Bf}{{{Al{Hf}}}Bf}{{{Al{Hd}}}Bf}{{{Al{c}}}Bf{}}{{{Al{Hl}}}Ab}{{}Hd}{{}Hf}{{{Al{Hn}}}Ab}{{H`H`}Hf}{{I`Ef}H`}{{{Al{Hd}}}{{Bn{H`}}}}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{c}}}Cl{}}0{{{Al{Ib}}Id}If}{{{Al{Ib}}}{{Hb{Ih}}}}0``````{Ij{{`{IjH`}}}}0{Ij{{`{IjCn}}}}0{g{{Ch{Ilc}}}In{}{{Gj{c}{{Gf{e}}}}}}{{{Al{AhGj}}}{{Ch{B`c}}}In}{{{Jd{}{{J`{c}}{Jb{e}}}}}e{}{{Jf{}{{Gf{c}}}}}}{G`B`}{{{Al{{Db{c}}}}}{{Al{Ah{Db{c}}}}}j}`{{JhJh}Jh}000{{{Al{Jh}}{Al{Jh}}}Bf}0````{{{Al{Jj}}Jl}{{Ch{B`Id}}}}{{{Al{Jj}}JlAbAb}{{Ch{B`Id}}}}{{{Al{Jj}}}{{Al{{Db{G`}}}}}}{{{Al{c}}}{{Al{e}}}{}{}}000{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}000{{{Al{Jn}}}Jn}{{{Al{K`}}}K`}{{{Al{Kb}}}Kb}{{{Al{c}}{Al{Ahe}}}B`{}{}}00{{{Al{c}}}B`{}}00{{}Kb}{Ab{{Al{c}}}{}}90{{{Al{Jn}}}{{Al{c}}}{}}1{{{Al{Kb}}}{{Al{c}}}{}}2{Ab{{Al{Ahc}}}{}}000{AbB`}000{{{Al{Jj}}{Al{AhBh}}}{{Ch{B`Kd}}}}{{{Al{Jn}}{Al{AhBh}}}Bj}{{{Al{K`}}{Al{AhBh}}}Bj}{{{Al{Kb}}{Al{AhBh}}}Bj}{cc{}}000{JnKb}{c{{Kf{K`}}}Kh}{{{Al{{Db{G`}}}}}K`}{{{Al{{Db{G`}}}}}Kb}{{{Fd{G`}}}K`}{{{Fd{G`}}}Kb}{{}Ab}000{ce{}{}}000{{{Al{Jj}}}{{Ch{B`Id}}}}{Jj{{Ch{KjId}}}}{c{{Ch{JjId}}}Kl}{JjJn}{KbK`}{{{Al{K`}}}Ab}{{{Al{Kb}}}B`}{{{Al{AhK`}}{Al{Ah{Db{G`}}}}}{{Kf{Ab}}}}{{{Al{AhK`}}Ab}Kb}3{{{Al{AhJj}}AbKn}{{Ch{B`Id}}}}{{{Al{AhK`}}L`}{{Kf{Ef}}}}{{{Al{Jn}}AbAb}Jn}{{{Al{Kb}}AbAb}Kb}{{{Al{c}}}e{}{}}00{Kb{{Fd{G`}}}}9{c{{Ch{e}}}{}{}}0000000{{{Al{c}}}Cl{}}000{{{Al{Jj}}}{{Ch{B`Id}}}}```{{{Al{{Hj{}{{Lb{c}}}}}}}Bf{}}{{{Hj{}{{Lb{c}}}}}c{}}{{{Al{c}}{Al{c}}}Bd{hEn}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{{Al{{Ld{ceg}}}}}{{Al{{Db{{Lf{ceg}}}}}}}{}{}{}}{{{Al{Ah{Ld{ceg}}}}}{{Al{Ah{Fd{{Lf{ceg}}}}}}}{}{}{}}{ce{}{}}{{{Fd{{Lf{ceg}}}}}{{Ld{ceg}}}{}{}{}}{{{Al{{Ld{ceg}}}}Ef}{{Lh{ceg}}}{}{}{}}{{{Al{{Ld{ceg}}}}Ef}{{El{{Lh{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Ld{ceg}}}}Ef}{{El{{Lj{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Ld{ceg}}}}Ef}{{Lj{ceg}}}{}{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Ll{ce}}}}}{{Ll{ce}}}BbBb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}0{{{Al{{Ll{ce}}}}{Al{{Ll{ce}}}}}Bd{DdDj}{}}{{{Al{c}}{Al{e}}}Bd{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{{Ll{ce}}}}{Al{{Ll{ce}}}}}BfDj{}}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{{Ll{ce}}}}{Al{AhBh}}}Bjll}{cc{}}{{}Ab}{ce{}{}}{{{Al{{Ll{ce}}}}{Al{{Ll{ce}}}}}{{Bn{Bd}}}{DdDj}{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`````{{{Al{Ln}}}{{Al{{Db{{M`{c}}}}}}}{}}{{{Al{Mb}}e}Al{}{{Md{{Db{c}}}}}}{{{Al{AhMb}}e}{{Al{Ah}}}{}{{Md{{Db{c}}}}}}{{{Al{Mf}}}Bf}{{{Al{{Db{G`}}}}}Ef}{{{Al{Mh}}}{{Bn{{Al{c}}}}}{}}0{{{Al{Mj}}{Fj{Ab}}}Mj}0{{e{Al{Ah{Fd{G`}}}}Ab}{{Al{Ah{Db{g}}}}}{Mlj}{{Gh{}{{Gf{c}}}}}{Mnj}}{{{Al{N`}}{Al{{Db{{El{H`H`}}}}}}{Al{Ah{Fd{H`}}}}}B`}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Nb{c}}}}}{{Nb{c}}}{}}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}0{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{Nb{c}}}}}{{Al{c}}}{}}{AbB`}{{{Al{{Nb{c}}}}{Al{AhBh}}}Bjl}{{}{{Nb{c}}}{}}{cc{}}1{{{Al{{Nb{c}}}}}{}{}}{{}Ab}{ce{}{}}{{{Al{{Nb{c}}}}}Bf{}}55{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}``{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}?><{{{Al{Nd}}}Ef}:87443```````21{NfNf}{NhNh}{{{Al{{Nj{c}}}}}{{Nj{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}0{{{Al{{Nj{c}}}}{Al{{Nj{c}}}}}BdMl}{{{Al{c}}{Al{e}}}Bd{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{Nj{c}}}}}EfFn}{AbB`}{{{Al{{Nj{c}}}}{Al{{Nj{c}}}}}BfNl}{{{Al{c}}{Al{e}}}Bf{}{}}00{cc{}}{{{Al{{Nj{c}}}}{Al{{Nj{c}}}}}BfMl}0{{{Al{{Nj{c}}}}{Al{Ahe}}}B`NnC`}{{}Ab}{ce{}{}}{{{Al{{Nj{c}}}}}BfHj}447{{{Al{{Nj{c}}}}{Al{{Nj{c}}}}}{{Bn{Bd}}}Ml}2{{{Al{c}}}e{}{}}{{{Al{{Od{}{{O`{c}}{Ob{e}}}}}}}c{}{}}{{{Al{Ml}}{Al{Ml}}}Bd}{{{Al{Nl}}{Al{Nl}}}Bf}{{{Al{Ml}}{Al{Ml}}}Bf}0{{{Al{Nn}}{Al{Ahc}}}B`C`}{{{Al{{Db{Nn}}}}{Al{Ahc}}}B`C`}223{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Nj{c}}}eHj{}}`{Ofc{}}``````{{{Al{{Oj{}{{Oh{c}}}}}}g}{{Fd{e}}}{}{}{{Cj{{Al{c}}}{{Cd{e}}}}}}{{{Oj{}{{Oh{c}}}}g}{{Fd{e}}}{}{}{{Cj{c}{{Cd{e}}}}}}{{{Al{AhOl}}Abc}B`j}{On{{El{AbAb}}}}{{{Al{AhA@`}}c}B`{}}{{{Al{On}}}{{El{AbAb}}}}{{AbNh}A@b}","D":"Mn","p":[[17,"Abs"],[10,"AbsDiff",46],[10,"Num",721],[10,"PartialOrd",722],[10,"Copy",723],[10,"Debug",724],[10,"Send",723],[10,"Sync",723],[1,"usize"],[8,"PlHashMap",50],[8,"PlHashSet",50],[0,"mut"],[5,"Arena",66],[1,"reference"],[5,"Node",66],[1,"unit"],[10,"Clone",725],[6,"Ordering",722],[1,"bool"],[5,"Formatter",724],[8,"Result",724],[1,"array"],[6,"Option",726],[10,"Hasher",727],[10,"Default",728],[17,"Output"],[10,"FnOnce",729],[6,"Result",730],[10,"FnMut",729],[5,"TypeId",731],[1,"u32"],[5,"SyncCounter",130],[1,"slice"],[10,"Ord",722],[5,"FastFixedCache",153],[10,"Hash",727],[10,"Eq",722],[5,"FastCachedFunc",153],[10,"Sized",723],[10,"Borrow",732],[5,"SyncUnsafeCell",190],[1,"never"],[1,"u64"],[5,"LowContentionPool",214],[5,"FixedRingBuffer",231],[1,"tuple"],[10,"IsFloat",254],[10,"FloorDivMod",260],[5,"ForeignVec",262],[5,"Vec",733],[5,"Arc",734],[10,"AsRef",735],[5,"Range",736],[5,"BytesHash",284],[10,"DirtyHash",284],[1,"u8"],[5,"UnitVec",318],[10,"PartialEq",722],[17,"Item"],[10,"IntoIterator",737],[10,"FallibleIterator",432,738],[5,"Iter",739],[5,"IterMut",739],[8,"IdxSize",363],[8,"PolarsResult",740],[5,"NullableIdxSize",363],[5,"ChunkId",363],[10,"Indexable",363],[10,"IsNull",548],[10,"Bounded",363],[10,"NullCount",363],[10,"ToIdx",363],[5,"Path",741],[5,"Error",742],[6,"PolarsError",740],[5,"File",743],[10,"EnumerateIdxTrait",432,744],[10,"FromFallibleIterator",432,738],[10,"Error",745],[17,"OwnedItem"],[17,"IntoIterCopied"],[10,"IntoIteratorCopied",432],[10,"Iterator",746],[10,"MinMax",447],[5,"Mmap",454,747],[6,"Advice",748],[5,"MmapSlice",454],[5,"MemReader",454],[5,"MemSlice",454],[5,"Error",724],[8,"Result",742],[10,"Read",749],[5,"MmapMut",747],[10,"MmapAsRawDesc",747],[5,"RemapOptions",747],[6,"SeekFrom",749],[17,"Inner"],[5,"PartitionedHashMap",555],[5,"HashMap",750],[5,"RawEntryBuilder",750],[5,"RawEntryBuilderMut",750],[5,"Priority",574],[10,"Slice2Uninit",599],[20,"MaybeUninit",751],[10,"GetSaferUnchecked",599],[10,"SliceIndex",752],[10,"SortedSlice",599],[10,"Extrema",599],[10,"SliceAble",599],[10,"TotalOrd",654],[10,"FromPrimitive",753],[5,"ThreadPool",754],[5,"SyncPtr",615],[5,"MemInfo",640],[1,"f32"],[1,"f64"],[5,"TotalOrdWrap",654],[10,"TotalEq",654],[10,"TotalHash",654],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",654],[10,"UnwrapUncheckedRelease",706],[17,"ItemIn"],[10,"ConvertVec",708],[10,"ResizeFaster",708],[10,"IntoRawParts",708],[10,"PushUnchecked",708],[10,"CapacityByFactor",708],[10,"InitHashMaps",50],[8,"PlIndexMap",50],[8,"PlIndexSet",50]],"r":[[0,363],[1,363],[432,744],[433,738],[434,738],[456,747]],"b":[[343,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"],[344,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAGICRgAAAAgACgBYAGUAAABnAAEAagACAG8AEwCEAAoAkAAAAJMABACbAA8ArQAFALUACQDAAAEAwwADAMsAAADQAAwA3gABAOEABgDqAAYA8wAAAPUAAwD7AAMAAAEGAAgBCAAUAQAAFgEGAB4BEAAwAQIANAELAEEBFQBYAQQAXgEGAGYBKACQAQAAkgEAAJQBBACbARgAtQEAALcBBgDAAQYAzQElAPcBCQAIAgIADAICABACAAASAhEAJQIEACwCBQAzAgIANwIHAEACDwBRAgAAUwIKAGACBABmAgAAaQIHAHICAgB2AgIAegIAAHwCBQCDAgQAigIAAIwCAwCUAgMAmgINAKkCAwCuAhUAxQIEAMsCAwDQAgEA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
